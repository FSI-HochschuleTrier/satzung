%!PS-Adobe-3.1 EPSF-3.0%%Title: fh_fb_computer_logoA_4C.eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Roland Dahm%%CreationDate: 01.05.2006%%BoundingBox: 0 0 381 108%%HiResBoundingBox: 0 0 380.8057 107.5284%%CropBox: 0 0 380.8057 107.5284%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 36 8%%BeginData: 5684 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0BFFA8A87D7D7D7E7D7DA8FD76FFA87D537D7D7D597D59A8FD76%FFA8FD087DA8FD76FFFD047D597D7D7D53A8FD76FFA87D7D7D7EFD047DA8%FD76FFFD047D597D7D7D53A8FD08FFA8A9A8FFFFFFAFFD04FFA8A8FD0FFF%84A8FD04FFA8A8FFFFA8FFFFFFA8FFFFA8A8FFFFFFA8A8A8FFA8FFFFFFA8%FD07FFA8FFFFFFA8FFA8A9FFFFA8FFA8FFFFFFA8FFA8FD05FFA8FFA8FFFF%FFA8FFA8FFA884A87DA8A8A8FFFFFFA8FD087DA8FD08FF53537D7DFF7E52%FFFFFF7D537D52FF7DFFFFFF7DA97DFFFFA8A8FF527D537DFFFFFD047DFF%7DA8FFFF7DFF7D7D7D59FF7D537D53A8A87DFFFF7DA87DFFFFA8A8FF7DFF%FFFF7D527D7DFFA8522727277D7D27272759FF7D52FF52275228FF522727%277D537D597D537D5384FFFF7D7D597D597D7D7E7DA8FD08FF52FD04FF7D%52A8FF8452FFFFA8A87DFFFFA87D7E7DFFFF7DA8537DFFFF527EA853FFFF%7DFF53FFFFFF53A828FFFFA8A852A8FF84A87DA8FFFF52A852FFFFA87DFF%52FFFFFF7DA8FD05FF7D27FFFF5227FF5227FF7D27FFF87DFFFFFF5252FF%52277E7D7D7D7E7D7D7DA9FFA87D7E7DA8FD0DFF537D7DA8FF7DFF53FF7D%A8FD04FF52FD047DFF527E7D7DA87DFFFFFFA87DA87DFD04FF7D53847D7D%FF7E52A8FFA87DFD04FFA852A87D52A87DFFFFA884FF7DFFFFFF7D52847D%FFFFFF7D28FFFF52277D5252FF7D52FF27275253FF52527D527D597D7D7D%59FD047DFF7D7D53A8FD0EFF52A884FF537D8452A87D7DFD04FF7D7DA87D%7DA87DA8A852A852FFFFFF7E7D7D7EFD04FF527DA8A852FFFFA8537D7D7D%FD04FF7D7DA8A852A852FFFFA87DFF53FFFFFF7D7DA8A8FFFFFF7D27FFFF%7D277DF87DFF7D27FF27527DA8FF52277D21FD097DA8FFA87D7DA8FD0EFF%53FFFFFF527DA8537DA87DFFFF7DFF7DFFFFFF7DA87DFFFFA8847D7DFFFF%7DA8FF52FFFF84A87DA9FFFF7DA87DFFFF52AF52FFFFA8A8A884FFFF7DA8%7DA8FF7D7DFF7DFFFFFF7DA8FD05FF5327FFFF5252FF7D27FF7D27A8277D%FFA8FF287DFF53277D7D597D7D7D597D7DFF7D7D7DFD04FFA97EA87EA8FD%06FF52FFFFA87DFFFFFF52FF5259527DA87DA8FFA87DA87DFFFF7DA8A87D%525353FFFF7D527D52FF7DFFFFFF7DFF5259527DFFA8527D52FF7DA8FFFF%52FFA8525259A8FF527D52A87D52527DA8FFFF7D27FFFF7D52FF7D27A87D%52FF27522752A87D52FF7D287D7D7E7D7D7D7E7DA8FFA87D7DA8FFAF5A0D%300D2F2FFD11FFA8FD11FFA8FD05FFA8FD09FFA8FD05FFA8FD15FFA9FD1A%FFFD047D597D597D7DFF7D7D7DFFFF54070D070D072FFD6DFFA9A87D7D7D%A8FFA87D7EFFA9070D0D0D072F2FFD6FFFA8597D7DFF7D7D59FF7E0D070D%070D072FFD06FFA8FD15FFA8FFA8FFFFFFA8FD09FFA8FD09FFA8FD0BFFA8%FD0BFFA8FD20FFA87D7DA8FFA87D7EFF8507300D0D0D2F2FFD05FFFD05A8%FFFFFF7DFD05FF7DFFFFFF7DFFA8FFA87DA8A8FFFFFF7D7EFFFFFFA8A8FD%04FF7EFFFFFF7DA87DA87DFFA9A8FD04FF7DFFFFFFA87EA8FD07FF7DFF7D%7DA8FD04FFA8AFFFA8A8A8FFFFFFA8FFA9FD10FF7D7D7DFF7D7D59FF7E0D%070D070D0730FD06FF52FD047D7EA8FD057DA87D7D7E7E7D7D7DA8FF7DA8%7D7D7DFF7DA8537D7DA8527D52FD047DFFFFA8597D7D7E7D7D7DA87DA87D%7D52A8527D7D7DFFA87DA8527D7D84FFA87EA87D7D7DA87DA852A87D7D7D%A87D7D7D53A8FD0EFFA87E7DA8FFA87D7DFF85070D072F0D0D2FFD05FFA9%7DA87D7D7D53A87D7D527D7DA87DA8FD047D52FFA8A87E7D7DFFFF7E7D53%597D7DA87D7D7D7E527DFFFFA87D7D7D7E7DA8A87D7D59A8A8A8597D7DA8%7DFFA87D7DA87D7D7DFF7DA8FD057DA87D527DA87DA87DA87D7D7DA8FD0F%FF597D7DFF7D7D7DFF7E0D070D2FA9A8FD07FFA8FFA87DA87D7DFD04A87D%7DA8A8A87DA87D7DAFFFA8A87DA8A8FFA8A87DA87DFD06A8A97D7DA8FF7E%A8A8FFA8FFFD04A87DFFA8A87DFD04A8FF7DA8A8A87DA8FFA87DA87DA87D%A8A8A87DFD04A87EA8A87D527DFD0EFFA87E7DA8FFA87D7DFF850D2F2FFD%63FF7DFD10FF597D7DFF7D7D7DFF7E0D075AFD0AFFA8FFA8FD0BFFA8FD06%FFA884FF7EA8FD04FFA8A8A8FFFFFFA8FFA87D7DFD40FFAF7D7DA8FFA87D%7EFF84072F5AFD09FFA87EA8A87DFD05A87EA87DA8A87D7DA8A8FF7DA852%A8FF7D7DFF7DA87DA87DFF84A8A87DA8FF52FFFD04A87DA87DA8A8A87DA8%7EFD34FF597D7DFF7D7D53FF7E0D067EFD0AFF7DFF7D7D7DA87D7D527D52%A8527D7DA8527EA87D7D7DA8FF527D7DA8527E7DA87D7D527D7DA8FF7D52%7DA87D527D7D7D52A87D597D7DA8FD33FFA87DA8FFA87DA8FFA92F307EFD%0AFFA87DFD05A8847D7DA8A87D7EA8A87EA8FF7DA87DFFA8A8A87D7D7D53%A8A8FFFD047DA8FF7DA87D7EA87D7DA87E7D7D8452A87DFD5AFF7DFFFFFF%A8FD05FFA8FFA8A8FD06FFA8FDFCFFFDFCFFFD63FFA9537EFD18FF7E5A5A%FD04FF7EA8FD5CFF2F5A2FAF7E84FFA87EA9A8FF7E84A8A984A92F7EA87E%A9A97EFFFF2F295AFF847EFF59A9847EA9A97EFFFF7E7EFF7E7EFD50FF30%A8FF84542F842F302F5A7E302F842F5A5A5A7E5A077E5454FFFF7E307EA9%2F5A845A8430077E53305A7E2F7E840D07A9FD4FFF2F7E537E535A535453%5A537E2F5A5A2F2F7E5384072F5A5A5AFFFF7E530D5A547EA92F7E07307E%5A2F5A535A7E7E072F7EFD4FFF7E075AA9542FA9547E5A7E7E2F2FFF5430%FD047E2FA95A84FFFF542F53FF2F30845AA85A2FA95A7E5AA92F5AA85A53%FD54FFA9FD06FF7E2FFFFFFFA9FD0BFFA8FFFFFFA9FFA8FD0BFFA8FD34FF%FF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: fh_fb_computer_logoA_4C.eps 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about='uuid:cf795d8e-d900-11da-aa93-003065dfd80a'
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
  <pdf:Producer>Adobe PDF library 6.66</pdf:Producer>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:cf795d8e-d900-11da-aa93-003065dfd80a'
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:cf795d8e-d900-11da-aa93-003065dfd80a'
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2006-04-26T16:17:15+02:00</xap:CreateDate>
  <xap:ModifyDate>2006-05-01T10:56:23Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:MetadataDate>2006-04-26T16:17:15+02:00</xap:MetadataDate>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>72</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgASAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWLfmFr91pOjIto&#xA;xjubt/TWUdUUCrFffthiEEvH5JJJXMkjl3Y1Z2JJJ9ycsYJn5V/5SXTP+YmL/iQwFIe7ZWzdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYN/ytnSP+WK4/wCE&#xA;/wCaslwseJFad+Z3l+7uFglSW0LmiyShSlT4lSafdjwptAfm3/vBp/8Axlf/AIiMYok8yybFOPKs&#xA;Uv8AiPTG4Nx+sxGtDSnIYCkPc8rZuxVg3ljzr528w2Vpqdt5bs49KupGUTPqj+qsaSmN39IWdCfh&#xA;JC8/pw0qN1Lz9b2XnWz8tm0aSCf047rUw9Et7m5WV7aBk4mplW3bfkKVX+bGlV/MfmjUbTVrTQdD&#xA;sE1HW7uJ7llnmNvbW9tGwQyzSKkrfE7cUVUJO/QDAqAk87+YNN0fW7nXdC+rXmirC6mCZ5LO7Sc0&#xA;DQXDxIapQh1KVXbxGGlT3zTr/wCgdH/SPofWf9Js7b0ufp/72XUVty5cW+x63KlN6U264FdoWv8A&#xA;6Vu9at/Q9H9D35sOXPl6tLaC49SnFeP+9HGm/Std8VSS8/MVYLCaSLTmuNSbV5dE0zT45VDXM8TE&#xA;cy7KBGnBWdzQ8QO+GldF5u8z6Zq2nWXmrSba1tdWlFtZ6jp11JdRJdMCUhnWWG3ZPU4niwqK7Yqu&#xA;uvNvmO/1rUdL8q6Xa3qaQyw6hf3909tD9ZZBJ9XhEUNwzsqOpcmgFaYqq2XnW8lby/DfaPNp95rN&#xA;5dWNxbTvQ272kE8zOh4ATRv9X+BhxBVg3tgVNdQ136p5g0nSPQ5/pRLp/X509P6qqNTjQ8uXPxFM&#xA;VYvpnnzzdqenQeYbDy9DceWrmQCBY7p21Jrcyen64thB6f8Alen6vKnvhVMtR816/ca/d6H5Y0y3&#xA;vZ9NWNtTvb64e2topJlDxwL6UVxI8hQhz8ICgjffAroPOuorY6a+paNLYX95qg0m5tpH+BGKu3rw&#xA;ycP30TBPhNFrXtTDSpjrPmT9G+YPL+kfVvV/Ts1xD6/Pj6P1e2e4rx4nny9Pj1FOuBW/L3mT9MeV&#xA;oNe+r+h68LzfVufOnAsKc+K9eP8ALhVAaP53/SUnlVPqXpf4m0qXVa+ry9D00tn9L7A9Sv1v7Xw/&#xA;Z6b7BUR5w8yajokelJpunx6le6tfCwhhmuDaopNvNOXaQRTnpb0px74qqaVqPm+WG7fVdEtrOSKP&#xA;lZx21+bkzPQ/Axe3txH0G+/XFXnlx+dH5hW/mi28rTfl5x167tzd29n+mLY8oQXBf1BF6Y/um2LV&#xA;2xVGav8Am95vtPNFj5Ws/Jf17XrnTo9QuLP9JwxeiW5CSL1GiMb8OP2g2/hhVE+WPznGteXvNt9c&#xA;aJLp2r+T4ZZdQ0qWYOGaOOVwgmCChLW7Kfg298CpfffnrqCaL5NvdO8s/X7/AM4m4S20/wCvLD6U&#xA;lvIkar6rw8W5+p1IWmGlTqX8w/Oum+Wdc13zH5N/RCaTbrPbQ/pKC5+skkhk5QofT47blTXArGl/&#xA;P/XLO30TU9f8ly6b5f1141s9Tiv4rqolFVb0ljRvs70Yg4aVjWWNbsVZr5smkm8leXZJDyejLX2V&#xA;eI/AZEc2R5J1+WGg2Q0xtVmiWS5lkZYXYA8ETb4a9CWrvgkViGY3eraXZsEvLyC2Zt1WaRIyR7Bi&#xA;MYwkeQSZALrPUtOvQ5srqG5CU5mGRZONeleJNOmMoEcxSgg8kTkUvK/yw8p6dD5L03Xbu/1WB7Zp&#xA;7qW3XULyO1AhuZGobVZBFwIX4l40PfrhKpfB5a/MTXvKepXsVvpsE/mK4XWreS4ecXsDoUksVoIy&#xA;itDHDGtK+PicVTO183WVt5j0rzvqyNY6Nr+iQ2M13IhEdne208kzQztv6Yb1nUMdqpiqI85ea9O8&#xA;0eRvM8OjpLc6fbwxImqxgiCeSRwXS3cfE5jFOTLtU7GtcQhS89eRLLT9BjvLa/1i5mh1HSisNzqd&#xA;9dQkHUrcMXhlldGoCTuNuvbFKtofk201fzB5wu7m81S0b9MlESyv7uziZRYWh5enBJGjNUkcqV2p&#xA;2xVIrOxm0FbLWliubzT/AC/5m1MXzP6t1cra3Ub25uSzc5ZPTLhnO541xQn3mDzVofnG80LRvLFy&#xA;mrSR6pZ6hf3NuDJDa29jMLhjLIPhR3MYjVa136Ypdo3mfRfJuteY9L8zXKaWLzUpdT0y8nqkFzBd&#xA;IjEJIRxMkTqysla9D0xVT1+eLzjc+SpxDf6fY3OqXpilR5bO5MMdhdiOZXiZJYll4gipBKnfriqI&#xA;fytBovn/AMtzWtzqN6ZINRDC/vrm8VSI4uPH6w8gQt4jrirErvzD5ctbB9Q8lXt1o/nKWZWk8koz&#xA;yLJdNLSWGaxZWEVeR5SR8B+1XFWWWnmLSvJ3m3zLb+ZJ49Ns9Yuo9T0vUp/ghmU2sNvLCZT8IeJ4&#xA;Psk1IaoxVT80ahb+b9J0GSGK9tbCXzBFDBcq0lrNLDHHKPrELoUljRz9ltiRv0OKFLUvKVto/wCY&#xA;fkee2u9Suw11frJ9evrq9RB+jpqECeSRUJO1RilD+X/PPl/y55Lk8uazP9W8xaat1afogo5uZ39R&#xA;/RNvGATKsyspVkqN8UNQ3Nv5Tuvy3XX5BZCx8vXdldOwZlSdY9PUoSobesbfdilV/MLzD5V12w8t&#xA;3cWpyDSbfXkW9vrSSe3kh/3H3dCJYuEibsoqvjTGlZF5Eu/KDTXkOg61earIyo863t5d3nBVLAFP&#xA;rTNwry349dq9MSrENdgnP/OTnl2YRsYRoMimSh4g8rvavSuKpP5y8rTeYP8AnIe2tPr2o6VA2ign&#xA;UNLlNtMCrSHh6vFxRu4xVKvINndaR5O/N3yrcoZrywhvzHfNHSa7R4J0Ds+5fdOXU054qxjX7O3/&#xA;AMFflANUF3Bp8J1H9ITWqyevFGbiGrLwVmDU6bYqzNn8kP8Alb54s/Kd9q2oyNZxvcLqYnZh8RVB&#xA;F6qJ13qBirFdU8o3nlvyt+XHnFr7UNVtluLQ3mj6ixura35J6lIIeI9JVWNhTem2+2KvZZPyiXgf&#xA;T1M8+3KHb8HyXEx4WEa5ol7o1+1ldgcwAyOu6up6MtaZIFiQyLzN/wAoN5d/2eRHNkeSH13zbqHl&#xA;j8m/runN6d9c3DWkE/X0zI7FnFe4VDT3zL0OAZMoB5c3F1mY48RI5vmye4nuJnnuJGmmkPKSWRiz&#xA;MT3LHc51QAGweWlIk2Xv/wDziz/vF5i/4yWv/EZc0XbPOPxd72P9Mve91zSO4dirsVdirsVdirRZ&#xA;QQCQC2ygnc032xVvFXYq7FXYq7FXYq7FXYq7FWlZWFVII8RvireKuxVbHJHIgeNg6N0ZSCD9IxVd&#xA;irsVdirsVdirsVdirzP820UXunPT4jHICfYMKfrycWMkF5m/5Qby7/s8RzU8mNfmX/5JGx/7ai/q&#xA;mzZdlf33wdf2n/c/F4romga1rl59T0iylvrmnIxwqW4rWnJj0UVPU50GTLGAuRoPP4sMshqIt9H/&#xA;AJAeSfNHlez1ga7YmyN69u9sDJFIWCLJyqI2fjTkNmpnPdp6iGQx4TdW9B2bgnjiRIVZes5q3ZPI&#xA;rG1846XpWhySC5igSyhgujY2Mpu7e3NwhlQq31kvJQfsxAgVIHcSQire885axBJp2qpqlvdhtHkE&#xA;i2aLAoWWwllmjm9Pj63qPP6iUYKE6KF+IKpQeY/zHS2Y3cGpskdjYfWZYLFfWR2mt1uZYo2icSzG&#xA;KSZiFBoVp6Q+FnVRRfztBeXmq6e196d48M89pJaItVjtNOMjiMozLKyrPHw5n4qqvxLiqU6pqnn+&#xA;CS51SxsdQEl+LZJpY7V1nVI1v2hHp/V5z8L+jyHp9wGKhicKsr85aVqN3e2F6IJblrbTLsTRRxJI&#xA;KvPZmVFqrNzkiWTiqtU8fh71AV35fx+YLgTDU/rEGlRQNBaaXcWywoVe5mozckWQlYUjXiTShqak&#xA;4lQxiwh806Be2lloelTWlvd6lqUkno2vGFk/TM/H1ysD/CbIgwlpI140KltlxSj9LuPNuoy6PqvL&#xA;VYbmEQRXq3dkkDuJry1FzDInpD92iPLxdQuy8twORUJc3/Kxbzy9bLfxXV/fXNiJpBdWaI0VxNp0&#xA;LvDWKGNo1FzzBA+LqprSmEKWbWbv5j8n3mi3ksw1mSyMOpCeH0HiuJ0deiqE+FwSnEn4eLVNQxCW&#xA;BW+mebrlrrUJ9LuI5NWtbnXZ4JYC/C9torm0t7Z42DoXaKa2YR03MZ6jChkU0nnaCM6k0187oNQj&#xA;tbOK0R44ikA+q8oESN5FLIxBLCpooIqKhUvk1PzpqGnyabqFvqiyXGm/uQLNZIZG5ygyyzCKMpNS&#xA;OMhGVSQ28QNeKqtc3v5gpqWnaZy1F7VXvobi++rxsLiIS3ccTS8bcrGyJHAytyTny2VhWiqY+WNL&#xA;8xaZpurWlp9YjmGk2f6FiljRYY51tWUqg4LGrLMPiVvmRviqjHqvnq+nguYfr1vBFcQkW0toIhKj&#xA;XNtFIsvOLmqiOSZqgilOXRcVUtIt9dvPJ/mR76K+uL+9t4WmjubcwSySfU4/rEUUYjh5Lz5oKDfp&#xA;U4ql8115l0ua2t/LWmXFpp15qFw7vZ2FxaxtI5s2R5beeK4eJG5zo28SHiW5KaVVTCPU/O8sI1GW&#xA;HUHlt7u+FtbCAReqPqrNAjxmIlE9VeAZuS135tUYql1uvna+020vLk6l9ct54/Uufq5huGtItZt5&#xA;GBQwQlv9EVm4+mGcChU7qVUZe6r+Y1xYXNvGb+1vLRGV5o7SP95NHBqMg9ItE6OjPHarVepoB9rd&#xA;VMvI+v8AmG/8z6hbapePIoW5b6h6CRxW5huzFCI5QvNy0HFnBY8WJHXYJVn2BLsVdirzT83P96tN&#xA;/wCMcv61ycWMkD5m/wCUG8u/7PEc1PJjX5l/+SRsf+2ov6ps2XZX998HX9p/3PxTr/nGGytk8o6p&#xA;fKgFzNqBgkk7mOGGNkH0GZsl2xI+IB0r9LX2QB4ZP9L9AeyZqHbOxVgtj571P9HaNczWgvJ9SsUl&#xA;+rwcYy1xLMkSgNIwVU+PeuGkWiLX8yLCRIJXtp1S+9EWiMEBEtxDZSR25oxq7fXwa9PhbwFWkobS&#xA;/wA17LUhZmz0q7uFvqvbmH03/cCD6x6hHIHkE2Ma1blQb1xpFtw/mS149q2n2LzfWfqwa3d4R6fr&#xA;3M1uzGRXYFgYace3feoDS2mdp57s7zRbjU7a0nYQSW1t6DcFY3N2IqQ1J4go1wiuegNfDGkqHl3z&#xA;Zqesea72ye1Npp9hYxySKxjZvrT3dzbSAsrH4VaycLQb7k/s4qlPl780m1CC8dYYtSme8ppkNjJH&#xA;vZzQTT27TMz0V+NrJz/VjSEVa/mYupiA2FjLDDcTW6w3M5jKujXdnBMOCsWU8L5eJPcHwFWlWj80&#xA;7GBkgktJ7mX6v6jPGEVmk9F5wpTkeCssfHmzU5EDGltfceZfNVz5TvL60RLbUYNTntZESNbiRLa3&#xA;uWR/SiLos0ojTYct+wr8OKquleejd6Qsik3jW8VmbnV7aNVtpJbn0WokMjiVeaThhyG246ihaVDv&#xA;+bNl9Uu7iHS7i4Fsx4rG8XxRiG5nLcnZUDhLF6pWoqvjjSom8/M2wh0438VjPLbvey2Fo7NFGs0t&#xA;uJ/WoSxKlWtJFAYb/CehqGkpxoXmm01i+vLSK3mt5LNYZCJwqMyzqWVglS4G3Uih7E0NGlTvArsV&#xA;dirsVdirsVdirsVQ1vpunW1xPc29rDDc3JBuZo41V5COhdgAW+nFUTirsVdiqXar5f0fVWjbULYT&#xA;tECIyWYUB6/ZI8MIK0suPLGhXNlb2U9or2trX0IuTgLXruDX78bRSH1HyR5W1HR00a9sFm0yOT1k&#xA;ti8gAk3+KqsG/aPfLMWaUDcTRYzxRmKkLCv5c8r6D5bsXsdEtFs7WSUzvErOwMjKqlquWP2UGOXN&#xA;LIbkbKMeKMBURQTXKmx2KpNaeT/LlpOZ4LMLIWR1JkkYJ6chlVY1ZiI0EjFuCALXtjar4/Knl2Nb&#xA;VVsUpZTR3NpUsfTmhtxaxutSd1hUJ/biqEsfy+8m2Mbx2mlxxJIJFdQzkFZo/SdaFjRfT+EL0A6U&#xA;w2qvB5N8swRLFDYoiqsaKQz8h6Mpnjbly5cxKxfnXlXvgtXWnlLSIdGutJliE1re3Fxd3Ip6fKS5&#xA;na4JBQgqVZhxINRQd8VVrLyxoVlFNHa2oiW4t0s5iGcs8KNK6qzFi1edzIxavIljU4qhNW8k6Dqc&#xA;li00JRbGiKsTvHyhSKSJIuSMpAX1uQpv26E4bVS0nyB5d065uLhIPUlmn9aOpYLEqyRSpHGgbioV&#xA;7eM7DfiK1pjar5PIHk+W4+sSaZG0voG2qWenplGj6cqcuEjKG+0AeuNqij5T0A6WdM+rEWhmNzQS&#xA;yiT1mYu0omD+rzLEktyqanxwWqGt/IHk+2uEuLfTIopY4I7VGQuAIoShjFA1Kj0l+L7W25w2rrfy&#xA;D5Qt1uVh01EW7Z3uAGk+IyJNGwHxfCvG6l+FaAciRvjaoef8sfIk4ufV0iJjdyrPOwaQMZF9T4lI&#xA;YFK+vJy40ryNa1xtU20ry3oekz3E+nWcdtLdkGcpWhp2AJooqa0Wgrv1wKmWKuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxVg+i/mxo+r+YotJgsLxLe6muLay1SRFFvLLaANKooxYDfYkb7&#xA;Zm5NFKMOIkWK297iw1QlLho9d+mzKote0OWGaaLUbaSG2IW4kWaMrGzGgDkGiknxzFOOQ2ouRxDv&#xA;XxavpM1fSvYJOKNK3CVGpHGeLuaH7KtsT2xOOQ6FPEFkeu6JJHJJHqFs8cJUSus0ZVDJ9gMQduXa&#xA;vXE45dxRxDvQt75u8t2d3ZWk+oRC41CZra1RW58pUFWUlahaf5VPDJRwTIJA5MZZYggE80WmtaNI&#xA;1wiX9u72lfrSrKhMVNj6gB+CnvkfDltsd2XEO9Daz5n0nSvL95rskouLGyjaSRrcrITx24rQ0rU0&#xA;65LHhlKYj1LHJkEYmR5BKPKH5i6f5itb64msrjRksBDJM2oBYkMVwpeN1evGhA/V45bn0pxkAESv&#xA;u8mvDqBMHYxrvTO68z2kd7pEFqn16DV3kSK8t5I2iQRLXkTy+IHp8NcrjhJEiduFtM9xW9o2PW9F&#xA;k+senqFs/wBU2uuM0Z9I1p+8ofg38ch4cttjuniHe22saQtm1819biyQlXujKgiDA0IL141rt1x8&#xA;OV1RtPEKtqbW9FgghuJ7+2igudreZ5o1SQn+RiaN9GIxyJoAoMh3o3IMnYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq8f8AKflP80NHabyzDBb2vl0y6hJLqjSRyNOtwhEHFFPqxlWo&#xA;T8ObbPnwT9e5ntt7ubr8OPLE8NDhs7+/kxu2/KXzy3ljW7P9FRWVzNp1lYQwLPCRczW96k73BZWI&#xA;X92p+0QcyDrsXHE3Y4ifdYqnH/J5DjMao8MR76PNMZvyy1PRJ9S1WHTorWyiPmR5JInjFLK4tgLF&#xA;eKmvEUai0+HvlY1gmBEmz6PmDu2R0pgSQAB6/keSUeW/y580av5Jv7qxsILZb6y0ttPj9VB9ae0b&#xA;1JHPHZGf/Lpv9+W5tXCGQAnkZX5W1YtPKWOwBuIfGt2RaT+XfmyCTR7+80eGSe38wXmoXVs00Llb&#xA;a6VArBzs3BhWnWo6ZRPVYzxAS5wA+IciGnkKJHKZPwKR+W/ya86WMPmIXNrxubjTrqytphcwlLqS&#xA;aRWQ8FUMop3kfqPuuy6/GeGjtxA8js4+LQzHFfMgjnzv4PUW8r31l+V40HSbC0GpCwSN7KZVNvJO&#xA;VX11fiQCXPL4q9d65rPGBz8Uiavn9zsfCrFwxA5cujzix/LL8wT5T1fT2svqtk93ZXOn+XpbuOda&#xA;QsWuVSTkyKrkghWPz3FTsZazF4gN2aNyr5ODDS5OAiqFio3fLmyDSfInmRbvync/oa20WLT7+/ur&#xA;y0tJ/UEEdxEqRtWR5AzkruEqvtmPPUwqY4jKwBv1b44Jeg0I0Sa+DE/Ln5M+dLHSPMMM9iEvbrTp&#xA;LC3b6zAyXDvdJMHVVVSo4J1kev0UAy8vaGOUokHYSvkdtvxycXDoZxjK+ZiRz5/jzTCP8qvNlro9&#xA;xBFpUM8MOt6fqaaUZoVjube2gZJotz6Y5Mwrz65WdbjMgb/hIvuJbJaSQiQBtxg13gDkh/NH5Sec&#xA;NU0zy6kOj28CWsFzDc6VaXQVLZppTIrCS5Nxyryq3Cpr07HDh12OJl6juRuRz+VMc2jnMR2G17A8&#xA;r94L3LR7J7HSbKxdub2tvFAzk8ixjQKTWgrWnhmmyS4pE95dtEUKRmQS7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FX/9k=</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:cf795d8e-d900-11da-aa93-003065dfd80a'
  xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/'>
  <xapMM:DocumentID>uuid:cf7947de-d900-11da-aa93-003065dfd80a</xapMM:DocumentID>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:cf795d8e-d900-11da-aa93-003065dfd80a'
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -107.529 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 107.529 li380.806 107.529 li380.806 0 liclp[1 0 0 1 0 0 ] concat85.5547 35.2349 mo85.5547 26.9068 li93.4991 26.9068 li93.4991 25.4668 li85.5547 25.4668 li85.5547 19.3467 li93.7872 19.3467 li93.7872 17.9068 li83.9942 17.9068 li83.9942 35.2349 li85.5547 35.2349 litrue sop/0 [/DeviceCMYK] add_csa0 0 0 1 cmykef95.8008 35.2349 mo97.6241 30.5547 li106.241 30.5547 li108.088 35.2349 li109.792 35.2349 li102.881 17.9068 li101.057 17.9068 li94.1924 35.2349 li95.8008 35.2349 licp98.129 29.1148 mo101.945 19.3467 li105.689 29.1148 li98.129 29.1148 lief124.909 21.9629 mo124.669 18.8428 121.981 17.5469 119.149 17.5469 cv113.917 17.5469 111.685 21.8184 111.685 26.5713 cv111.685 31.3711 113.893 35.5948 119.149 35.5948 cv121.933 35.5948 124.597 33.939 125.101 31.0347 cv123.421 31.0347 li122.989 33.1949 121.069 34.1548 119.149 34.1548 cv114.709 34.1548 113.365 30.1231 113.365 26.5713 cv113.365 23.0186 114.709 18.9869 119.149 18.9869 cv121.117 18.9869 122.941 19.8506 123.229 21.9629 cv124.909 21.9629 lief130.401 35.2349 mo130.401 26.9551 li139.857 26.9551 li139.857 35.2349 li141.418 35.2349 li141.418 17.9068 li139.857 17.9068 li139.857 25.5147 li130.401 25.5147 li130.401 17.9068 li128.841 17.9068 li128.841 35.2349 li130.401 35.2349 lief147.247 35.2349 mo147.247 26.9551 li156.703 26.9551 li156.703 35.2349 li158.263 35.2349 li158.263 17.9068 li156.703 17.9068 li156.703 25.5147 li147.247 25.5147 li147.247 17.9068 li145.687 17.9068 li145.687 35.2349 li147.247 35.2349 lief176.981 26.5713 mo176.981 21.1709 174.221 17.5469 169.253 17.5469 cv164.286 17.5469 161.525 21.1709 161.525 26.5713 cv161.525 31.9708 164.286 35.5948 169.253 35.5948 cv174.221 35.5948 176.981 31.9708 176.981 26.5713 cvcp163.205 26.5713 mo163.205 22.7789 164.933 18.9869 169.253 18.9869 cv173.573 18.9869 175.301 22.7789 175.301 26.5713 cv175.301 30.3628 173.573 34.1548 169.253 34.1548 cv164.933 34.1548 163.205 30.3628 163.205 26.5713 cvef193.751 21.9629 mo193.512 18.8428 190.824 17.5469 187.992 17.5469 cv182.76 17.5469 180.528 21.8184 180.528 26.5713 cv180.528 31.3711 182.736 35.5948 187.992 35.5948 cv190.776 35.5948 193.44 33.939 193.944 31.0347 cv192.264 31.0347 li191.832 33.1949 189.912 34.1548 187.992 34.1548 cv183.552 34.1548 182.208 30.1231 182.208 26.5713 cv182.208 23.0186 183.552 18.9869 187.992 18.9869 cv189.959 18.9869 191.784 19.8506 192.072 21.9629 cv193.751 21.9629 lief199.244 35.2349 mo199.244 26.9551 li208.7 26.9551 li208.7 35.2349 li210.26 35.2349 li210.26 17.9068 li208.7 17.9068 li208.7 25.5147 li199.244 25.5147 li199.244 17.9068 li197.684 17.9068 li197.684 35.2349 li199.244 35.2349 lief225.906 30.6749 mo225.906 24.6993 216.114 26.9312 216.114 22.0108 cv216.114 19.8985 218.346 18.9869 220.146 18.9869 cv221.921 18.9869 223.866 19.5386 223.914 21.6749 cv225.594 21.6749 li225.21 18.3389 222.234 17.5469 219.954 17.5469 cv217.218 17.5469 214.434 19.2032 214.434 22.2266 cv214.434 25.9708 218.707 26.8589 221.514 27.795 cv222.978 28.275 224.226 29.0909 224.226 30.8184 cv224.226 33.0274 221.994 34.1548 220.05 34.1548 cv217.722 34.1548 215.754 33.3873 215.707 30.7227 cv214.026 30.7227 li214.098 33.5792 216.426 35.5948 219.186 35.5948 cv222.666 35.5948 225.906 34.4429 225.906 30.6749 cvef241.976 21.9629 mo241.737 18.8428 239.048 17.5469 236.216 17.5469 cv230.985 17.5469 228.752 21.8184 228.752 26.5713 cv228.752 31.3711 230.96 35.5948 236.216 35.5948 cv239 35.5948 241.665 33.939 242.168 31.0347 cv240.489 31.0347 li240.056 33.1949 238.136 34.1548 236.216 34.1548 cv231.776 34.1548 230.432 30.1231 230.432 26.5713 cv230.432 23.0186 231.776 18.9869 236.216 18.9869 cv238.184 18.9869 240.008 19.8506 240.296 21.9629 cv241.976 21.9629 lief247.468 35.2349 mo247.468 26.9551 li256.924 26.9551 li256.924 35.2349 li258.485 35.2349 li258.485 17.9068 li256.924 17.9068 li256.924 25.5147 li247.468 25.5147 li247.468 17.9068 li245.909 17.9068 li245.909 35.2349 li247.468 35.2349 lief262.466 17.9068 mo262.466 29.1387 li262.514 32.8589 264.603 35.5948 268.802 35.5948 cv273.002 35.5948 275.09 32.8589 275.138 29.1387 cv275.138 17.9068 li273.579 17.9068 li273.579 29.1148 li273.458 32.2588 271.659 34.1548 268.802 34.1548 cv265.947 34.1548 264.147 32.2588 264.027 29.1148 cv264.027 17.9068 li262.466 17.9068 lief290.137 35.2349 mo290.137 33.795 li281.424 33.795 li281.424 17.9068 li279.865 17.9068 li279.865 35.2349 li290.137 35.2349 lief303.911 35.2349 mo303.911 33.795 li294.815 33.795 li294.815 27.003 li303.214 27.003 li303.214 25.563 li294.815 25.563 li294.815 19.3467 li303.55 19.3467 li303.55 17.9068 li293.254 17.9068 li293.254 35.2349 li303.911 35.2349 lief308.933 20.7872 mo314.093 20.7872 li314.093 35.2349 li317.813 35.2349 li317.813 20.7872 li322.973 20.7872 li322.973 17.9068 li308.933 17.9068 li308.933 20.7872 lief329.395 28.2266 mo333.331 28.2266 li334.554 28.275 334.794 29.5997 334.89 30.563 cv335.058 32.128 335.226 33.6934 335.539 35.2349 cv339.642 35.2349 li338.947 34.2715 338.802 32.2247 338.634 31.1168 cv338.323 28.7085 338.323 26.9551 335.466 26.6426 cv335.466 26.5948 li337.603 26.1387 339.067 24.6548 339.067 22.4102 cv339.067 18.8907 336.019 17.9312 333.042 17.9068 cv325.674 17.9068 li325.674 35.2349 li329.395 35.2349 li329.395 28.2266 licp329.395 20.7872 mo332.514 20.7872 li334.146 20.8106 335.107 21.4556 335.107 22.9834 cv335.107 24.5108 334.146 25.3233 332.514 25.3467 cv329.395 25.3467 li329.395 20.7872 lief347.606 17.9068 mo343.886 17.9068 li343.886 35.2349 li347.606 35.2349 li347.606 17.9068 lief351.416 35.2349 mo363.295 35.2349 li363.295 32.355 li355.136 32.355 li355.136 27.7227 li362.528 27.7227 li362.528 24.8428 li355.136 24.8428 li355.136 20.7872 li363.032 20.7872 li363.032 17.9068 li351.416 17.9068 li351.416 35.2349 lief370.558 28.2266 mo374.494 28.2266 li375.717 28.275 375.958 29.5997 376.054 30.563 cv376.222 32.128 376.389 33.6934 376.702 35.2349 cv380.806 35.2349 li380.11 34.2715 379.965 32.2247 379.798 31.1168 cv379.486 28.7085 379.486 26.9551 376.629 26.6426 cv376.629 26.5948 li378.766 26.1387 380.23 24.6548 380.23 22.4102 cv380.23 18.8907 377.182 17.9312 374.206 17.9068 cv366.837 17.9068 li366.837 35.2349 li370.558 35.2349 li370.558 28.2266 licp370.558 20.7872 mo373.678 20.7872 li375.31 20.8106 376.27 21.4556 376.27 22.9834 cv376.27 24.5108 375.31 25.3233 373.678 25.3467 cv370.558 25.3467 li370.558 20.7872 lief84.8633 63.6065 mo83.9678 63.6065 li83.9678 70.6202 li83.9678 73.2247 85.3399 73.9112 86.9219 73.9112 cv88.504 73.9112 89.876 73.2247 89.876 70.6202 cv89.876 63.6065 li88.9795 63.6065 li88.9795 69.962 li88.9795 71.2784 88.9795 73.1544 86.9219 73.1544 cv84.8633 73.1544 84.8633 71.2784 84.8633 69.962 cv84.8633 63.6065 lief92.7823 69.2764 mo92.7823 67.6944 93.5528 67.1768 94.3086 67.1768 cv95.2881 67.1768 95.6104 67.9463 95.6104 68.7725 cv95.6104 73.7149 li96.4502 73.7149 li96.4502 68.7305 li96.4502 67.8067 96.2686 66.5049 94.5186 66.5049 cv93.7627 66.5049 93.2168 66.9249 92.8106 67.5127 cv92.7823 67.5127 li92.7823 66.6446 li91.9424 66.6446 li91.9424 73.7149 li92.7823 73.7149 li92.7823 69.2764 lief99.6514 64.671 mo99.6514 63.6065 li98.6163 63.6065 li98.6163 64.671 li99.6514 64.671 licp99.5538 73.7149 mo99.5538 66.6446 li98.7139 66.6446 li98.7139 73.7149 li99.5538 73.7149 lief102.013 66.6446 mo101.103 66.6446 li103.204 73.7149 li104.169 73.7149 li106.27 66.6446 li105.458 66.6446 li103.736 72.6504 li103.708 72.6504 li102.013 66.6446 lief108.197 69.6827 mo108.197 68.1143 108.449 67.1768 109.792 67.1768 cv111.136 67.1768 111.388 68.1143 111.388 69.6827 cv108.197 69.6827 licp112.229 70.3545 mo112.229 68.2549 112.229 66.5049 109.792 66.5049 cv108.21 66.5049 107.357 67.4424 107.357 69.4864 cv107.357 71.2227 li107.357 73.3643 108.575 73.8545 109.792 73.8545 cv111.207 73.8545 112.13 73.2666 112.229 71.5586 cv111.346 71.5586 li111.361 72.5108 110.842 73.1827 109.792 73.1827 cv108.462 73.1827 108.197 71.8809 108.197 70.9004 cv108.197 70.3545 li112.229 70.3545 lief114.925 66.6446 mo114.085 66.6446 li114.085 73.7149 li114.925 73.7149 li114.925 69.1651 li114.925 67.9747 115.709 67.2608 116.9 67.3584 cv116.9 66.5049 li116.045 66.5049 115.303 66.9249 114.954 67.5967 cv114.925 67.5967 li114.925 66.6446 lief122.159 71.8526 mo122.159 69.4864 118.981 69.962 118.981 68.1983 cv118.981 67.5684 119.457 67.1768 120.059 67.1768 cv121.011 67.1768 121.25 67.6524 121.291 68.5489 cv122.117 68.5489 li122.117 67.4708 121.669 66.5049 120.269 66.5049 cv119.037 66.5049 118.141 66.9668 118.141 68.2686 cv118.141 70.6065 121.319 70.1309 121.319 71.9786 cv121.319 72.7627 120.927 73.2247 120.115 73.2247 cv119.037 73.2247 118.813 72.5811 118.813 71.6143 cv117.959 71.6143 li117.945 73.1124 118.546 73.8545 120.073 73.8545 cv121.389 73.8545 122.159 73.1827 122.159 71.8526 cvef125.136 64.671 mo125.136 63.6065 li124.1 63.6065 li124.1 64.671 li125.136 64.671 licp125.038 73.7149 mo125.038 66.6446 li124.198 66.6446 li124.198 73.7149 li125.038 73.7149 lief127.805 67.3165 mo127.805 72.3702 li127.805 73.2383 128.141 73.7422 129.275 73.7422 cv129.542 73.7422 129.821 73.7286 130.074 73.7002 cv130.074 72.9727 li129.891 73.001 129.695 73.0147 129.416 73.0147 cv128.744 73.0147 128.645 72.7911 128.645 71.8526 cv128.645 67.3165 li130.074 67.3165 li130.074 66.6446 li128.645 66.6446 li128.645 64.8243 li127.805 65.1885 li127.805 66.6446 li126.671 66.6446 li126.671 67.3165 li127.805 67.3165 lief132.168 76.3887 mo132.995 76.3887 li135.92 66.6446 li135.081 66.6446 li133.415 72.4405 li133.386 72.4405 li131.665 66.6446 li130.754 66.6446 li132.995 73.7286 li132.168 76.3887 lief142.827 73.1827 mo141.665 73.1827 141.469 72.4122 141.399 72.2452 cv141.259 71.8946 141.231 70.6202 141.231 70.1729 cv141.231 68.087 141.441 67.1768 142.827 67.1768 cv144.212 67.1768 144.422 68.087 144.422 70.1729 cv144.422 70.6202 144.395 71.8946 144.254 72.2452 cv144.185 72.4122 143.989 73.1827 142.827 73.1827 cvcp142.827 73.8545 mo144.632 73.8545 145.263 72.7764 145.263 70.9424 cv145.263 69.2627 li145.263 68.3663 145.249 66.5049 142.827 66.5049 cv140.405 66.5049 140.391 68.3663 140.391 69.2627 cv140.391 70.9424 li140.391 72.7764 141.021 73.8545 142.827 73.8545 cvef147.61 73.7149 mo148.45 73.7149 li148.45 67.3165 li149.877 67.3165 li149.877 66.6446 li148.45 66.6446 li148.45 65.4405 li148.45 65.0342 148.45 64.3067 149.262 64.3067 cv149.892 64.3067 li149.892 63.6065 li149.682 63.5782 149.542 63.5508 149.416 63.5508 cv147.708 63.5508 147.61 64.7823 147.61 65.4542 cv147.61 66.6446 li146.476 66.6446 li146.476 67.3165 li147.61 67.3165 li147.61 73.7149 lief155.903 70.2989 mo157.611 64.587 li157.638 64.587 li159.361 70.2989 li155.903 70.2989 licp157.134 63.6065 mo153.943 73.7149 li154.838 73.7149 li155.636 71.0547 li159.598 71.0547 li160.411 73.7149 li161.348 73.7149 li158.199 63.6065 li157.134 63.6065 lief163.513 66.6446 mo162.701 66.6446 li162.701 76.3887 li163.542 76.3887 li163.542 72.917 li163.569 72.9307 li164.003 73.6026 164.521 73.8545 165.04 73.8545 cv166.845 73.8545 167.475 72.7764 167.475 70.9424 cv167.475 69.3604 li167.475 68.4366 167.461 66.5049 165.25 66.5049 cv164.689 66.5049 163.989 66.7989 163.542 67.4844 cv163.513 67.4981 li163.513 66.6446 licp163.542 69.542 mo163.542 67.792 164.494 67.1768 165.137 67.1768 cv166.635 67.1768 166.635 68.7725 166.635 70.1729 cv166.635 70.6202 166.607 71.8946 166.467 72.2452 cv166.397 72.4122 166.201 73.1827 165.04 73.1827 cv164.269 73.1827 163.542 72.4122 163.542 70.8028 cv163.542 69.542 lief170.004 66.6446 mo169.193 66.6446 li169.193 76.3887 li170.033 76.3887 li170.033 72.917 li170.06 72.9307 li170.495 73.6026 171.012 73.8545 171.53 73.8545 cv173.336 73.8545 173.966 72.7764 173.966 70.9424 cv173.966 69.3604 li173.966 68.4366 173.953 66.5049 171.74 66.5049 cv171.18 66.5049 170.48 66.7989 170.033 67.4844 cv170.004 67.4981 li170.004 66.6446 licp170.033 69.542 mo170.033 67.792 170.984 67.1768 171.628 67.1768 cv173.126 67.1768 173.126 68.7725 173.126 70.1729 cv173.126 70.6202 173.098 71.8946 172.958 72.2452 cv172.888 72.4122 172.693 73.1827 171.53 73.1827 cv170.76 73.1827 170.033 72.4122 170.033 70.8028 cv170.033 69.542 lief176.776 73.7149 mo176.776 63.6065 li175.935 63.6065 li175.935 73.7149 li176.776 73.7149 lief180.256 64.671 mo180.256 63.6065 li179.221 63.6065 li179.221 64.671 li180.256 64.671 licp180.159 73.7149 mo180.159 66.6446 li179.319 66.6446 li179.319 73.7149 li180.159 73.7149 lief183.081 69.6827 mo183.081 68.1143 183.333 67.1768 184.676 67.1768 cv186.02 67.1768 186.272 68.1143 186.272 69.6827 cv183.081 69.6827 licp187.112 70.3545 mo187.112 68.2549 187.112 66.5049 184.676 66.5049 cv183.094 66.5049 182.24 67.4424 182.24 69.4864 cv182.24 71.2227 li182.24 73.3643 183.458 73.8545 184.676 73.8545 cv186.09 73.8545 187.014 73.2666 187.112 71.5586 cv186.23 71.5586 li186.245 72.5108 185.726 73.1827 184.676 73.1827 cv183.346 73.1827 183.081 71.8809 183.081 70.9004 cv183.081 70.3545 li187.112 70.3545 lief192.666 73.7149 mo193.477 73.7149 li193.435 73.4766 193.393 73.0147 193.393 72.3145 cv193.393 63.6065 li192.553 63.6065 li192.553 67.3584 li192.525 67.3448 li192.091 66.7989 191.461 66.5049 190.818 66.5049 cv188.647 66.5049 188.647 68.8145 188.647 70.1729 cv188.647 71.8243 188.759 73.8545 190.803 73.8545 cv191.629 73.8545 192.162 73.5049 192.595 72.8321 cv192.624 72.8184 li192.666 73.7149 licp191.028 73.1827 mo190.118 73.1827 189.488 72.8321 189.488 70.2002 cv189.488 68.5489 189.488 67.1768 191 67.1768 cv192.582 67.1768 192.582 69.1368 192.582 69.5567 cv192.582 70.8165 li192.582 72.5381 191.826 73.1827 191.028 73.1827 cvef204.122 66.169 mo204.122 64.712 203.674 63.4112 201.574 63.4112 cv199.921 63.4112 198.816 64.1387 198.83 65.8887 cv198.844 66.8965 198.928 67.4981 200.888 68.7022 cv202.344 69.5987 203.254 69.9903 203.254 71.3624 cv203.254 72.5245 202.68 73.1544 201.504 73.1544 cv199.698 73.1544 199.614 71.9922 199.614 70.8721 cv198.69 70.8721 li198.606 72.8467 199.488 73.9112 201.461 73.9112 cv203.226 73.9112 204.15 73.0284 204.15 71.2227 cv204.15 69.2627 202.876 68.9961 201.63 68.1006 cv200.482 67.2745 199.726 67.2325 199.726 65.7344 cv199.726 64.544 200.412 64.167 201.504 64.167 cv202.876 64.167 203.184 64.9229 203.211 66.169 cv204.122 66.169 lief210.057 68.6749 mo210.127 67.1905 209.301 66.5049 208.084 66.5049 cv207.118 66.5049 206.32 66.8682 205.956 67.876 cv205.773 68.4082 205.746 69.5147 205.746 70.2149 cv205.746 71.9649 205.746 73.8545 208.139 73.8545 cv208.797 73.8545 210.142 73.5323 210.072 71.628 cv209.232 71.628 li209.189 72.4825 209.049 73.1827 207.944 73.1827 cv206.642 73.1827 206.642 71.4883 206.642 70.2149 cv206.642 69.2764 206.726 68.3106 206.837 67.9883 cv207.019 67.4708 207.454 67.1768 207.971 67.1768 cv208.938 67.1768 209.259 67.792 209.217 68.6749 cv210.057 68.6749 lief213.006 64.671 mo213.006 63.6065 li211.97 63.6065 li211.97 64.671 li213.006 64.671 licp212.909 73.7149 mo212.909 66.6446 li212.069 66.6446 li212.069 73.7149 li212.909 73.7149 lief215.83 69.6827 mo215.83 68.1143 216.082 67.1768 217.426 67.1768 cv218.77 67.1768 219.022 68.1143 219.022 69.6827 cv215.83 69.6827 licp219.862 70.3545 mo219.862 68.2549 219.862 66.5049 217.426 66.5049 cv215.844 66.5049 214.99 67.4424 214.99 69.4864 cv214.99 71.2227 li214.99 73.3643 216.208 73.8545 217.426 73.8545 cv218.839 73.8545 219.764 73.2666 219.862 71.5586 cv218.98 71.5586 li218.994 72.5108 218.476 73.1827 217.426 73.1827 cv216.096 73.1827 215.83 71.8809 215.83 70.9004 cv215.83 70.3545 li219.862 70.3545 lief222.503 69.2764 mo222.503 67.6944 223.273 67.1768 224.029 67.1768 cv225.009 67.1768 225.331 67.9463 225.331 68.7725 cv225.331 73.7149 li226.171 73.7149 li226.171 68.7305 li226.171 67.8067 225.989 66.5049 224.239 66.5049 cv223.483 66.5049 222.937 66.9249 222.531 67.5127 cv222.503 67.5127 li222.503 66.6446 li221.664 66.6446 li221.664 73.7149 li222.503 73.7149 li222.503 69.2764 lief232.144 68.6749 mo232.214 67.1905 231.388 66.5049 230.17 66.5049 cv229.205 66.5049 228.406 66.8682 228.042 67.876 cv227.86 68.4082 227.833 69.5147 227.833 70.2149 cv227.833 71.9649 227.833 73.8545 230.226 73.8545 cv230.884 73.8545 232.228 73.5323 232.158 71.628 cv231.318 71.628 li231.276 72.4825 231.136 73.1827 230.031 73.1827 cv228.728 73.1827 228.728 71.4883 228.728 70.2149 cv228.728 69.2764 228.812 68.3106 228.924 67.9883 cv229.106 67.4708 229.541 67.1768 230.058 67.1768 cv231.025 67.1768 231.346 67.792 231.304 68.6749 cv232.144 68.6749 lief234.533 69.6827 mo234.533 68.1143 234.786 67.1768 236.129 67.1768 cv237.473 67.1768 237.725 68.1143 237.725 69.6827 cv234.533 69.6827 licp238.565 70.3545 mo238.565 68.2549 238.565 66.5049 236.129 66.5049 cv234.547 66.5049 233.694 67.4424 233.694 69.4864 cv233.694 71.2227 li233.694 73.3643 234.912 73.8545 236.129 73.8545 cv237.543 73.8545 238.467 73.2666 238.565 71.5586 cv237.683 71.5586 li237.697 72.5108 237.179 73.1827 236.129 73.1827 cv234.799 73.1827 234.533 71.8809 234.533 70.9004 cv234.533 70.3545 li238.565 70.3545 lief244.329 71.8526 mo244.329 69.4864 241.151 69.962 241.151 68.1983 cv241.151 67.5684 241.626 67.1768 242.228 67.1768 cv243.18 67.1768 243.418 67.6524 243.46 68.5489 cv244.287 68.5489 li244.287 67.4708 243.838 66.5049 242.438 66.5049 cv241.207 66.5049 240.31 66.9668 240.31 68.2686 cv240.31 70.6065 243.489 70.1309 243.489 71.9786 cv243.489 72.7627 243.096 73.2247 242.285 73.2247 cv241.207 73.2247 240.983 72.5811 240.983 71.6143 cv240.128 71.6143 li240.115 73.1124 240.716 73.8545 242.243 73.8545 cv243.558 73.8545 244.329 73.1827 244.329 71.8526 cvef84.9336 57.7149 mo84.9336 52.8985 li88.9102 52.8985 li88.9102 57.7149 li89.8057 57.7149 li89.8057 47.6065 li88.9102 47.6065 li88.9102 52.1426 li84.9336 52.1426 li84.9336 47.6065 li84.0381 47.6065 li84.0381 57.7149 li84.9336 57.7149 lief94.1963 57.1827 mo93.0352 57.1827 92.8389 56.4122 92.7686 56.2452 cv92.629 55.8946 92.6006 54.6207 92.6006 54.1724 cv92.6006 52.087 92.8106 51.1768 94.1963 51.1768 cv95.5831 51.1768 95.793 52.087 95.793 54.1724 cv95.793 54.6207 95.7647 55.8946 95.625 56.2452 cv95.5547 56.4122 95.3584 57.1827 94.1963 57.1827 cvcp94.1963 57.8545 mo96.003 57.8545 96.6329 56.7764 96.6329 54.9424 cv96.6329 53.2627 li96.6329 52.3663 96.6182 50.5044 94.1963 50.5044 cv91.7745 50.5044 91.7608 52.3663 91.7608 53.2627 cv91.7608 54.9424 li91.7608 56.7764 92.3907 57.8545 94.1963 57.8545 cvef102.424 52.6744 mo102.495 51.1905 101.668 50.5044 100.451 50.5044 cv99.4834 50.5044 98.6856 50.8682 98.3213 51.8765 cv98.1397 52.4083 98.1114 53.5147 98.1114 54.2144 cv98.1114 55.9649 98.1114 57.8545 100.506 57.8545 cv101.165 57.8545 102.508 57.5323 102.438 55.628 cv101.598 55.628 li101.556 56.4825 101.417 57.1827 100.31 57.1827 cv99.0079 57.1827 99.0079 55.4883 99.0079 54.2144 cv99.0079 53.2764 99.0918 52.3106 99.2042 51.9888 cv99.3858 51.4708 99.8194 51.1768 100.338 51.1768 cv101.304 51.1768 101.626 51.7925 101.584 52.6744 cv102.424 52.6744 lief104.996 57.7149 mo104.996 53.2764 li104.996 51.6949 105.765 51.1768 106.521 51.1768 cv107.501 51.1768 107.823 51.9463 107.823 52.7725 cv107.823 57.7149 li108.664 57.7149 li108.664 52.7305 li108.664 51.8067 108.481 50.5044 106.731 50.5044 cv105.975 50.5044 105.429 50.9244 105.023 51.5127 cv104.996 51.5127 li104.996 47.6065 li104.155 47.6065 li104.155 57.7149 li104.996 57.7149 lief114.608 55.8526 mo114.608 53.4864 111.43 53.9624 111.43 52.1988 cv111.43 51.5684 111.907 51.1768 112.508 51.1768 cv113.46 51.1768 113.699 51.6524 113.741 52.5484 cv114.567 52.5484 li114.567 51.4708 114.119 50.5044 112.718 50.5044 cv111.487 50.5044 110.59 50.9668 110.59 52.2686 cv110.59 54.6065 113.768 54.1309 113.768 55.9786 cv113.768 56.7627 113.376 57.2247 112.564 57.2247 cv111.487 57.2247 111.262 56.5811 111.262 55.6143 cv110.409 55.6143 li110.394 57.1124 110.997 57.8545 112.523 57.8545 cv113.838 57.8545 114.608 57.1827 114.608 55.8526 cvef120.357 52.6744 mo120.427 51.1905 119.602 50.5044 118.383 50.5044 cv117.417 50.5044 116.62 50.8682 116.255 51.8765 cv116.074 52.4083 116.045 53.5147 116.045 54.2144 cv116.045 55.9649 116.045 57.8545 118.439 57.8545 cv119.097 57.8545 120.441 57.5323 120.372 55.628 cv119.532 55.628 li119.49 56.4825 119.349 57.1827 118.244 57.1827 cv116.941 57.1827 116.941 55.4883 116.941 54.2144 cv116.941 53.2764 117.025 52.3106 117.137 51.9888 cv117.32 51.4708 117.753 51.1768 118.271 51.1768 cv119.238 51.1768 119.559 51.7925 119.517 52.6744 cv120.357 52.6744 lief122.928 57.7149 mo122.928 53.2764 li122.928 51.6949 123.699 51.1768 124.455 51.1768 cv125.434 51.1768 125.756 51.9463 125.756 52.7725 cv125.756 57.7149 li126.596 57.7149 li126.596 52.7305 li126.596 51.8067 126.415 50.5044 124.665 50.5044 cv123.909 50.5044 123.363 50.9244 122.957 51.5127 cv122.928 51.5127 li122.928 47.6065 li122.088 47.6065 li122.088 57.7149 li122.928 57.7149 lief132.192 50.6446 mo132.192 55.628 li132.192 56.1182 131.786 57.1827 130.652 57.1827 cv129.433 57.1827 129.476 55.6983 129.476 55.503 cv129.476 50.6446 li128.635 50.6446 li128.635 55.6426 li128.635 56.7911 129.042 57.8545 130.498 57.8545 cv131.282 57.8545 131.786 57.5323 132.276 56.9307 cv132.303 56.9307 li132.303 57.7149 li133.032 57.7149 li133.032 50.6446 li132.192 50.6446 lief136.191 57.7149 mo136.191 47.6065 li135.351 47.6065 li135.351 57.7149 li136.191 57.7149 lief139.112 53.6827 mo139.112 52.1148 139.364 51.1768 140.708 51.1768 cv142.052 51.1768 142.304 52.1148 142.304 53.6827 cv139.112 53.6827 licp143.144 54.3545 mo143.144 52.2544 143.144 50.5044 140.708 50.5044 cv139.126 50.5044 138.272 51.4424 138.272 53.4864 cv138.272 55.2227 li138.272 57.3643 139.49 57.8545 140.708 57.8545 cv142.122 57.8545 143.046 57.2666 143.144 55.5586 cv142.262 55.5586 li142.276 56.5108 141.758 57.1827 140.708 57.1827 cv139.378 57.1827 139.112 55.8809 139.112 54.9004 cv139.112 54.3545 li143.144 54.3545 lief148.875 57.7149 mo149.714 57.7149 li149.714 51.3165 li151.142 51.3165 li151.142 50.6446 li149.714 50.6446 li149.714 49.4405 li149.714 49.0347 149.714 48.3067 150.527 48.3067 cv151.157 48.3067 li151.157 47.6065 li150.947 47.5787 150.807 47.5503 150.68 47.5503 cv148.972 47.5503 148.875 48.7823 148.875 49.4546 cv148.875 50.6446 li147.741 50.6446 li147.741 51.3165 li148.875 51.3165 li148.875 57.7149 lief156.108 50.6446 mo156.108 55.628 li156.108 56.1182 155.702 57.1827 154.568 57.1827 cv153.349 57.1827 153.392 55.6983 153.392 55.503 cv153.392 50.6446 li152.552 50.6446 li152.552 55.6426 li152.552 56.7911 152.958 57.8545 154.414 57.8545 cv155.198 57.8545 155.702 57.5323 156.192 56.9307 cv156.22 56.9307 li156.22 57.7149 li156.948 57.7149 li156.948 50.6446 li156.108 50.6446 licp155.408 49.7208 mo156.303 49.7208 li156.303 48.3067 li155.408 48.3067 li155.408 49.7208 licp153.196 49.7208 mo154.091 49.7208 li154.091 48.3067 li153.196 48.3067 li153.196 49.7208 lief159.883 50.6446 mo159.042 50.6446 li159.042 57.7149 li159.883 57.7149 li159.883 53.1646 li159.883 51.9747 160.668 51.2608 161.857 51.3584 cv161.857 50.5044 li161.003 50.5044 160.261 50.9244 159.911 51.5967 cv159.883 51.5967 li159.883 50.6446 lief168.343 57.7149 mo169.24 57.7149 li169.24 48.3624 li171.704 48.3624 li171.704 47.6065 li165.879 47.6065 li165.879 48.3624 li168.343 48.3624 li168.343 57.7149 lief172.651 53.6827 mo172.651 52.1148 172.903 51.1768 174.247 51.1768 cv175.59 51.1768 175.842 52.1148 175.842 53.6827 cv172.651 53.6827 licp176.683 54.3545 mo176.683 52.2544 176.683 50.5044 174.247 50.5044 cv172.665 50.5044 171.811 51.4424 171.811 53.4864 cv171.811 55.2227 li171.811 57.3643 173.029 57.8545 174.247 57.8545 cv175.661 57.8545 176.584 57.2666 176.683 55.5586 cv175.8 55.5586 li175.815 56.5108 175.296 57.1827 174.247 57.1827 cv172.917 57.1827 172.651 55.8809 172.651 54.9004 cv172.651 54.3545 li176.683 54.3545 lief182.474 52.6744 mo182.543 51.1905 181.718 50.5044 180.5 50.5044 cv179.534 50.5044 178.736 50.8682 178.372 51.8765 cv178.19 52.4083 178.162 53.5147 178.162 54.2144 cv178.162 55.9649 178.162 57.8545 180.556 57.8545 cv181.213 57.8545 182.558 57.5323 182.488 55.628 cv181.648 55.628 li181.606 56.4825 181.466 57.1827 180.36 57.1827 cv179.058 57.1827 179.058 55.4883 179.058 54.2144 cv179.058 53.2764 179.142 52.3106 179.253 51.9888 cv179.436 51.4708 179.87 51.1768 180.388 51.1768 cv181.354 51.1768 181.675 51.7925 181.634 52.6744 cv182.474 52.6744 lief185.045 57.7149 mo185.045 53.2764 li185.045 51.6949 185.815 51.1768 186.571 51.1768 cv187.551 51.1768 187.873 51.9463 187.873 52.7725 cv187.873 57.7149 li188.712 57.7149 li188.712 52.7305 li188.712 51.8067 188.531 50.5044 186.781 50.5044 cv186.025 50.5044 185.479 50.9244 185.073 51.5127 cv185.045 51.5127 li185.045 47.6065 li184.205 47.6065 li184.205 57.7149 li185.045 57.7149 lief191.536 53.2764 mo191.536 51.6949 192.306 51.1768 193.062 51.1768 cv194.042 51.1768 194.364 51.9463 194.364 52.7725 cv194.364 57.7149 li195.204 57.7149 li195.204 52.7305 li195.204 51.8067 195.022 50.5044 193.272 50.5044 cv192.516 50.5044 191.97 50.9244 191.564 51.5127 cv191.536 51.5127 li191.536 50.6446 li190.696 50.6446 li190.696 57.7149 li191.536 57.7149 li191.536 53.2764 lief198.405 48.671 mo198.405 47.6065 li197.37 47.6065 li197.37 48.671 li198.405 48.671 licp198.307 57.7149 mo198.307 50.6446 li197.467 50.6446 li197.467 57.7149 li198.307 57.7149 lief200.598 57.7149 mo201.439 57.7149 li201.439 53.8648 li201.466 53.8648 li203.987 57.7149 li205.05 57.7149 li202.376 53.7945 li204.882 50.6446 li203.903 50.6446 li201.466 53.7666 li201.439 53.7666 li201.439 47.6065 li200.598 47.6065 li200.598 57.7149 lief206.194 59.1846 mo206.936 59.1846 li207.776 56.6504 li206.753 56.6504 li206.194 59.1846 lief215.369 56.5381 mo215.34 56.5381 li213.296 47.6065 li212.344 47.6065 li214.781 57.7149 li215.901 57.7149 li217.986 48.7266 li218.014 48.7266 li220.044 57.7149 li221.22 57.7149 li223.726 47.6065 li222.844 47.6065 li220.689 56.4688 li220.661 56.4688 li218.63 47.6065 li217.426 47.6065 li215.369 56.5381 lief226.213 48.671 mo226.213 47.6065 li225.177 47.6065 li225.177 48.671 li226.213 48.671 licp226.115 57.7149 mo226.115 50.6446 li225.275 50.6446 li225.275 57.7149 li226.115 57.7149 lief229.275 50.6446 mo228.435 50.6446 li228.435 57.7149 li229.275 57.7149 li229.275 53.1646 li229.275 51.9747 230.058 51.2608 231.249 51.3584 cv231.249 50.5044 li230.395 50.5044 229.653 50.9244 229.302 51.5967 cv229.275 51.5967 li229.275 50.6446 lief233.049 51.3165 mo233.049 56.3702 li233.049 57.2383 233.385 57.7422 234.52 57.7422 cv234.786 57.7422 235.066 57.7286 235.318 57.7002 cv235.318 56.9727 li235.135 57.001 234.94 57.0147 234.66 57.0147 cv233.988 57.0147 233.889 56.7911 233.889 55.8526 cv233.889 51.3165 li235.318 51.3165 li235.318 50.6446 li233.889 50.6446 li233.889 48.8248 li233.049 49.1885 li233.049 50.6446 li231.916 50.6446 li231.916 51.3165 li233.049 51.3165 lief240.675 55.8526 mo240.675 53.4864 237.497 53.9624 237.497 52.1988 cv237.497 51.5684 237.973 51.1768 238.575 51.1768 cv239.527 51.1768 239.765 51.6524 239.807 52.5484 cv240.632 52.5484 li240.632 51.4708 240.185 50.5044 238.785 50.5044 cv237.553 50.5044 236.657 50.9668 236.657 52.2686 cv236.657 54.6065 239.834 54.1309 239.834 55.9786 cv239.834 56.7627 239.443 57.2247 238.63 57.2247 cv237.553 57.2247 237.329 56.5811 237.329 55.6143 cv236.475 55.6143 li236.46 57.1124 237.063 57.8545 238.589 57.8545 cv239.905 57.8545 240.675 57.1827 240.675 55.8526 cvef246.423 52.6744 mo246.494 51.1905 245.668 50.5044 244.45 50.5044 cv243.484 50.5044 242.686 50.8682 242.322 51.8765 cv242.14 52.4083 242.112 53.5147 242.112 54.2144 cv242.112 55.9649 242.112 57.8545 244.505 57.8545 cv245.164 57.8545 246.508 57.5323 246.438 55.628 cv245.598 55.628 li245.556 56.4825 245.416 57.1827 244.31 57.1827 cv243.008 57.1827 243.008 55.4883 243.008 54.2144 cv243.008 53.2764 243.091 52.3106 243.204 51.9888 cv243.386 51.4708 243.82 51.1768 244.338 51.1768 cv245.304 51.1768 245.626 51.7925 245.584 52.6744 cv246.423 52.6744 lief248.995 57.7149 mo248.995 53.2764 li248.995 51.6949 249.765 51.1768 250.521 51.1768 cv251.501 51.1768 251.823 51.9463 251.823 52.7725 cv251.823 57.7149 li252.663 57.7149 li252.663 52.7305 li252.663 51.8067 252.481 50.5044 250.731 50.5044 cv249.975 50.5044 249.429 50.9244 249.023 51.5127 cv248.995 51.5127 li248.995 47.6065 li248.155 47.6065 li248.155 57.7149 li248.995 57.7149 lief258.3 57.7149 mo259.168 57.7149 li259.084 56.8887 259.084 56.4405 259.084 55.9366 cv259.084 52.3809 li259.084 50.5748 257.6 50.5044 256.886 50.5044 cv255.654 50.5044 254.604 51.0367 254.534 52.3946 cv255.43 52.3946 li255.43 51.5547 256.046 51.1768 256.816 51.1768 cv257.936 51.1768 258.244 51.8067 258.244 52.8423 cv258.244 53.4307 li256.816 53.5425 254.324 53.2906 254.324 55.7686 cv254.324 57.001 255.01 57.8545 256.27 57.8545 cv257.138 57.8545 257.824 57.5186 258.272 56.8467 cv258.3 56.8467 li258.3 57.7149 licp258.244 55.3907 mo258.244 56.3145 257.46 57.1827 256.494 57.1827 cv255.626 57.1827 255.22 56.5245 255.22 55.7266 cv255.22 54.0044 257.04 54.1446 258.244 54.1026 cv258.244 55.3907 lief261.683 57.7149 mo262.523 57.7149 li262.523 51.3165 li263.951 51.3165 li263.951 50.6446 li262.523 50.6446 li262.523 49.4405 li262.523 49.0347 262.523 48.3067 263.335 48.3067 cv263.965 48.3067 li263.965 47.6065 li263.755 47.5787 263.615 47.5503 263.489 47.5503 cv261.781 47.5503 261.683 48.7823 261.683 49.4546 cv261.683 50.6446 li260.549 50.6446 li260.549 51.3165 li261.683 51.3165 li261.683 57.7149 lief265.808 51.3165 mo265.808 56.3702 li265.808 57.2383 266.144 57.7422 267.278 57.7422 cv267.544 57.7422 267.824 57.7286 268.077 57.7002 cv268.077 56.9727 li267.894 57.001 267.698 57.0147 267.418 57.0147 cv266.747 57.0147 266.648 56.7911 266.648 55.8526 cv266.648 51.3165 li268.077 51.3165 li268.077 50.6446 li266.648 50.6446 li266.648 48.8248 li265.808 49.1885 li265.808 50.6446 li264.674 50.6446 li264.674 51.3165 li265.808 51.3165 lief276.466 50.6446 mo276.466 55.628 li276.466 56.1182 276.061 57.1827 274.927 57.1827 cv273.708 57.1827 273.75 55.6983 273.75 55.503 cv273.75 50.6446 li272.911 50.6446 li272.911 55.6426 li272.911 56.7911 273.317 57.8545 274.773 57.8545 cv275.557 57.8545 276.061 57.5323 276.55 56.9307 cv276.579 56.9307 li276.579 57.7149 li277.307 57.7149 li277.307 50.6446 li276.466 50.6446 lief280.186 53.2764 mo280.186 51.6949 280.956 51.1768 281.712 51.1768 cv282.692 51.1768 283.014 51.9463 283.014 52.7725 cv283.014 57.7149 li283.854 57.7149 li283.854 52.7305 li283.854 51.8067 283.672 50.5044 281.922 50.5044 cv281.166 50.5044 280.62 50.9244 280.214 51.5127 cv280.186 51.5127 li280.186 50.6446 li279.346 50.6446 li279.346 57.7149 li280.186 57.7149 li280.186 53.2764 lief289.589 57.7149 mo290.401 57.7149 li290.359 57.4766 290.317 57.0147 290.317 56.3145 cv290.317 47.6065 li289.477 47.6065 li289.477 51.3584 li289.449 51.3448 li289.015 50.7984 288.385 50.5044 287.742 50.5044 cv285.571 50.5044 285.571 52.8145 285.571 54.1724 cv285.571 55.8243 285.683 57.8545 287.727 57.8545 cv288.553 57.8545 289.085 57.5049 289.519 56.8321 cv289.547 56.8184 li289.589 57.7149 licp287.951 57.1827 mo287.042 57.1827 286.412 56.8321 286.412 54.2002 cv286.412 52.5484 286.412 51.1768 287.923 51.1768 cv289.505 51.1768 289.505 53.1368 289.505 53.5567 cv289.505 54.8165 li289.505 56.5381 288.75 57.1827 287.951 57.1827 cvef300.626 56.8604 mo300.15 57.042 299.505 57.1544 298.736 57.1544 cv296.551 57.1544 296.58 55.2085 296.58 52.6607 cv296.58 50.1124 296.551 48.1666 298.736 48.1666 cv300.15 48.1666 300.724 48.8663 300.724 50.1963 cv301.62 50.1963 li301.662 48.2364 300.668 47.4107 298.736 47.4107 cv295.446 47.4107 295.684 50.7002 295.684 52.6607 cv295.684 54.6207 295.446 57.9112 298.736 57.9112 cv299.688 57.9112 300.626 57.7706 301.522 57.4903 cv301.522 52.4366 li298.582 52.4366 li298.582 53.1924 li300.626 53.1924 li300.626 56.8604 lief304.428 53.6827 mo304.428 52.1148 304.68 51.1768 306.025 51.1768 cv307.369 51.1768 307.621 52.1148 307.621 53.6827 cv304.428 53.6827 licp308.46 54.3545 mo308.46 52.2544 308.46 50.5044 306.025 50.5044 cv304.442 50.5044 303.588 51.4424 303.588 53.4864 cv303.588 55.2227 li303.588 57.3643 304.806 57.8545 306.025 57.8545 cv307.438 57.8545 308.363 57.2666 308.46 55.5586 cv307.579 55.5586 li307.592 56.5108 307.075 57.1827 306.025 57.1827 cv304.695 57.1827 304.428 55.8809 304.428 54.9004 cv304.428 54.3545 li308.46 54.3545 lief314.223 55.8526 mo314.223 53.4864 311.045 53.9624 311.045 52.1988 cv311.045 51.5684 311.522 51.1768 312.124 51.1768 cv313.076 51.1768 313.314 51.6524 313.355 52.5484 cv314.181 52.5484 li314.181 51.4708 313.734 50.5044 312.334 50.5044 cv311.102 50.5044 310.206 50.9668 310.206 52.2686 cv310.206 54.6065 313.383 54.1309 313.383 55.9786 cv313.383 56.7627 312.992 57.2247 312.179 57.2247 cv311.102 57.2247 310.877 56.5811 310.877 55.6143 cv310.024 55.6143 li310.009 57.1124 310.612 57.8545 312.137 57.8545 cv313.454 57.8545 314.223 57.1827 314.223 55.8526 cvef316.487 51.3165 mo316.487 56.3702 li316.487 57.2383 316.823 57.7422 317.957 57.7422 cv318.222 57.7422 318.502 57.7286 318.754 57.7002 cv318.754 56.9727 li318.573 57.001 318.376 57.0147 318.096 57.0147 cv317.424 57.0147 317.327 56.7911 317.327 55.8526 cv317.327 51.3165 li318.754 51.3165 li318.754 50.6446 li317.327 50.6446 li317.327 48.8248 li316.487 49.1885 li316.487 50.6446 li315.353 50.6446 li315.353 51.3165 li316.487 51.3165 lief323.804 57.7149 mo324.671 57.7149 li324.587 56.8887 324.587 56.4405 324.587 55.9366 cv324.587 52.3809 li324.587 50.5748 323.104 50.5044 322.389 50.5044 cv321.158 50.5044 320.108 51.0367 320.038 52.3946 cv320.934 52.3946 li320.934 51.5547 321.549 51.1768 322.32 51.1768 cv323.44 51.1768 323.748 51.8067 323.748 52.8423 cv323.748 53.4307 li322.32 53.5425 319.828 53.2906 319.828 55.7686 cv319.828 57.001 320.514 57.8545 321.774 57.8545 cv322.642 57.8545 323.328 57.5186 323.776 56.8467 cv323.804 56.8467 li323.804 57.7149 licp323.748 55.3907 mo323.748 56.3145 322.963 57.1827 321.998 57.1827 cv321.129 57.1827 320.724 56.5245 320.724 55.7266 cv320.724 54.0044 322.543 54.1446 323.748 54.1026 cv323.748 55.3907 lief327.761 57.7149 mo327.761 47.6065 li326.92 47.6065 li326.92 57.7149 li327.761 57.7149 lief330.528 51.3165 mo330.528 56.3702 li330.528 57.2383 330.864 57.7422 331.999 57.7422 cv332.264 57.7422 332.544 57.7286 332.796 57.7002 cv332.796 56.9727 li332.614 57.001 332.418 57.0147 332.138 57.0147 cv331.466 57.0147 331.369 56.7911 331.369 55.8526 cv331.369 51.3165 li332.796 51.3165 li332.796 50.6446 li331.369 50.6446 li331.369 48.8248 li330.528 49.1885 li330.528 50.6446 li329.394 50.6446 li329.394 51.3165 li330.528 51.3165 lief337.803 50.6446 mo337.803 55.628 li337.803 56.1182 337.397 57.1827 336.263 57.1827 cv335.045 57.1827 335.087 55.6983 335.087 55.503 cv335.087 50.6446 li334.248 50.6446 li334.248 55.6426 li334.248 56.7911 334.653 57.8545 336.109 57.8545 cv336.893 57.8545 337.397 57.5323 337.887 56.9307 cv337.916 56.9307 li337.916 57.7149 li338.643 57.7149 li338.643 50.6446 li337.803 50.6446 lief341.523 53.2764 mo341.523 51.6949 342.292 51.1768 343.048 51.1768 cv344.029 51.1768 344.35 51.9463 344.35 52.7725 cv344.35 57.7149 li345.191 57.7149 li345.191 52.7305 li345.191 51.8067 345.008 50.5044 343.258 50.5044 cv342.502 50.5044 341.957 50.9244 341.55 51.5127 cv341.523 51.5127 li341.523 50.6446 li340.683 50.6446 li340.683 57.7149 li341.523 57.7149 li341.523 53.2764 lief350.87 51.5264 mo350.841 51.4986 li350.534 50.8682 349.82 50.5044 349.106 50.5044 cv347.677 50.5044 347.188 51.6104 347.118 51.9048 cv346.921 52.6607 346.908 52.6744 346.908 54.3126 cv346.908 55.8809 347.047 57.6309 349.078 57.6309 cv349.75 57.6309 350.421 57.378 350.786 56.7764 cv350.814 56.7764 li350.814 58.8907 350.912 59.7725 349.274 59.7725 cv348.49 59.7725 347.887 59.2969 347.944 58.4844 cv347.104 58.4844 li347.047 59.1983 347.398 60.4444 349.162 60.4444 cv351.177 60.4444 351.654 59.5206 351.654 57.9668 cv351.654 52.0166 li351.654 51.6524 351.668 51.3028 351.696 50.6309 cv350.87 50.6309 li350.87 51.5264 licp349.232 51.1768 mo350.016 51.1768 350.814 51.7364 350.814 53.2208 cv350.814 55.2925 350.757 55.6143 350.547 56.1612 cv350.421 56.4961 349.973 56.9581 349.274 56.9581 cv347.748 56.9581 347.748 55.4883 347.748 54.0186 cv347.748 52.9683 347.776 51.1768 349.232 51.1768 cvef38.8477 73.71 mo30.544 73.71 li30.544 11.7076 li30.544 11.252 li30.544 11.252 30.2901 0.00976563 42.9141 0.00976563 cv57.3721 0 li57.3731 23.42 li49.7208 23.4229 li49.7208 23.4229 48.9893 23.4229 48.9874 23.4229 cv42.3829 23.733 38.9551 27.5958 38.8409 34.9278 cv38.8409 34.9327 38.8409 35.5748 38.8409 35.5748 cv38.8477 73.71 lifalse sop0.3922 0.2902 0.2706 0.1059 cmykef51.8389 73.7129 mo43.5391 73.71 li43.5391 46.9322 li43.5391 46.4771 li43.5391 46.4771 43.2852 35.2344 55.9082 35.2344 cv64.8458 35.2344 li64.8458 56.4385 li62.7159 56.4385 li62.7159 56.4385 61.9844 56.4385 61.9815 56.4385 cv55.377 56.7481 51.9532 58.8907 51.8389 66.2227 cv51.8389 66.2276 51.8389 66.8672 51.8389 66.8672 cv51.8389 73.7129 li1 0.6314 0.0235001 0.1216 cmykef17.5967 73.71 mo25.9014 73.71 li25.9014 30.7076 li25.9014 30.2525 li25.9014 30.2525 26.1553 19.0098 13.5313 19.0098 cv0 19.0098 li0 41.2745 li5.5752 41.2745 li5.5752 41.2745 7.45508 41.2745 7.45801 41.2745 cv14.0626 41.5845 17.4903 44.8731 17.6045 52.2051 cv17.6045 52.21 17.6045 52.8521 17.6045 52.8521 cv17.5967 73.71 li0.3922 0.2902 0.2706 0.1059 cmykef88.4913 103.838 mo91.0294 103.838 92.4151 102.722 92.4151 99.2481 cv89.7334 99.2481 li89.6973 100.275 89.752 101.895 88.4913 101.895 cv86.962 101.895 86.7637 100.455 86.7637 97.1241 cv86.7637 93.794 86.962 92.3545 88.4913 92.3545 cv89.3018 92.3545 89.6075 93.003 89.6075 94.7305 cv92.2715 94.7305 li92.379 91.9405 91.2637 90.4102 88.4913 90.4102 cv84.0098 90.4102 84.0098 93.6866 84.0098 97.1241 cv84.0098 100.527 84.0098 103.838 88.4913 103.838 cv1 0.6314 0.0235001 0.1216 cmykef98.2227 103.802 mo101.5 103.802 101.931 101.804 101.931 98.96 cv101.931 96.4766 101.571 94.3526 98.2227 94.3526 cv94.8741 94.3526 94.5147 96.4766 94.5147 98.96 cv94.5147 101.804 94.9463 103.802 98.2227 103.802 cvcp98.2227 102.183 mo97.2862 102.183 97.0528 101.588 97.0528 98.8165 cv97.0528 96.9268 97.1426 95.9717 98.2227 95.9717 cv99.3028 95.9717 99.3926 96.9268 99.3926 98.8165 cv99.3926 101.588 99.1582 102.183 98.2227 102.183 cvef106.791 94.5323 mo104.252 94.5323 li104.252 103.623 li106.791 103.623 li106.791 97.3584 li106.791 96.5479 106.934 95.919 107.745 95.919 cv108.554 95.919 108.699 96.5479 108.699 97.3584 cv108.699 103.623 li111.182 103.623 li111.182 97.3584 li111.182 96.5479 111.327 95.919 112.136 95.919 cv112.947 95.919 113.09 96.5479 113.09 97.3584 cv113.09 103.623 li115.628 103.623 li115.628 96.3321 li115.628 95.0723 114.566 94.3526 113.36 94.3526 cv112.316 94.3526 111.596 94.712 111.002 95.504 cv110.588 94.7842 109.869 94.3526 108.968 94.3526 cv108.014 94.3526 107.331 94.6407 106.827 95.4502 cv106.791 95.4502 li106.791 94.5323 lief118.16 94.5323 mo118.16 107.529 li120.698 107.529 li120.698 102.758 li120.734 102.758 li121.255 103.533 121.885 103.802 122.803 103.802 cv125.359 103.802 125.288 100.977 125.288 99.1407 cv125.288 97.2686 125.377 94.3526 122.75 94.3526 cv121.778 94.3526 121.076 94.6582 120.608 95.5401 cv120.572 95.5401 li120.572 94.5323 li118.16 94.5323 licp121.723 102.237 mo120.859 102.237 120.698 101.283 120.698 98.9961 cv120.698 97.1778 120.679 95.919 121.723 95.919 cv122.822 95.919 122.803 97.1778 122.803 98.9961 cv122.803 101.283 122.641 102.237 121.723 102.237 cvef132.325 103.623 mo134.953 103.623 li134.899 103.029 134.863 102.417 134.863 101.823 cv134.863 94.5323 li132.325 94.5323 li132.325 100.833 li132.325 101.643 132.181 102.237 131.371 102.237 cv130.561 102.237 130.417 101.643 130.417 100.833 cv130.417 94.5323 li127.879 94.5323 li127.879 101.823 li127.879 103.083 128.941 103.802 130.147 103.802 cv131.101 103.802 131.785 103.515 132.289 102.705 cv132.325 102.705 li132.325 103.623 lief136.572 96.0987 mo137.598 96.0987 li137.598 101.697 li137.598 102.254 137.886 103.712 140.083 103.712 cv140.694 103.712 141.054 103.659 141.396 103.623 cv141.396 102.056 li141.27 102.092 141.109 102.092 140.947 102.092 cv140.119 102.092 140.136 101.643 140.136 100.959 cv140.136 96.0987 li141.451 96.0987 li141.451 94.5323 li140.136 94.5323 li140.136 91.9581 li137.598 93.0918 li137.598 94.5323 li136.572 94.5323 li136.572 96.0987 lief150.515 99.4825 mo150.606 96.5665 150.228 94.3526 146.808 94.3526 cv143.459 94.3526 143.1 96.4766 143.1 98.96 cv143.1 101.804 143.532 103.802 146.808 103.802 cv147.996 103.802 148.896 103.479 149.49 102.92 cv150.102 102.363 150.425 101.552 150.461 100.563 cv147.888 100.563 li147.888 101.319 147.708 102.183 146.808 102.183 cv145.692 102.183 145.656 100.563 145.656 99.4825 cv150.515 99.4825 licp145.656 98.0606 mo145.656 97.2862 145.638 95.919 146.808 95.919 cv148.014 95.919 147.978 97.1778 147.978 98.0606 cv145.656 98.0606 lief153.036 94.5323 mo153.036 103.623 li155.573 103.623 li155.573 98.6729 li155.573 97.7725 155.609 96.4766 157.841 96.6202 cv157.841 94.3526 li156.815 94.3526 155.951 94.6582 155.483 95.7022 cv155.447 95.7022 li155.447 94.5323 li153.036 94.5323 lief172.643 100.077 mo172.643 95.9903 167.17 96.2061 167.17 93.7403 cv167.17 92.8399 167.693 92.3545 168.575 92.3545 cv169.672 92.3545 169.834 93.3438 169.834 94.3165 cv172.481 94.3165 li172.661 91.5987 171.346 90.4102 168.701 90.4102 cv165.389 90.4102 164.417 92.0303 164.417 94.0645 cv164.417 97.9346 169.889 98.0782 169.889 100.419 cv169.889 101.3 169.439 101.895 168.521 101.895 cv167.027 101.895 166.972 100.851 166.972 99.6084 cv164.254 99.6084 li164.111 101.859 164.741 103.838 168.107 103.838 cv170.176 103.838 172.643 103.443 172.643 100.077 cvef182.337 97.7725 mo182.337 95.3965 181.005 94.3526 178.666 94.3526 cv175.318 94.3526 174.958 96.4766 174.958 98.96 cv174.958 101.804 175.389 103.802 178.666 103.802 cv181.042 103.802 182.374 102.741 182.374 100.275 cv179.835 100.275 li179.835 101.462 179.458 102.183 178.666 102.183 cv177.73 102.183 177.496 101.588 177.496 98.8165 cv177.496 96.9268 177.585 95.9717 178.666 95.9717 cv179.458 95.9717 179.8 96.4229 179.8 97.7725 cv182.337 97.7725 lief185.109 90.626 mo185.109 92.6241 li187.647 92.6241 li187.647 90.626 li185.109 90.626 licp187.647 94.5323 mo185.109 94.5323 li185.109 103.623 li187.647 103.623 li187.647 94.5323 lief197.81 99.4825 mo197.901 96.5665 197.523 94.3526 194.103 94.3526 cv190.754 94.3526 190.395 96.4766 190.395 98.96 cv190.395 101.804 190.827 103.802 194.103 103.802 cv195.291 103.802 196.191 103.479 196.785 102.92 cv197.397 102.363 197.72 101.552 197.756 100.563 cv195.183 100.563 li195.183 101.319 195.002 102.183 194.103 102.183 cv192.987 102.183 192.951 100.563 192.951 99.4825 cv197.81 99.4825 licp192.951 98.0606 mo192.951 97.2862 192.933 95.919 194.103 95.919 cv195.308 95.919 195.273 97.1778 195.273 98.0606 cv192.951 98.0606 lief202.868 94.5323 mo200.33 94.5323 li200.33 103.623 li202.868 103.623 li202.868 97.3584 li202.868 96.5479 203.012 95.919 203.822 95.919 cv204.631 95.919 204.776 96.5479 204.776 97.3584 cv204.776 103.623 li207.314 103.623 li207.314 96.3321 li207.314 95.0723 206.251 94.3526 205.045 94.3526 cv204.092 94.3526 203.408 94.6407 202.904 95.4502 cv202.868 95.4502 li202.868 94.5323 lief217.213 97.7725 mo217.213 95.3965 215.881 94.3526 213.542 94.3526 cv210.193 94.3526 209.834 96.4766 209.834 98.96 cv209.834 101.804 210.265 103.802 213.542 103.802 cv215.918 103.802 217.25 102.741 217.25 100.275 cv214.711 100.275 li214.711 101.462 214.334 102.183 213.542 102.183 cv212.605 102.183 212.372 101.588 212.372 98.8165 cv212.372 96.9268 212.461 95.9717 213.542 95.9717 cv214.334 95.9717 214.675 96.4229 214.675 97.7725 cv217.213 97.7725 lief226.968 99.4825 mo227.058 96.5665 226.68 94.3526 223.26 94.3526 cv219.913 94.3526 219.552 96.4766 219.552 98.96 cv219.552 101.804 219.985 103.802 223.26 103.802 cv224.449 103.802 225.348 103.479 225.943 102.92 cv226.554 102.363 226.878 101.552 226.915 100.563 cv224.34 100.563 li224.34 101.319 224.161 102.183 223.26 102.183 cv222.145 102.183 222.109 100.563 222.109 99.4825 cv226.968 99.4825 licp222.109 98.0606 mo222.109 97.2862 222.09 95.919 223.26 95.919 cv224.466 95.919 224.43 97.1778 224.43 98.0606 cv222.109 98.0606 lief%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 11.0.0%%For: (Roland Dahm) (RD)%%Title: (fh_fb_computer_logoA_4C.eps)%%CreationDate: 01.05.2006 12:56 Uhr%AI9_DataStream%Gb!9sl&oApE@(A_h`Knk1*_,Mfs*3s[Pl</icJ(oM3M0^9cFO.-&ZGF.Dm>ep%09Fh2fV$"fS.p5;`/8&kN&jN>jel%ptBIo?HCo%cgSSrrU.;@p](+,B/0%b4Si1uo;p/^qW=9^I/V[k+!4j2hSLhRn3"'Wf@Aoo`:`jUkB2NaDS(AtlLWd-GFs?UiVfhSNutR^^Nok<%j"J]\rq,d;frn_2\%[-5p@n<"hRrlTZcb9\?iAI4QJ[/jrqeXXn%W/SIK0,\])*:Vhlg'EhL@Suq"FYNhZ*T"rBK2S8\`%8ANbt7%kq&o_s0$jm?i93`J+;LZ\$&k+lg+'8CM?)Go?4VD+01[80$DRIp<,C55(EM&iT7!3+7*^f?h`jG+4kk8os!u1[ibYF&nACS)!oUa%m.[umhq[,'s7#aDVmC\%[&j6&RuaUWCT-`@-3*PlX#HZc^&Q=qW;CM0gE5rSs1S@-\+cLYXnL@#`V&l(?iBqQ^KS="s&L%?`3XF>%E\-O[OE+WV`>%([c[Ks*=24Y*?eq6K23V*+Q[X_]4OY4qo/)*teO.7IU!A(7a[*,NPE++M8*T2Ls6uME+$\VcGPgl*p[A)//mcGs%Dti#`mpE40IJs0$lF5X@1X*].r?#?pIe--<qeTWIrqYgAB@=J#Ih0Cd\S:`[*Z"*P%j+R)k=*==qm+9".lEmZZQbJ+c#9cTLnn+\%E)u9#2VFWsn(78_L/)3`IWthcq_p/mh90+rF.BF^Ok.U6[B1MLC=fY3T_g40a5$PpN9@P.E`P[o%s&=PRd9f4o_Q8-mf3+UrP/8>%D5UI=hgKhNnW,`H^NocM(YH]^:VV>VYA5H7=k?X(FuDrT+(GfZri\Q$\c;.Xmp:LlQ#lK=W=AdjrO;N><nG$MgG^dj\rPeu5P9Wc%^&7BUr?lF42kMfh^Gm1K^A=nVDsq$3l2JSL^otMfJ+pSLIk1JHOebWaF_M:Z4C:`<VUj(*b%I^<i30CH9Wg727aM:m?3C#JDq7DQ%onV/V]mf\`lWIS2i:XR+F7aQ4oS7PfHlW-Xr*Of]?MN!IqfgWWrqkUOnakLbI/!4))be[>b>%^+jo'MZoug,af*Ji_cMmD6J"L$G%knEc&=FYA2cdqT,:Ahc9+uO$2SMS"));jSXhqm5LDS<).>h'aACCO@QL9"Li]k*[SigMlIc!5a;pRJa.:0`L&i?te>]#%HK=1Ike%$K#)oiL8M*I!^4p)Xb>Q`V6jNHB7c%qlB\C-gJ1NPMbPNq?B0((#B6]E>@>eDlV^RNURV5i/R4>n'.!AHgsl+M;Relpkb;YS?uk?%&Ur`QnMdCk-Tk<t;kK,On6YmHCMn&Vj8>S53lX4<3_K1HGNtZ5n$VW<2gm`5c8jl!q?L*\rU:IPkmZi]lZYC"p`!;nrA_\U.XEc)%%mTS'hG35U5IK[Ii$Y\Eqr+HuU95+L=+*9(a>JL>F8^('[!t.%\4Xf$j.^Ip]gpDV?i"#ERId7Vn.2\<gMpfam;TPK[=4&._bXO6%lPo;jA"r_W-a(;?S\F(*k2+LJdjOAEjr3AciG(a+Ff";*i4e->lF:WuFO]uo3c=.AB8#`NIE,?8]!ed9lhC6GH`fG/=0p2_NfCJd%.t;[>mbP&?SA*s"h)gPT[+E$pDQ`lMrc%U<6eppQQ9!*7*mc-l,jsNa_7m4iI'0oYGK(K\&,oV4)!t*kqT]"Ds-07mn%\PAl'kkA%ZN&K?^$G.aDuDJHr]UOY4m^M6KmpB.ej#LfqYU7rs.$g6^/iDU>Q<L6kjSCer=f*inoN"qId4T2n,,o[?LO6'<N3IZiUZ^9@U+k@%/Y=![]GS-0]n,%DCY!Fh`;fZCAd88B@pcis.sdIcSW@W$bBh.H3m56b7i9Yn4@fBUaAps3oe5S*..V:SDl#+rqeoC*?Phbt4e<\j%_`RA#rU1tZ?!EA3HZ/d'rP8:MT=;iDDc3p%hX,0pW<me/O,dpKp_P@q;u`t:eYLg<QSM0X[^:C^GB$Bj[B+F_Xc6h+HFH$tBn%a)%9r[0*ht:@->/Km_D^c.o='>Y9Y*8$B5&V-POXl'ba59&E*;+*K2=tAm[*@-us3c8HCVKE*jUH[f0aCGQNP@,9nl]S:3Y-NaW,,\i%\W=#?-f.q.`S^O@BS/*='CNcolcj@.HNS>sHS0/-s(pTJZF>'sY#?>Kq'L*:nO_I/op^pV7M]'5`is3"XmpadB?\dF_blFEW@$E8%f30)?=+$pH%R4OE'7("cXpja;p"klq54$N5*FCo>mu."kh9E\"S*3JpS[%>[DmT7iY&V-Ahh$5FG,VlnCdHsG.tQUTHZlP-]W'2P%;Xp>>2`_9pXsZo>B`ImOlb0jS'%c1#<=efh@J"\4m2`4?[8f4/?GG@ZG4,JQ9DtH+)o"?p8QTcR>dZVJ>d\?3FId@*SSX7,?TW1s%Cj"(Ti](_7iW%YTGA+Ipa&1D8aj[,I`?)3-T@*JS3ms.sFnC3nm8e?-npBq,r!#3bEpdS@S27WeR!7T8p";CDpg<L;<I`f/[Sup:%YB-OHKQ[#%D6D@T]&btBjkp!j3<*/2%tBZ8HgQi<+a_GZYX`2^nLL;gC],>NBR'R!o2)rLnIa.0\neu[Y1?luBN=j!NOH?/bhETo%d'JL?f^:p&^@Y@n;CO%W(`2MaW1d^;nBq6nrUEhSk0+`.h(uaraPN=uO"4Pf)Ktl"E@:".P#L93^@OfsT:p?+fe27Jn,(2`=Q_$t%GrUg(7h,L]THct`Ceq(b)d+uXpLEYg[Rkr0le/f0T!Nk>k).=)fSY-Q^Q67@4l/X,WiP64S91OX+4mpGR][!g2d<\R*1?QEhe><q%<cPFOq1^C:s/Hs7!O($4e%L-nmDoZ77MNRRpZVFt'm:S54kcCClt]SW_chE"Za^5Q=%ki]4*%iZ&o#[n#Ifp^-lF)OhZc[!BD_sD%meb+0FQl5C-P(UK*VJ+``pUOfhdl)f4FafoQCaXiLLDc!56CLe[<$>L<Gb52PKuZM\2h^S&#EJNWIk(uHeeX:eA)(ler`()Ec'Ob%<3B3G3TWr9=QO=FQFXVI*cde3Up1Nf1:40L,p24=n=<">_E0]=*\NI.n6XB9Cp%Q=+nlI1dZ8TlJ)ft1)YI>1N@X!,)X##+`nj=s%3M9H3[p6G=<[ej;#jL!tE0Rkmp7C>KUQ3:Yp^Z)EPdt\8lc&"M->>O@f2\KEi>29qrPY/9R#?$fr^L&NoqGd&`$K2qXt)6q$*3(*%q9mbU+gX/[ch6-E5HJKna:d^W>.YIH>42r(ET0U$f=hJc[@c%c2MIg)A\D)8lR0[bcgEae)o&.tpjJ^a9+J/k3c,+3%_dZJf%oZl%*9<!I"0PGJ=6pQi#=\KDDt3jB0s?nYf.K>9V^/m+lQ.-r<m>'4G*P#&2)m\ehRH)0]"f9D0"b8JHa#T`8/LbDgo8oHhHk4'hHOUg%7_ZW6.1fQjV.15/:2?t<kkDS/cW1s1^;dA?=bh8l41;Jno)\jiJ2^kKJNKC9q<$hq\$.4F^TQG.KouB[mEE?@nG^]0n+8^A[s[f%%qbNj!=2VQGrqjHV^TN%a%VG1Y?cb7epV2"FH%#?%+5VMHrg3*QnG`&9ED<"[^3TP5r_1*)q:X*TfCen"S,7EehS8s*S,6:eFT:s9%[W(p1c(!>BI<bSd+()cD]DV0oiucTrp\t,\eVJ\ShtQm>hnOX7nc$dks7c-*Q_49MmJCfdj"as1#QOdQgjf*sJ%bm[h:EbH)johR%]_hB6ooD=$pZ,\0rjXS*rgBD9IJi_M4mh7HV_::!o(AJjJ"l-(p6E;AF&2W!p\4^aqW42Z+8#'7+8Mj"^&?"GDdIp@]:X&8keDUT%no[4%=?_$U([o(bF8u*e+$[O;mf)%;DVi)+kPH&+0)0bifCsc>s5E?OT1](*s"EL5k09+@SUU;.h7%$H]*@3r.+h$sH44-<&$OSg%s)@\dc`]Rhq_QSSDZ&r%j8Gm*rNpajlH&gFhs`sNd#GLmj`0%gGk%'tR*I>A*PSDSqA3d/qjVfu?G=,Qp?XjcrVZ;PF;E0eg#]]@%IlN/2Im%)o?J\pn?X@#E?=$m^bAl2ggL\&LQh`D=:V9q&i5Ns[ou5J#ji%DKN/N/4(*bCIH%"+0]NE%h]U@CCC0o2DdlJB/*4*sL%lRXiq:RZ9XEBA'hkB^BmbB98U9Am/rD:J5-,EF\@qCKb7`9aORg"3Q*IJ+iHf[fBbPb,k$(&JU\gMOQ:9+,N:D0<Hr[.Vp,g:C8=%-af64aXsVj>b?//f%X-:=eBgbY0VDm3>Nr&J_'.u7r6$Ga3"0CKoPC3l8h_mk@T.Fj`@gnQh[)n)N6H5ZehL"q8f=hZpP4CanA="%M2+mZT9K3JD`TuR\I(RrM*Lnu?)8Y=aZo37>!L0%q5I`uSA+Q*qmUrJc]\1?rH",Ds)%.pGkTDN00cOP$KDMdrb$\KISTg]%t*Z'%rLDrPnn3CAf06)[V"A;Kiks+,1#^OC$\)]RXB01Qn4&f(,$_:QY]R-h)rW5<0sAi%fB2O[]?GL30@r+lN]6KOFX!]Io%JnB0o2Dj%Rd"99]rP)C:,`a;Em,uq[:<ui\`^5bfgWV[bPjQ[jP)O_EGa^J2KiA1]s"P&(F-FpC]&KuM;'oK;9W_8ZkuD>b[kM8MqM@<[=#Yi%d-[:=\2[DnN1qqBeJID;MhbT@"a[lWg?i&UEH/S&fL]@"XY2jt(JDF-=!pklDq>V[Mf13KGHn?[\1'a#/f&rM>($$Ugs3,`Dd"-j%/7.*I:EGEQ?S"*`[Fk/s]Y+T/IAb'(b@tt4[^[pe1`))!?S.:fF)cOEed7Gh=\om3D!PmSl\r>UB>rC^1N"g`Ab^2@I"m'\J!tec%Iu8Z[I?K)SIFcW5n7/GP\+[B&&-#o1kL)O1rgEHtp/rV_;N&P;ZVU7TZ1@5IT4FSX+1'p3h>6<sFEJfMG%:Q_[*OGUVL=2Ka@S9K%Eium>,WRFOnRge#mVsX;j?gSeDP-a[4S-+4np,1XSEq>ac[7@:q914YnaLU_^\TaYp<9Euo-k27VtD9!o1@8UT)8,4bFHH:1S:.L%51e,.St=&jVo=]<IkI>gb\'+gN6!Ub_.JT`&8ioQjJ.MUkJ@jQ9Zjnp,j@SF&S^DRim'oBkFoug;!>H8..fWeGtnU,B+$d8F7`#6%>p!m1h/$3OMmm5Z,U"Q[6uDHsI+Bg=cl!Lbn7T"@Rp[3pYY6J6^ja6D&V5(En;G9+kMkY!5ZG\Sa@i'll9[T/#O>jf([d*mkkDC>%l]s'MefRt_YG]9iiKDj"^1W^d4jIY"_SWlCXnO;0c!beLVqFjeR%<qbp<t!nVgY$41l'auT4\,3_b<J^,Q]Q.bpDS5`O@K92nrNY%roOQ*iOBY-?5oT@A#-<WAZc^0EZG24lZB^DP9/>-b\OQ7FmSdD(s[mf>#'k]3=We(X"\iRp[D0Gm#,'"8^ssl9%Y?tD!PG4qkELI%c-,a^PGqifF#DRYU?buaVIp?H7+Lo[eZDfQ\ho*J]VV3QWIUZF@3jIA5V@_,FQ"!(\3q&!E$JWH;RjOS/l6-NA)dgInCK&@kngYC%]Bnl.)gZA_]p#01KNX[;[2l)jC<B#YP`9sjHV8OKm]RlT]#YA"]$F-[eLlM$>R?=uYq6cFKd:(U`O;@1P!aK@KlEh<gOircbi'fu%/D4Vd_W70T]HKE,_RAQknAlR<9];R?G\OT<Wga^WFIZm>?3jWH&h\TBib&fT/tQ>,mT$cF(M.gEp:Z^NiED8">M[:Hfu^glFZ26>%GLhe?jm3BO+&3)o9o')D6Xjltq@NeCrU&j=hgaV>bE$[NYP)ISPO&#_]R3cWq;PB8fYH)k6VHUY6IXs_W;2C_o3o%u[lD%*+21Y,%Mpg_(0]htE.>Xlc2"]m&UkRcic?SApNn(OUIeMN=hrV88JnWU.EE8[;<1bo;J@_>8e^j>!:Br';Z*=,5cSJInISN[Mj=bumddn8>%PcDLl\c*0_s)YdJd\"])n[Wo@3B\S1+7U4Uqj\]U"CM$g[;1<G\HLM$bBT-/<0B>aE\>ZY-+[m@36[V`K&';2HYCcPB[V4PS@'ZV%`Qq<bEUVV'R`e2fT8J%-6pG,X&#DLS!)H*.d)<_TU>WGY9NrL489bgU<@hqt$?__n$\q7B0KrC7Nf)<9"9$;p`KMf9&%.n%#4kYc%ET'b*Y^_Gii]101o^B%i4=BHcr]QR*k@D9T^W1BbS?-r2o7al]bBg'.-g]YogfuHaFa\=PEso5SkIo1*f8X!ap?+YZK=52`J$qZ4%#<r0M)I.?pD8/lSZQIo,?er(:'+2LOU]&QZIB[iicff(-]Qq8tI8@.uIm@68_(C&e`2@6lnIOl#?eNLJgW>NMZ>;tO-5$"$l;AEM%8O"C2l`m@cOrbKYbu3s-<^&J)b?CO%*T`X]d3+Nb%^$t4<Yo=?5Lg`[79$HAl;ob(=2_V?`'/,jT:6k,AqIgpI4jTUYFn\Tjs4a)%-rXd3qOI1[ePjf>,l/HtjeI"QC\+?-R5YS$SpmR4e]\#9H=2B"*U7<p8nQ#regO^tN]&>o8hG2UF>-Fg.o)USC0cj/$GI+Yn"gkG%LY-XJfPMe)6FsfA_='lBf;B^o?2lnGqXigUlQ<$0T74FrrSs..duW+`^T:[un8g2@c@q-8?%eXjJdg(Ke/Rm!Le[nK%K?D%0`HBN%q\WOpr:sNY:hmm/S"LbQKQPcVqG9V'cL[miVQIl;aQlhL:85_j&s3kLl54PYSu-r!oA%5L^]'AIX8602Sd^U-N)Uj?+rk_)Y?po[%p&!&Ac&a%[q*s@^/Au3Pk;!#7'[A=+T@[^gK)aZ!eh@'LqT&V>UjkBTB>6M)L]87;^0T7'qs2^hZIU.]^6_*h`jq_T4hXrZ\=_)i%88meL6Yad,l[7#$qu+jgr9edWV-fj.SG9!P:Q\dorp[>eMisdbS:NZF6V2H<=JCK]fD-NYn9Nk+-Teq$.=$YOXkgNgdbXMU]0#rl%?^.4OmIJ6UW`/dlid%QPHB.0(4Z7.h?!YTD8rb2fCOMf+RZ-%bR9j$#QNkn'BTGVnkL+W__Nsjt<j[u^*,K#fE9fdsUcn#0Q+]UI%cacc`\;Za@/b0g_gm,O$4k!%obul-SEi;Ig$_XupQ7H`o*<9$[0sB80@`[)k[04ITB:j)_)f:RXO_*"n`S&hp,.Ahg8=16Bj$h1e%a`>7O8#)>/Vpa.I<jcFq*,!N>krNDBg0"4$7Rp3dcTZi&lqt[efK'nFP*ahGNn#hc@nXE#,iYF_`*)1bX)V=hCrk#fLrj>*Z"G@W%]76B<IX?p2[jQY[(dY7,F6#!6N4`;Sk7_be40ZY@Dmm`,8`V"tOdPuWI;rJ.H!S%Z5o)hWkAt>UHK@h7C=a63g:SO&66#+DmU(=F%g\pFD2r^"_[F&u#Hd(4-&g,ciR]4gh]f%I^.G)$"p!da.:0i%FSe'QdrO`l*pEI)C\_%iPH,1D$U60S@8Kc-23CMn$Flr$"^]J%0%^^<qJ$*ia4(*epWC1T!.@GOP0RfqeInrfDu%F!OG5uq<0CDS=3\#ukmmF[lAXQ*U0>&u_2'ar8I[`H^"@eHTJ.g0jK:J+;`Qbjqi%]3Y,^hS,Sr6o^:[4giCsV(_hED(];Ed44JU[68>mY75E>J$%ch5NGFB)9(UC6e5n)nU5)KigS80=3<#>*e;#dVG(E(WdW--"_YGj%M3HbO[85h*MaR%MeiLn"fP7CJ6^YcU<mam1WN#K:XOg<Y?IN^h'@oLMG-.ua-&/fJXg^qu2.EZ@f/3cu/@-D!23l::gY1:@\*J$l%%:nMDCE".:/@H3P3.5E)Dp:B`@a$)M"kTo9UKE"I]8Pbf^ZN/1Kf$DbD)(u84UX"A3OtM2eq(R)3`_Q4?j#))d5?lsSiZ0`ekS&2%8:q.PkFu2@Y[5c_-O/[>(bn7uEfD'Y(oeSo"%;jU<o),6^B1X+FC8.a8(1N9)NIYd9!J1o`XmGnk-OcH/R'oi3I#7>edft=;E6R[%AIL#I@7ro]Z4^@I6\us[[[LC(V:\kucKD\OetSRYni$"$OL5>DG4W:cm9=qhFZSpp8oIsBL&>=ueY,ZRmJ!&;LfmD3e7o5)L0.mn%]N6^t//)a+Y:G4nZ8n+S]4TPfF)nk2ebQ/O"Y3r]6T3mqSAnA@ES+/qqpG+>5G%a.EBiI:fkl!eQ8S<ZE4,(>X9:]1q\m'\CjjE.%Xi)-JHS"j=g<BlmM$F5'R#/,hbd(i,3UC$ST%ZF1`g?'_3O+g9;E*T5BY+jtFGZsgmLA4mCu=m#93W>nhE:IXFe6%/@dpq-#Pi#P%B(nYi[r'_D?XT[CHSIF.J^nRF?R+`WSHcE"EW\D.lXGr9;naQUlO>uU&a*9JNlhQNNijmRjM$>[;=@is6]VrH]%rE'.[Vp(\7[VW%cmJkjBp)Dh?UIr_&k@=l(+q5\8:qSKCC$)mT>IYZd&,W*QDe[oCUMlNbDCNLXhL5hLW!,@-Xf'8kp#7_R3\">6.m/]qf'^G9El(6%@1)%YX0mg@>c"^57Tu_^Qupq5@d'(d-=!lLN$cn<N_.V;R"[k5/X[+g<JR6J/ct$qW`-BE*Q1Mh;6l!sm8C(Rg=h0BXA^1YEN0ZP%6&fA.eh.4k5Fe'/KRHk(9qc:%O><\)W?G+)>N@oq;"F7HJZrE?[G9YtQl>kKAl.`9%J-O,@.p0tjRnfce;But%?/q5W!2L7nRY"5%XTCXa0F0!3JXD?)<uj2(*?K;Ag3#YTD]l*.[8t>`m_:jRl=t)@``?e_i./$\P650KA]OnZXq\-GgKj0\NF=W2o\+$6>$!-?!\n+b%g%&m'%C.gpaLP"1JaC?;,>T&fA1831Ydp.NN7P.N<"Ql?o&L1b@hVO.GKG.N6tL4ZYmrou0T]*VPe?.V;njIPRco.(Q=]^\b+N2S%G)=BdF8,m3(V2rq>&Si#ijQl&"jhAB$CTI"9'/HHU7s6\?Ej;BEUhI::$iJ<,=#MG6q&@P0cYVq_!6r[^K<M0ahqSB2P"ZV5\L:?%oe9HfeKmOr!tgGF)-P6N&?![\Ftd>pD4AQY,\l;o'?Y\XTu5`0&Jt>PA$%S(&U@.*l??h>=0G6X&_LmFf%"HS8mX#*aT08uhg.!8%U@gRK!GK4^MfGhTI4!N&RQT@'IcG.(g6)s=\dkZ/H?XrAk/qR;0&_ddfP5t8BG-K4%je(q>>LKFfkgqJEYKoQ/b<iN)HYn6GVO"H%D0P[$:>@.@X^uIK`%q/&!t(/'P:=4G4*G0EfQP->;!HYN:mMXb.cY2F.qYea7]mId?sU:>[]&],NgZmE8'(!ge*kk6W-3$"<N^np%ZdEHD>W3UVO9*M$%ERnm)0q&Reo%m8$j4A(l&?RY[M!'hG3-M"V<tFL-</H"A&rhmm2G2e=a*14h[HBl/tnF%YI-'`kH!%,cg%#(%hhu9;9CUVo[dHH4;\M2A`q[j#ai)nbRHFD+<Y[mO4JZZ>'@n@afeuXKCIRROc[B!?c'81G;PpXGfhon@-7pZKdN^1;=lV3I4`!hg%1]Ff35[Ogs`YQ,^g+>bV7p+]J^2?VPSsaC3b5NN-+/ZE\C,EMCpD<u!(pF4-[jSd'r[eae0oM#F>A[cihEf@r=:<,LUE2Z]PsKQH%)/+2F+\7T5H9P=B6.`M#o6a08dL[,1YQgO;>3LJg0POq"NPoV5MA4N@>uMu"Su$;&521HT$JFc[BXdgM9>8t_m2B+$eP&h5;;,Z4%BW;9<4]6E?8+F,q%5]*X!JS&<Pqnf^5]C$3Mi?@.+Tn3INT39`1Es[_1Co>H7YP9<'TJl!m@?>fA/6,LX!&I`r6\pe.5X/TZ*MPN%VDYJP.!]R?1HT`5AE;q1TY7Y6O[q;\MG8toLcB';>kaY&Z``_Yk9Q&8Mc^n"RqiTdn]Bh8\qgTkTIq"B2:$3CHc:f8E:S"F1t-41%YnrIi\9#jTaOG&^\2l4.br3UGd;F2^Qk`>s'WL-\q)7Zri4JcM8S\Cnl3?.>)TMVTEB0?5HrIjT"lW=$8D:o""Hh6qj/.V3h=H]6%IS=2D1'cquGtW.XMQW5e((e<`<EdOa4EQHbVX1BQkl$l.S;&m$-TC-EQ"sD&CXL/.B7"$-4/Ya:MnL`/gq'r>$/P'.]G='r:0LBU%K@)H;R+4Tp_!Gdr?/uS9]/J2Q#\$D+YB<_58Is1U^H#"r)#rFlGjmBVLu#`@p45Hp#Mip-]?1%W7iAl*eDis:-GnQ7SB/cq&'9ns%;XWrjZUVYohMo<bp7FO@in="@G6T3h]P#VoUi)m6S$Y+VR)@1\VNa@`C;Yi-X:RI2<V8nDf0RFQJ=Okp$f[si<k?S+_#^VM8R>lu%(uE%6M*`3WiX<":-Tdr7d49/9d>C#*FR&7$:sGS=LFVHj9!6laZJ%uYL`r5TJ1Yi#.=1VuP&rS9nrcIU@`uoW.jPoD7Co/64giLL%e[A9jpE%9p<6b5@@ER]\ETlWR_<lfqXVFj?b&'PbihXM_3(sF?UK?#sfc+<q$o?VF#R[h.m5f`t"13*+8"a#f<K32'ejG_f(;P=b%>+/.='%1Ec)fX4?M$'j.4>5\%GZfd[g-d"9Ija$%4R-J);S8\GYtmV5]&mUnC+*(+:"W:r[dm("CdP8j]QDH?6TC93$=tR*lH5,q%2N/tA]%tcsE1I_a*557U\CuVT#\$`:W9],4[A!mE^s/S]@aS&(cb]DG,%euAX+;=+7]C0dbZs%?U'\]H4'Yj`R"AT!E<A^4Tf,$=%lM9GeMImqDT<8gOVtRolf)!3gR:+3_+U2bF@EgI)o?sMjJRG(D$%G:J0t#[T,a0`ZbUp._1!kZ-:;:6?k&d0ZRT/9Mg/Ei&a0dS>%hp,!DZJOH%)kp_J%rP*!bKr<<gRuJS2t/ph0jl-R>laFp1K'"c8.VEYSgt?kf0J6]AJhF\%b<$20h70DW&T][-sC/*&!M7kW,mtb%p=@&B<P_u+P^,Q@b>a3p,:=$t:1]e&8=]ThfX4\.ZA&MGrQ[,6F3f;b8s+#"W(NRBWu?Ik)Jf$NU2`kh`a5&K3R"4WJ;KrqQ^G^.%D4<[+lBdu"f.KTTM%Bi,%1F'9+aF2OZ9qHtlE"(jZtm4*NGI'+"#F,b#2k55dqR;,dN8$`9g0GlBScpR-RCk.1]f3[c%J(H1n'+@%l-cNuIMB)%,cU%=6c22a1qCTQ\IQj902:)H-(_c2Oj&rj((EFp(O7GA]XI']!iZ[Q`%2gA$NMogjI5>]+GCeWb$Km(H+hm-ij=4J%pp!hQN(ZASZe-uU<jJmh?tsZ*1ulP4\YJbd*bl[JiQ>.c*:p2DJ@susR(@F`&,J^G\jbT4$0L@P=e.&LL2U?(M`A$u7,#8[#A/Ta%Wa*4mkOQ"LT1)e/[>O3ZWaJIX]nV&",-+sB5GS$O&iZTTUM<F6[^Al.e`(!q$.5l^)GcK\$liP_EX6&RU+s3tV7@):7P?3W>mGir%G%h`pLE&/:FKBZ#19RH+V*=63i^VN3KRG)tMNdP'(E/d<DFulIMRnaSO4/_>8Z[Qd$H^!I(kJ@J5hIfD%,k@mA@(2U7J97,(,-ne%/8R5]mVg_:W"l@)1kk"a34u\:Up:@Y?BV:E=ODFoi`\5604O@?%?.HA1Cgm)d`Pa@->d3:F?Suq.jN*=Jg4_51B#qd+W<6C-.9R:%Kbshj3jLaSL>-gBL"to"6?Kjl6U]#B[m1b_d_9SM_+JTX/Jb6&83h:C,A,Pl.s"Ia(e5CZ5(V>b1c$<qD`Ll0dieZrUQI)s$UQ4N%ZpN?CJc%NBjG&jrQN?0(hT4pRre*Xk7kjni&RGP[=GTH-"VCjjC^bsl=Y]_$gU6%e;rWtR/:9%d)Z7_r=@+H(p@tj]/h7NF.PX(d%H_;F/oDAQ8n_qsilW5M)o('\jc@3#h5C3E6H81!Go<\JpgJ8nt^\dHcB:"r$Y?lX+qq(:$8c>6QTDd[5b5\dH?i&<\C$f&?@o.:q%or90_3nb)/.Zt5h35_m.-.1QpFtVV$/s-P^@De,(?i^h#THb>,CVWRt1:C'k@>tq(R]c:[@/qdSF?S]iQXfS7\qdKY;iT1SqAV4T%%Oo5JXXLLM>8d[qf)fU)goe7UDBahJ(Lj;#.G:kb-Lh@%"L6I-)-HOg)WE;7.i+P@VEgYlcp`#:^#K"%NYf6/X:Lo!5m1:c1XT$d%e^]O-c"sL:M+)SI?EECRK%Cp`qRV]a%RF0]%P0),E1^"R>pW!BII'W/EH[dt/aNT+X>"`"AC\E!eU$5m/Gob/$>,]S1't.5U.Non%CmH@"RE8,C#dR:c%75!b^elL1.d2JP1S>1@dOsRDojFG9CTckiT&pkA=ec!6Z*(8^i"qki1mhCp^+0YKDbB`C+q"VY1&;ek/&5UY%^^B\?^.oM+AUpIMW+I2Z-!b&#"'4*0,0URm=]?Q),>?H7]>"U(E"EoYn7O1SKt,]5h*Rd?`bs/O,9;m0A6i^BD9Gb\69AS+Wu+2G%D.IgYfE1.gfu&D%\C\rD%+BC_-YQI^+4V.=[V`;kU#J8W#:m?RJ/=@E0o1-2/YWM<*g**=N*%*;7jMc`&9rSCihLYg;fO!c2_A8&%Jm!u_864iNZ0m6g.8["sbOqld6rb5D6W]6U"1A.CMNK>)6W-kNO*,5MSL)go<c-O3;5CcR!bHJ_<cbXI;+1XBE3-(eBAK,jE8J1X%Bp#Hfg`QhZ(G2@A@R-HC\uWC1^rG1/+QQ-tb>]`D:kjgAK74,[]&ZHNg)8!7,9Idu0bYV8G;ZEder(;2#Tm^@&qcSBMTuH,d]e)c%YZmTHl-/k*&Tj."f_j`e^TtCUY=#Te'I>Q*?kF:.#NEhc*c?XoCUlF!apnTu5c;'%meM)BrIeF_(%,%G\J%C</<Ecn<G^BuhV9C^%CS!Q)QJBrI3Q,*u^c3OU26oZX)ptCQ];bZGe7:&A`EKp[#"k^rE%/;5@!.T/d)MFae5VksY+iu0p?#E(C9C]b07'RtMrJL\Au)>S%_LhL(L5&!keMYT?Zu%;LHOZ-V*\@SGD<:\I4Et]u>7Q6Y<G5uH_6^K;'2J(NQDkHa@I8%1_M3d-#e?B1F"tS_E`_8A^&sR&/g>[F%DSM@E$6r@;JAf6c'KkKNiLJqnU+t,K=&_"&=c%-U_MH!lp'`ZbY%YYHJRBH:-u+3gj2`'lL7+8#b-^1_\s"'RU#mC/ER<PMLAkqK%g1h)<7:m5(UkRZVW8SVP(kZjp^6seqqsAKZ2-`Uo/*7Jee_15aAc_u!j#rks]"M,ME)md/O=coJ1-,hAWZ-Pf-3\t._4=:Fb>dpX%pbQt9!c<J)oi5?e#;e[b`'b7WG#+h(92umoT[j7MpRF>sekA%$)":`HF9Y=+?>aR.ZM0aMjK?)=1qJJ^I5$1#G'>AFA-.UrL,kWu%FB"UKLMAEE9HpV_g%'6AGkHDYZSQ;HSO@F"UcqhqW7e86Ls,1o@Pe<U!`U`G7kefn"&t^9mOY*r6E_q4Vl1g[A;P)%H_:0,@He,M%Th6)N);Q&[JPe76"rdUMf?.^WM^CoN'5nocQ4+#;5oY>mchtshm04*,k(Kp&DumfmK0d&R],@o@23q=#(A@p*7YQC@1c8]Rf/oh,%N)`S!0hVM5\]th(L6H4Wo8(5]U-Y4\N(!2b>0J/0hZcXRE+JBGm'_O:8@2:3(.R0A?DDXdk[ju;9I^6/jeG$TP<Si$Xg%)6pTD9F%4ggp)Zi':8^RXTG;(q@k2&79BjL^3.24*VWR1D)-T:tZ,hc[]8-"/.P\`*RnVe=OGKN9Y:)5^>taPd#rC0/@E[<4=9A;"\-M'UMo%ZqF>*4Gn)H,t:nE@:t3dW=:+BXhu5WQ0flr@>QFT<@oo7Z<&8/:L&K?3R]Q,9%9Do/UpL-ATZHMf2BPkV^B2:eigPOc%P;u">"`K%l@*!C!>>R'2d95dQ7--Q%OGY=<$O%>WnBW?p\;k0B;;4L1E'phej-[gh_b_^L_bgU[8A4[[$hh;*(M_V&rbJ"?:W*aeSB6U6%I._%BX\=i*FpHMILH[-c6\N*&4?+jUR(@=bKHVR&Ds2p0Po6XY3EN%)I"*q>26s$mYj:*K8=CmRlJqu_L!Glhbk\3f^oB8KCumoX!'pj%b,jL:IAd(aPp\S^<__E5E%7ih76OeDp.B*rg*.0B;BB[.>*KZ#4,O--XS9M#B:*7$=rh5"%4REQ!G!$;B$J,:<1#;M^<\^u@g@)D%M6)=KD5Tn"_IR8#TUFmX@ea?N!k3)VI'UuafF@0Yr8RI?E=Fa_q?G>-7BoB^--p6T5pW6f,M1/8&),g%`'2hn=_@koUBEB[bD'T?%@8mHMk;9kXY->L>5Ln@Oe*oS+M^imhRFm="P@O/i1PJAK8`p(9>2FV^58qJL,eIR#/@"$?hV?'Ip&4[`[Du>>Q_mViirYQ!F6;<t%R@uFihf$;S;!lu&js8>0fYpKlo&HMKS](ZII'LfO6o5:PJeE8D;H,R0+ZN.V[n#*<13+Wpd2Qd_KD2,tYB>cfFlL:'IfEAGJ7Jb.%aI_<V\Bd=C#q"FSO%@-QQ<8::mX]1\IuoF+gsEsh">$-(`b7ue&>Q.5N6EM=YqstRf'(TIOa3-q!6`?EfH`n)&9:\W444GHH)S>F%E@!D/gQd>XSMBTO"7su7*)tt+I5!WQK+XaA!LHbRr3f$<XZ]98_3,O[[A`GgL01_fZC`m^\/DQ&j=-#-'kaNo:H`N\C%(&hZT(XH%L:<YrW6H*G"(o*s'$AmTZ"_CEcK!'WB6/Zc_n^6SjP15U'%;5_(lq('f,XcaZbF!.)0/Q2R`M,8)<3RV:\]<bAWSJ]HF#F>D>K`^%RhDJ7jZlN#-us1j,fe"2bYP_XP>?P@fs&RqD$XHQSW0Y\RAqkaF"f,?#J6G=RmekHp6U_b.$=?Cp.$E!W77J=p2d]EO#Y:/2E[ro%8^.2+"t\;%UtV-JA!BE?D$4XKRuac;Z:"nk"d@JhD\VqM!bBj*VMG,Mm^>If2")<;g*&++[nP\o*O-I"klJR8%4@"3N)BY#Q^[uT%)E]_3*eO?4HL@#mKVj@.*rkQ^Q(rk7(k,N7AF9ZC42#Wm1H*(f^'^_/fljRm""c'>W+5E(*b^DgOpa5rm/]58,c4UskM"aNM6I=)%Nbb5/;-/B*Berp'bH2R)KuE.6cr[dU3]0#OWm\9/eDlb;M>V21G)pkD]c=q.^NS>t4WQEIc4;kWj[bgTAEQRjF#4dh^sf3d)^7@!%h$Aq0gkKHMF(=;K*.9R>Wba1<ib7",#N*#oq3g>hfH,Z\>D$6;XNd35n/SpBNWnQ2Kj(%TD7G\1)X!Je['Cr?*"lG,-a`5U/_iQ$%:\e7t1?(,)%p;?f8[Lu>\WOW%d?mV5'P=f,)j=eXP_T]%L(COUC%LJ!G5c1;6O^Cl?$B$$T]\<PejkL&;Srm(mN9]L^GI(Q*$ic/%OdmU*iS7k#kcJ.4%FJHCfK#lIPZ2gJ6;X_C5f7-00<Ha`-m#Z1(,`0V2<0@:^,r*=ks%S5<$dRKZtpHg<J\s+UVi$#94B@d;eDdV%_r5&.Y-fte],5Xg1\V-Q&?1#gSF7b!EtM=L*A4:BBHT4Ph^R"0NO0e;5OWEo!GQ7$&2NF6J-uj81]p,+ct[0e4iff:SkK_5,DNJ3%'b'(I[SH:>ml+0MnH,!nL\.^kCDhC]D"_N/IOe6Rm4fiIa/p0*fI/;9DCRsH/ARrf*_MAd'Xl<VR,mRg.1261X]"ur$E<We'u2#R%23Mn_B7Q+TLd((Y_(rYq1flVjIiNEo9]O<.-$US6m?A]*F,f2V!bupe7bJR]gLQ@ts/FJRSh6,83\O7rm9?r&[^UZ4+aSg(#-1?[%Cif&CWh+AgWo#s%nip@$\2`u5SR3'Q"p-Z@<'@W<4%;p6`&6H]fGeD0p?Ip]L0Cld,$u80$0IpRi>[&AC=n]f=l]7IJmjC@AaCE8%A5H7M(H[c]Q-q6S!t.r#XtoQ?*.;6LVA9ESCcn.;3$hXen\em:)c*VO;IBUC1R1JoI/H%EbU;YdarnusS8FtfUZpa*a_\=VG6Oi_%)AE:uRR'VI#7F^'oB9ZnNBrU56(?g"FMnN>306fE)2O,"bDrJJcfZbG;$D4+V9uhLP6]#MkK_o='=2Ceb^XkKa?/Rk2bF3@0>Ods%6<=VP0OL6+#M0^n@7.*^X.qg?H3(_t_X.VM,lo##r64/T6m=E<6,li9N^V#;'"c0A6.aou)j*<dYn.&LcA.<^%8Ja,<+Ab=AA`JT%;QNHMi;d>\FOpu1j2i6V$.6uI@V?(s?`b8CaVkmZOd&`qip5COhe`H>o\!`sT89:42M"B27NR.8BKbV1Kulh*U[#F1Gea`Cl%d_^%Ou]Krrf1(7Z'!h2$t=B17ohmOVsSA-R5Uh?M.s+C-PoakW`q;O5QVq&#?s*hl]dI.W?Ti",>HnfLKahq;0aER%be`)M8\?;`"#cL%feW)t-Ks^J-HZi3Yu:MrL>uDGVUCmb9$::9F>l8o,<94d7?9rJnMa)[:XPgrjLt-9=coO@LeYpoD^qM\@Iu%++HL'>7AlImfL@#R%\.8fOb$-(q1%:jY\aMJM<0`lS1->_/N(W117!Ski6/3I#_N<-Eq&!YH#__-I6;ouu+U0mq+R7Q%^G<^l&CI&)ahdbCiE1GBXK"Y0%%"]tji^"ec@SA7#Wb!V6<f.tF&M$,r-o+09dZ"_qlGFgQA5$&]Lb6Lcec:ES*E+1P6gcU7"Rm@84hpCPS/W!r]s@0A+(Vs2,*3Qc%Nj(/o%ZPt$--WKFVZYi4pE(O'pAL&D%n9tF[kAFlb5a3"B8EJnoW-hC/!CiJHO9hUVMV.CW0WM6#udg^JT"b%5,LBWSo$0`ApC_!%%=AOQ=q0!Je&Bgc^q>;jgPcPhj"<c%'Y;WhJTZ/S+$[UhYns8T#9d#\L5g9tnQ97j(n_i5(,Uk[crF.E,157tlC6IAb=#Yb_jL[]%;Q::k)ITZ_.O";r3g%dZ0cbSUCf!Nb];TL2=*_iNDf!%gn0\,=VO08I0%R'h\5(m&?.EVG+6M^XO\IGKa^o&OZi_^GEr;H)4ps8V%#u(XLJ;=Cd(_D?,`8CnUX_k9tb4X#s/nMc/oq9WJI^2A'7m.u*EDn%;<ft?$p+:Xrf)\p]VCO/YdC=&F:fJ6h:*PD1i-FJ@r=7P3%:I9'U<M(0DC$jL:RuTt8[_WWnnL,r`:;GQ#.gobhPYC>hJjd4\<b2B<H(bhXV.Zq4:R+CcNLj=*Ss9#G?8B-mQC-2M$O0*k]0k]i%7RtScZn#c3@#E#JpA0?PHQA^4JNt@-VLktZ8USA:)G;04qC7ncLZ^TcP(mu7A[1c?VVCk5:kHrG!=`E.GtC)Ng%&<7Be-hS-tXJ\%B%ABkmlE!sE/>K,G&S!MRF2pmEQ)j.-U-J:i8U'Hdlh]2/E*^nc"N)lVSL`8Qk%!mO96Xs>LU3;=;e[JW*MDE,Wd>76?b3QoTnQ'%7l<(9"jEKcmb%2;!\k9q/c+$"fgA0[&P4`cjt&C%V`c^?\7Ku/da<NuOK':WGNWT!"uY:Hn:D!>BYr^#2E,p8/tl_YcO's]3C)/_%YQU:\3'c$t[FU/36EN+fGcXIPCYuJCg@Lsc"\-=]`e\D-ld@&HOR7m>,,hqs6$2%t?n3$]F.m\UWNVnC)A2(d7pArP8+kX?F45%X%FTF008"&Sk+M)2^f#<n3:_KN4_GGkg)2rJ:Oa4<0HE_%8_&5\j!oK/W?pDW,(Eq6",plV:RQ%W&%)EZk=rDmu>F>Z:PVkEg$uG-q%aa:I+2OFpjFP4A>-c]GS]pW]L%nPP3P%^irLlE:_)a+fCG`S8Y"em;u(Irk$g&paj"Lh0rO3X+!:^p-uH+$:s8DK"5A>-pa<r/:s%_-]@[/A[I3VnU%U<9[7SbZ[Z*;<4+WHKlhU99i&hGfe)lHa_TX+8P%L9/[q`h@,R1F'+h9d`n8Qp+,m]/GV\0$Q=/t9'/aRl>_If%RXFaPL=$G(ISS/EHY[0'oSmZT>7je4<Cj4U5eLP.#&l;>ipNCfSBXRpG`$Trf`sMA,?&3>&4#4rjCV8=E7IVp4X!quL`,;AX]&)2%8SflL5OAKP5nlgI[8c1q,R;me@/PI6L''2']bIJpLo[P7bUcS.,>iL+dKO)-bib./kLm1)i9VW2B,\XHQQ2+p*jfs71uIpnQa1*r%-iD1feK$lB1\ni;J7fTHb'&"lH2d6`UNY<Fl9N=:=D=,fOMj4=Cp@ec_dG57Xt<$bA1i\Fb)XjVoA#i"Ca)7ng=:e_n<RTT,gU)B%#LW1JU)Dl]Zu$=_,>q9NbXk!#;P\kU6j1K$4kkT>hZGsKZA^Vg%g7q/:508KV23A6M2S\R@)*>](NST:,*<kT)U"IuEfJpj7(uDG%&mut7ZAZBWTp6BZBS^JJ^S:<%l)cZJ%m3A6P;(t;CTW*i\nuVDj>J@Po^2\]'qgKp?CMY"58fK5oq4"MVtu7+.hqf@i$8(*Ro:fV%W]"6_@$Q$h]RO[Z"Q$birBULL)&O6h>,B\ei/iE/nre;JHniM4MP/*%LeCSeeLdl,*stic+:Xh0$46$Yr%5/F$_9':fHdnF0aG#&%i&\;5+M<j/P4@MU/ZrfSPSl[HNW(:3nss-#]>RB,"IOCF1+K^Aqtb!Rn(g5ge>u$[h(Ti7.lk=agA[&tV^;W(M\jb2/Fh)of;I9q%3';NB5uQ@#7hBc18HB-Y8f"d18d\d:BBEPs#L/9@g8F?+,Is1U4K'=rf#_ZC2DS'-Mh_tO`V0mtdlem=CmWO\LiB*m,\CL6G#*^P%?4Y)DC/gCl7;rDFq3ADU!P?XrK1e/jf]IhL;eVUNjcUlnSiYGu.:"2tj_$oMN%Le5lT',2k-uSFWlrG)Uk5OI/Kid4I+j55R*d[.%O<9PE(sH<,N$)Zta`B-6Uk-FkDW;)d[scs4W[6+kPDa06Db6O<V`'H8S](4'&PV/%mFp'H&]b6B_mMorB?rc#Eu2MD6Io*$mIOjA%mpe8TX?LAD>/kF9[=k7Z8/Wi-eX,!doO\:sM$0V^M)t-ib)'Bm64f?Jhc4bT?5V`9K*J5DFV\uB=G.h\Ht[XVlu3S+kXc9pCZs`k%nMOi[\kOCrPfVeOk!c=91aptQ.06VI]QUWYZGGK:Z+;plr6im@2,rCD'\.d)f#S'*!-4W`f:gAHqK<!=,8?tT)Ef2cB3+/&goN?*%CFCYlK+VT=d>Okam2-F`Oc(-[(F&ah26m8/&aTT6X-"^I=uqMn9.%3eV\YUnUKV8:-utEgq*gqO$FocOO_J,[$I2l8mSGB$X6'tQ%>JDi8joot#%Y@ir?208Xl;R@HP2Q=j>.nlU38blf>l=<@nRg/"H@Bsp,_&aL_r>WV]%rP._83'2;b1C0(dL/s\jXLd/Pgmi?(4<Y%O[iGZVn&"`9WaF/oImf1YBgrrLh<"XdCdfqOILp6[HN8,7NM,pGV)*he5+]CPqT:1bJP-_\]:F*oTdKG*V^bek,)5;&Q[2KD-'uH%9Ju&e#CRNAdrXhRHPX7,,@#3%;8WF3Pn52`7cmi-e-:/r.bb@%CTNOKdr"B5j'JC0R_8_PQhI3[4,'=F"M)3&;[>:_X"\K=dcHc/%RG<U^`0e(aT9AHi88A1Dj%MsngFog",kG-r+>d+9%l",]qn%biZ:\!@3.\Oa:[V>>M5&:k2%i#F'Ql#[7M&-GN55NTZYUMu&?1N>%8K?9;PsgJmo*,n1$tPeL*d#S!-;RuWYADYpd)7K_=*AUeEA),as/8aS^Ws8)W#*r#@750d#?UqtG2UM5SaoBP,7R/6:6+Q&:'FX,%=n7HC^3R<%59;#@o$lSI,:if?gQ3")LI[2[5t<cChp-a#5_gUk3?=QZbP16/d'A[h6>Sui(iPth,Ga%u+@MNgX+[)A6H@:oY/I4i%qPuf+qBK)?<!6nU*unFBNt:*[410_/1aOoSj@RG*HdrRo2/9Xd#MALc0iW>.5,7-bNkI6C,.4[]95K^lWq<7X!UALif4Y2CRWQXJ%lgS@pqc^S7/EVhl3n"!uLBbuG$(l5#[;D6k/CSrR@8-2fTa:YTc7"T9@#4$3qiV"']_G[O)^Y*O^qiWZ@Fu/G*Gse-R"en8=N##f%O7T#5/@gI+>jsks,]1T^7(`l0a7a&q>,#s0iVDsE(%*6gR<EX3'IMjg$b[m;TAC1.`I3bspp0DKlk$eN!BBVZSU/n$oGGWa36#E-%=&%]b4KNWG8V&q;+,H)rQI:_N`Nl"['V.%:iXg2H<Sup:XckVe?^lh<71Jot"&."!]+S<=8jLK1@h01*;)K(7[_UqV4U4jg/Fm$c%ZZrl1@Tl+Ll<\Y0ENgpFXp5uJZB>^J:dSW^R:p"eLu'(U[G9b_+&`G#8isnH.2b]S!L.i]G_WMY\1+bd7`FuijGi4X%F*IUjGh19%9'5CH6iCN'k&at]N-&:_'eIL<7UhnKjM>n^PR!:R;Nu@+4'4=4Sfsq=Yd3=D@jTuI\CU!=*J-d5A<$P6@@81D>4I83Bf!fKhX8.H%%`$TC_%Pl?F\eG_VSq_!AOQ]K+UKQ$H<fd&M)A)'5oEFd-Hg6\ZN*BDSI4MTC`1/d&P\oD[,($;L?X(e@P^,RCkaaZWk%aO8I;Te%k$@A;Q<=ci,u;^7!7>ShNa4rLHE&dHDG;+BL_h3qH*e,:J_K@[,"?dYi(),R_.M<q@7Ah..EFs5iR.7Vgn,mMO%mhXljjTK3-8Q#%J9)?@6;iZ."q&;9i,q[#&\n(F,gsCaRjbraYNgc;D0^&nAe)";(*-Zm*O+?3%p>R(:,g;AZIr@BA2+p0PE"CeG-$?a_Sb1!QGHRT%3=hr_)+oH1]bIK^nZ[T/@]3mE$1b_PVRl2o`(G*'*7@nh1lmN2eG,.fP(t:F=s:<c?07FMWQG9hPoQ('59V+b#aP-gTn$s%AsGn1%1*$AZnZ:4^n0<?^jrrHscQg@GW,B#Iml(qtO`uRE.si"nA?iL.b\f%qn=qLdP,a(S.u"te&rg5X26^1do;%@6^Zl3+-HIaSA<pUT%0ke*88^hjI8;CF!Cof.>eBa]J!_k.@SGbgPJ`=BGG00Oq[3m7rT'ZkF/jrl%%*:tqe?b1!&;0T8UmNp=Dau8*C\1&Vh;%-=+`kXT%3F@We1Q.-OC.*utK.Ib+2aEoM-X>Z=N*M=14/KltV2P1t`NjoW6Bc#-agKq4KaZ2!&kCjtCtTF.FCi7Y@c5])!rA[Y0\-M7_>[oJ%]ZI=[#RND;d<719GZaWJZ8!Q"kAEkF6Je`3Yd?J:1QBrI9^riU;`t],JD/?anP5*p3!mqCaalfh[EDi,R'G+Dm8>Z9@?%8o<<h)4%'5,i`nZ^SU/q,IMKrDcjG?+d/Fd8;P0GTI:TB&Q(,,FdEjoGUkhJ!_L9Ilej8gAX"HLjZH3Nuh&14Fa40T$uA$7/I$(;d5t0\&lH%TcS5NBX,lKCSmt"$^(<?:dW]5F0jV4dQ#aq,#E=@]%Rm`-$%4r7:n!X$-YA5'TJAnaSJ1B6sMBlrgLaPb`1?(kX.^r`,MI0U*/_D%Ai>2;O_>mlio&:$)&8A/`ZWRTe5/_#In.&J[E\dE=>r^eqXjSi"M.f*Js+@n55"gi=?\O<@T3bO&%Jp9kjhCl[JD:#4rSsg]H-ct%>@eE!l:$[MXeE.!XD$?f41A;hYdg$.5U=LZ#4\>XW#&c$,@M'q2j8#/<*5[6K9\hI^p49o:$pY"O<-i0dWR2JD&c/r7Pi?S7"e%d%calN^:j_h"BWUjDODd:1/1u'I7"QCc9t(@"&r828&&mmT6H'JSFoY-u>4pU"0ht57e&j0eE6`MSI]Aj6P_M)=BB6&)8BVIIMJ4p:%[&IpCTin'/L?5Ym5(/,XGc*aK,#tn6[(L2<MR-mSc+O*t,EC:g(d&fA$`^G%b9>dR3s[rE&2,qP7cdfG%Z[5\2J<`0Y##oMCHGch%Pq&f"B>YTsERd2_!qp4o$W*+Y,&K1?7_!@0*@`p++K+>[_N>'aBJce%o<-t7aLjp&@K=H;351!$P#AQrF1@#DdP^F2)mE4<IA;Nr%GEF\87>N9"Vd5QeaJM)h@4X(Tpmc5f+tX77O??h?fH1B_dX[/^!I.Y9K)fJ@j_6;X9ZGi*fo7]<Xa&PsE5dK5DOQZF#CgOWX@VRk%kokaJMUBYGS/V!%Q->'Tk!_n8(O789;aBJaGAu$1;,%-qq8p_%/XsX<?2%_<ZtdFc>qr_>5]0oB/8DE]7/@SWW@[@LFs88(*"PEj%Vl*3]V#0)X-4\31-?d2)R:$Le_%>4%Z'u3s#M%?!6+;7m6kdKA-a%;DQD*c51or/[0`[\UDPBP'__t+N$l^>S+X#EC'Aq_f`Jdt6%qm0D_<:d1;O=^gQ\PjSnK1]6.L+Q*Oogk%5COoCPO[3j$-Y_P,OjULQ^oHRVo!3f(=XaVb]d7#(`ITY2kp0_IabR+$ah#Nd3-sHN%ddN$\,n`;:#.U)cEWFK@RS_T]q%!-#^Sn&8\-sARUTgU5f$Q%?"^Dqj'i!$$LK1']:4o]:"*S63]X:,)L?<4AG(UVY3olioWrjD8%?QRn"0JjOH$^_MJ00'Nm;V!rj@j_6X/1.Z=;i63h*'>pEHg?2g:qU%M-l]+XqE1][V<Onlk3-Fp/n,jq+t>>YnieL0pqkHg)27>*%>IkXHl7<?[%:jWiRZgCk)l=:\k:d,nY-EmWG=J_Z%'h^AF`<*p3qYreG*7M$3mn(q5OmC;@C>%I=W_L5SaJ$Ti&l&p5pk,@)!ff?%m#!iV(C/6e6!*?ch;G'Wc<2&U*(e39W1M.ASYCh1&A,R.S<-6LH;:jrAsB\XG1:\1?#_#d'MK!1VHX8\ASH\];.A(8]7TCCf7hS[%T7_BpW1rJ5"HOXre@"OV9lG3R*JpS.oFis:*7\X?rEfuJCoV-qdBltORXVAaToYre]ZaSIZ-VPA&7i2ZFWQ!QNs'?$_#,Y,++<Ke%,S/sqd=(bDY^blS_^;JUfU(Rs%!5h,Hef6dc;#tNm5asV(QtXSI0sVrCY)EH=NRf84QI@U0c,KP0Y"OWXQ/7E;XoHl8*roM?A/D>%Ss)-Wig8cRA;A38P$">_(TX!e8KG9@imCL[[VP-S5_?BdP7I70>"kB`N%[#QcT27Ae?BT*UO&"%r+G-MqdbSmeC)X\B!h=E>R@`r%:\s\t[<TK7,iil-UroCG?HGteMZ%:nka2X3&MsPrYI+I>0LdRF5-"c>\3"$<JNdWLX<0,A!i$hL`HUf->Q-uNi$SXDk,KK9\g=H[%OfXYT)jm$>"s*[q0N/oYMd$B`X9km!+Z.?58]#q7T=A)9R'nNQJf+532FP,jM+_-V&?E#\__B!9FG=Db3`QVcA7*18VCJ,+SWTnA%J_<n:)TDCLl<ZDg5Xg37q*\`$*fqm,H">nc"+'073=J[;!'J6\o6]ut`Kb%6_1nIrTNd)`_)kk.'>oT\f2!HAFYa0n\]sN.[c=c?%pt9'i&68)#CDG/@1N&g/_bMT'jPZl#g5T__Es6$<"&U-/9K\S(*O)?F/(k/\<rhANmMk'5\2H-tRR*g<S&"C)AGHLU/ZYpWNZRD+%N47YO=?L_iUVBGG]UAuO+fAg0Frd7+H#Q48G1i8uLh<!q)PP"7&8a9,%;4`lq^M!,KAb9h$mM)YP.L7>qcB@sC0sjkAus7W3("HV%b`6=B93+DBq&MhTdnV3]N%G1F]\u*5kfeG1#J'>@Z>s`e4Ou\5pj=JDMDXY?[@FlDB^^_u$&49@U'8GIp\uFMHnZj+\`[fWAP6#4%Q0s!C;'TkPT+ZuA?B0$l81PjO'c).+:na\c%VDG:A&0S9&`]Pc/e?sHUK3P1fHr,;fA#7!";FTMn8Qg?4Ym9Opj3Ti^GctdCscr!%bn[%U(4L,Nr8hr-.DP<$c"#G/GtReD+"4o]7li97nof),,]J8N-A$VmZf2h>^GGG"jE3+De*++CdGiS.LfP>%WWe^UN_UR"E[p^t%15W$3mi]3O'lll03?`]0<0,m$jnUeD6)lkif2FglAp\`F>Bdbg3;TX^X0r)20@NJH+^\I]]?uYFU_ZHhd-),KI*H-U)j*XOZ8@lA%kpO_qatV\7ASm9&L'\em6#I/Yp_4m=:r'I3QG(Ct>PP[lJLX$UTnl8G$r?4rUf1$d8I7C!G4`#[qsK8lB\1Q$7C3==Sr[]SAa&I"%FO"2?`seY6XF[Kk.g3q"$+3sVrN6oiLBU_'B%?!h#R6X<<5f@HB(ud$<&LXi&<@DNPGi[^5i9WgFTYGf_Pj69Q<+<#jfpHnK5A=)%!$re.Z4NDB<#k6+4gDYk)")WbpZ2"GZ!ltDq.bIQ-"Hmmm;uoD..@_XRd"e!4ZY!71QS%;.?l]2X%Kh?F<lKEYlNje^_P!?4h/$>%/%i-i*"C(1!=)'6U1[OgQe9j8P%Bt.d87J0$/JOXU@GU:J=C?r^*2_tWl--W.^IF1Xb,`AXGgsRe`)[4D0hJ+/V\o1G=EE<N4)`d%U*+ON#1MZO$gj'_n[LWM+lYKKjRtclD(?57mt=92jDuNbYlUS)<0rdE;*j/1YdeQkX$[479+ohcQlb'q<4u7WO7!mfl6Pr>FV(Y7%+\V>K9EE6l;3d-mj-Zm&!Ul%eaD<q%Nk7#m0U=O\\^jd"jEo:m8+*TVah3YiXo5I+k:qW>Zte/Gm+]I4'LmP_DllL]cIJ_H+hl/^%HO0c[P3P;@PI[.LdD!kgMm5*q3;skC9G%miEt`VFe^#Padbp5%1=nM1IgA>>MfBC45=+EPj9a!i;t_WaQErpaMo=rihblD<n3)$+%%;*c+r9>HRLAQG+3t</;!O6V]GnN#7=s*HMdqXfMmNMj5!>LI!M&2MiLmP%AGuDn^?J?G/'iShd_?U$<i;tH=TaeQ.Zt9`aTPi$?%nK`[JI\ESn$Y;YeVY0r*KHs09RZs2iFf'4id*=oI$*9-5/AAL1K6FK:KNiOG)UJrb:3MS[/26<8C%8u<L7t3JGd&^d?tha*;pd-r%N=IOc3dpNjL+TA@j3]Jpqp6l4LT&/),FPjb&n<7W""+Re'+e/aYf"O-:6$-#bQh@p7TXBYZfI$sUUB/B"iV&S>5#>raoXh#VWLkM%bdt-K9F@@?dWJt?[U:T)9NqjfQ/QpQ0U+`NTQNlNCpe5t/NG[E]B%qti^f`dc]CRHUs(WQ?q%#H>f^M&NmSfeg!@.e`E3lC$X8QW%q[A^LP$,l+Gg\[0M*noIWc"pOPR@6nTaFt7R9Abk-.#['ej5/3f1e`$5hUjM4li+_%bofn5,L?1:k@@s@paAtJYS),TWnMQYj)ho%Xh&a`c.i7\gl7GoP7>;3coR:hAdJ:a"T*aO-7WQN1K=qm6E:?)#Nn:_JZefiCk-T8+gFjD[hH3&?otJEVZS-A6g2#=8+_Pa^foU6%DbS]0JpcY&X&E,boJ5hR>"F[@J5=#&8DZBFJYlXpIbQ_3cW:#fb"/Zf)/d-_mgT1#c:a(BDqcSl%gY$Eqh`&'hE\G-XM[Fg!G!Dc%AaE!0giDo=8Z,QHiA_lF0ii)=mq9R*f-51RmgVU^HY+sf%X9m1h[/Tt12*Dd$p#"))9kIZ%>rqAl2k03"1bu.OFU`f/P"'&Rrod0%-VD+^1f1(dfkFX(_lgE<MpNM$bOj5s!R,W]peYXJd[]+:$'&n+R*,\+`d:.c]u0ri0sI)LkZDMRo?jWTW8u3TF#Y?o[<%YKD9:a0%RTiZoEq$]<.DpUP->K4&d!2"GW]9R&W0n_rD'<Id3gK37EA2Sp%L10/=9<qp1E(+?2IILOh$&Sa]Ys`jdB,TAR7)XV9"Ets`%C%C%`FW5JR;db_2:\O<R#,scK]Bo;cZ__kl\4[dbi2``,]5jV0tVBR)>5E=!J1m2&RR)@7u5]te.*;a73ju_o;42)KchEppIDLXi$'M%%H3"V!Wt"\'0O8MUCUImP-[T)ABOW>c#DEL2d^<25>$DFa5?XsG5)W<LdEGDs_KH=p5c,0P=X^^n>^,t9\T0Y8]0I*..I)*G=">Aj%DqbO^YrP8/L,n0j:trl1\ATf.K&jL==j*Y,CZu/%^CZG^JA7jr%pdB6B&-d1%q;rV=X=hIWB,9D7Hhme):2!e?uTtL8!Djb/sRcr%>uhSgQmS3NF8%B?iUJ-ml_3ULV<,3J-khoV>B9oaMmL4qBo'[u=_Q)I7C:FHg9Q@Lqf!=.(A/I7Pq%[!*Lr9c*102(>M=-g/g)&Z%D:^p20L0h,27"'\BPj]GH'b!$e]fhCs4nPQ\;3ol_4'2r>grcI_D!U@V_NrlaHlcLI]r)\)3[.K?FgT/U&I/t/G\gF(5=mqYF4OY%jW<s?-pk;kR6@S'YZTP_]thbYCM$[t.UHZg]lc8+G>'q(ND$@[3!+uR@Narbh4cW+qRV:o@t:p`aY*NO/fls`%8aJ/PSH?9fDm/X%npZ;8ar0E/-&QU0$Ss:&ro)Q6UVtN[`ap7'@u=eU]'d'65`OE"X:D:a\'8GIZod<UX?^gVKuPheIL]p>E.bXm^^>CNYeFtY.SHVk%(3-KJXfs^-7!H\J`jc//C<>enK&!mY"UDhhRjfjC&Ir<t*I>'Q]aUd1g8m"/hue1W;\6.##TF:]+Wp[YYV+cMRE@ef]FE[m_:bP'%38#V,*UnWn&3/Z2S%C#6PH$s[YZX=)'#DeX?#liP<D1%=X]??HXd7d\fJ@4B'K*1HK*8LtRSNFP$JT',+A\RrP%UFU`oU2b?BZ=7%WlKX*^B3)D=K9Fi2A23U!gO`3re@Q(gEss5@EDBJP0<(>ifE1n6^E3MlZan`fJn:7K9s7+cFu'I`c,qP54F4e?_b3][u<[V![ZMg%4KKNd,+er_[VItfI1T.aH6LMtZ>#_5K=bkjJi5;c"=!706&S:'h6*GNUr9^L.eNqt5kGm6qB4D**.3H>1E6fi:'*oP@<0A`]Ou*m%!6hr_P%j:u.D3Jk@uaUne!N3O.AnHCeZ(ukJ2eC9ZA\6PY;DKt`m&t@#JgG/gVIr;O[MNa_N31(BgYVNE(4riU=dH<5]EYoTCU)j%*`SesBW9=&PiEd84;mi>-KR<6#FDkmA&eAH%'al`g>O)Dn4RN?QuaqEgWfJ!#&CE!7k?]Y[`:pVIo>N;]bS>KNW&-9s.[.p13l-+%:pAB=%5tDU[YX2<+I7J@m%@XjdHPIHoK%Jf=XgAjW`[#0JZB\K@ib%U0%#pY3(='NQNKln'ujc4&k5Q:Qu5'`1j9m?%GeQN168T<%fh3UBa:jQrDik)gPV4V1V?l`:j_bUM7K\KNrW2Dp423$(*sU?mqpn>2F/qp`;?KPH#"aP7QKCIX74!G#TH8JAo\5[XFE3lNl-&jK%47\DD45fS<IBK$6*Fn$DV/E4`7nd)16_Ugr+thf?7Z<#b(Z7,g^k[HZ,qt(fC2'$OS7dm<GH%5lf"*oH)N;.nrL2hJgG0n_r[uVs%2C*+fW"C=2O//c2:^:dJSuYqA#C/:(/7Q*WN6EulY4AEQ*JI[k@7d>$@7@VH+q-7qd"N.\&YI%Yc3JT'HE^"^-X>Oj._AjGBZhpJ%PDZqU#mqe)4IO,Ec4\r%dI[u^"$82Br5AGDO\i@saIp!+P2%=&-kR"RXLTDMNZb7YZEM)2!Ek*h2=iG>AYcSB)k9N&X4Ys?oAeqX%=<`u;o'hUGWYcAsJ.rB6PCc)s92SKV)iVt)nio65\",>D6q'B/q6fkYDK,tO9:TAWlK<GZT!i;FCS3@X`u'M02dt5&2YmNCd`'dR%V%Ri4^dL!B2*77u$l7qSJ:\;d0a+O]$F!Ehqjh>IPo=BOs,5(L!"e%27go#YXY/LCbQGrZ:p>CYiTGM@0iDtV_N3*$PODMaHj.!)%hJm45rBU=blHde'$9XYaQVEg7iMrfp9a]4.;t[5'!X+D3dmbf=#=<>#79JWV'V'1u_#V9W-$e_jO,W-2Y[?+lM6W<r5sHXc`b1SM%6K9u@C`?ID0)XdV84e[CEK$7LFIEc:5d%LMT#bXJ#JW&M=[Z=1X-4p;MSt^)B?Ph&cf'2b5h6JBF-9-*;RFu,Cu"mj\G3kp#A32]%m)c8M^DdlQ67KgS$&`&IHYrd!O9AhUAgWrH#LSI?.q@a_&1ncVJSR>)@B%%X=*b@B^s0.ioK7=nLre=L2>7$jmX_]<Ai:3J]GO]m%XjWEL]HTX0$;>:/bUAPT*GFNU!,=8RH2#Zf5n)f42O:d[%1)l0j2kiT2S&k%)e=[7),oBNb$OYs[]W4GleaCSBm?k]+Dpn^+e&S*%*8bO!\-^`X-R?!n;08Jsm]Kff8U0=UL8kD089DnFH.;HU"=*(#i>%A-SUfU2oeAs&oJfWO\n;1!bB9UAp<ZVoD?mpr:'XE"$dq\[%m-W5@M@gqr(?19C:DqlrJV%<!Ake[6o4V<9e(U;bX?a2E/S"UTndiXk`&)dFPX5Z>+@^)Nh9AQD*m"gD->ijuW:=89?N!P,.4$'6%jG5'!]YG!YTEe[QNr?^[n:BLPW)*feJj%?D3qt3*r0\2R[Vqmf8)l4g(l16u1VUAGV=-5OBuf"RBV:PFmmp127<gF?eOgB'ZSG[q%)e]4hD"gmJ7:fm%V2_4"=Ki'b(QfOe6hc54*"@#9-_HCE@N+WQZsIb;1=KUG)mt7bVN=(_S/bhqF2`a&dkb!6PY>$On=ZfBV:%U[%??V&W,M"=`TSPH^[?Y;5-l,TKLD=HC2dT/'K%(-A#/1[P=7L"4*Yo>Aj?OkI+'TDZf7FhkfdoP3KFu*Pg[.U+AkSBl@#''5r*ZKi%6)9qY=I7%$;+])8iWcl'pANGa#l\!3+r&PcbL`KX3`VTWFeff`'--OR,C9%>i+XsL:!fpGG<m@C2WJGHEH\??f#s=a>7D*:EdO'2%%:(ZtKaW9W&9g0OZ-,!.FJ)Rk&e)]eJ4IF*OUA`IJ]aqeAkr[F(aZc!jMXj4k&W$Yf_Qlg<]8#[.>HfKGL[4?F8Vd6&+C1:K6T:X%/#4jP@Bp_e-Ii/'3SIae-bRh=SMY[eQUhXNJsVmF"f9TVgu<":EqjR@_%I4)mM:/4QN;qION7nR<o(Y>j%*Q7-D/Hrd9c,]8=6#J%5ctr%,oG?eW++o;gu8@2#9tRiOH-H`77o/AemKD;4CGV(3i/Jno204;61FqcR]SoGi7)b#c=ZP,n`U#naOFR2NU8V3s2"i->Y2"Q%,*E5tR6/Kb/Gr%`esO-5j5=l2;bBlR8DM;d3,:?an\M5"7rV<8Xl(<6l7uOH!Jllj[2X@#ZT4-EX@FV"4B4_>6c?ZQ0N2.f8prC<%=UXF+^a>eUeX!91M&<&+*Gcp=&nt7\G]odf8eC+32kr9<`rTrm<fc0HXu3PudK)td,M807391M`S/e^tYkT.6)]]5\M@=I6RY+=X%o*ih$3sb_@gfJ".L7O\Bn>O9O&@.@7V`G2pFlK/o5CU%E7Fcd)RpftCX3q3)X2Nt2BREr;?=/)^\<pFeV-$g^H,m1T^e?A@_'^P<%A#5/N=hL8haF5\[m`(^R:r287Vgs3=&oH=-`<CRIO34PG)C);?mHDPq'ihj1<Dg;CM\k0afk"0YM^$NZ5jAMZ(tC-,>-_oY%+'=#%UZ,hpH0qsW^ojko6dbO>2)MU+GY,=$\n,Ua!R/M7Rc#0>jm;h_R<j%BP*6_rDnr9*,mpuJiC).:0#_Q=2R;1i*=Fs(*8AWo`*jOU%4E3Ab;L)cQ;$7M#"\D$]$gt5OY,^cg*?hk#%dF6jHE5h"2^knLD)NoL(XG:gqITO3_=2>18IfQ>*2!QXd.CqL'^0:I2ot6(ZiiDs%NDt<Yd80LB,Hi1"IEUWjk_)E6U)VHroeLE1j*#bi/=ttFL4Qnm\K#Bs'hT,$7a(1\ef`/,'uYa&W_4_'Xi>5Y*9^,WEi+aMf0btm%c$cm2MtT-fjd@T-hJm:c#)XI^["T*o[s2F*g+jesWe-!=/T!2nKBE>I%2)*:B`)u@&)I]Cn@*T.hL$k^P8iQ+Uuo5u5pqg)hUYU]%Z=fGsgGF46#L[PFW8&6h+n^Q+2I9R#Z5=rFc+dj#`0@N.SaHY<'cHMB`O,$O`XM49TlnH3R/#;S[e/e2c,7^Vm_$LI%$&7pBB=AH%=LW<j9fJq-0HFJ@0:>2HM.Tl%6=f'"[^U/-[01:h.FCIVnd[`5D@p:<-[*:5&Fq^ZQb`*.]WI#B-.#eUGBElqe-TjEG6A,3CWGK?%o9pD)*`^Zuf`R._5m+OB&((jG]5E8KoE2QD'%6;(kI+h"^,*'+_N8'PnR=ZtYuhVmUe%m=gJG8>@2paiO<-l8HB$5;%=pme<c^"2%6#l*b0X]uZ(ZK/7&1a%KV5n@"`*GM/Y>jZ:JR?h1hAE=AUW`"aZ8[8U;nVm"D%+#Q/>(DtI<"m>C:ECL*M'%Q'U_dRAp':nn)/Ac%Zs;C>/>^SgAZ]&Z]R<g1U8V3s)^o%d:m.8-!Z&<mV<*HZ=IUil\.@J)97KY$LH!oDQAM30+!_YR:8"ZDb4Msmlh9\O#jg?L9UKH"%"VoLO96VZWl?/32?t';JNe^)jE=c);<kL5o`B@b8rJ\5m4,Bn,%jV(n"Bu;JY=)LLGjY-6_R^W#Ap,:t&qcI"61B]MS7<C6g[QqE%$b4a;aAsO,R^,?\Blm:Jfq/>&2NZ_V:lg1"4A2_b=!0V(NI8$L4lS0E'oIj8%,/'Rhn7pl:^*tB01f];hHsOTGRuB,Bb/CYBJ)Tm%PQk6lU2FNJrZr'VFE@WD1kD@aX<UVJI74jYeYgRTj*PoHnua;(n\6%>3.!6a-RBM8"4/[Q/F+r^[`,?'%2PBlM:O%Yf>FUi]*aLS%X_Xaj,Y1.>*KIuZIBtlUbT(q:\b[.G9n#'&oCV[Wi'h7HAhD0m+C!*TWZ>X@6h2:SRtYD(MQ!-'K&0Pr)Tg0(ip[7Im?!uNM&i=7%6tW_9Tt[Jk_E-8i^peG+%0Z5o3kLK4A,+m!XT_7\B\Z5`^"!O^^m//lNYkX!QUaSHi<soSRB0"W:"b&^B,<^pLgEVTERRpYRJ@n9%?H8i`E]>*U[H("to)`u%0oV;5p!%UR[S+,"%KH+#e-s)ZFe^8f;<nu*7(.?ER64#H@^Y$f8[/2+DAsF)`s&_Fqc[3f\Y<+_(h58Z%c7@_i4\Hc2^e2,3@toMgCfODB&#E3d/@l?9$e/sPB5oU6[-SP'MO(PX#J/6lQQ/^Ni/'f_W]?toVKrB(_LU<qDe@gg=!=U3q$"$#%eCr?!93u5DWg/huG<AXdc90lN-`\1E>OaGH#=M(XS!oRNp`E3-A"E8W_9kf\FB3HRF509"h2<8dbVhH1@@K^0mDDAL0lUe/Ie]0c%:_Z))r?Y!%Fe/PoZ7F<PCgb\2ffCpk6j`FK`_K>;WPiW;VVUFEH/qT`?<HR1L^j3\-.p+5bI0<K8/E4OcKQ1%.8Uc?JQ*VXUM`Hj%@"RofCNrhq3d\ZJ-ro:N[+4.39JUZ[%u_Bm=9ll_#n5V)lrpMiW?t<V"oViT<>.9rH<Kj"PNhLq'QlDIS>9<0[\NQH/[atSOmI=k%!mND\&/-qm6XRJ"[;GQ.a@oAoaoJs`?(iI*9Oq*:L*\O!]R0&mL<qO^?:Ur?&oRF\?eLAWjhbJVAAoIW&'A8+W(9DbO=L[k8b[o^%pbW[c>OlR1Wt@I_"J(:1nW(NN>9GGfgt.`+>,`S,eD]1RA1,:R\PR'oQD7!HUNE_!Yc&Bm6+3/("R:52^"abgXSu;o+Efk`0+CR4%`LFF*CP92Z7`A#NT/T^Sb:2gpMiR^l5[C^5oV1ROq`KB6--bqAjV`@2f#@u2XB3hZ;=\V?TG1e4Y_oGD1G)@dE8)F1Ocl,1`9*d'%'\Bf)BV\/Y(CTF!iam2c+oDSl;U.:io?odi-m,[K$D@X/AHB+<>4B>)<-q$6Rmg##"7&rMplN)-oVcY8QWfKWE2,r,W8_R_cK=J]%<<u!hN5PbAmO(/JV#Wo@]"T!`N9L8SD;+?1R'79gC_1;k1DmpqWCS4o"bN/mK=K.4LL(I6@#'1_mSbQid$n>P4p"b!m=isUa2M3-%D,_"T>/p_%dB/*Q#>Gr7X=8[?[QTI/e-HsA"pH(]PSkW'Wtq>`"Z:_n&n^,@JC(CCA620.2BWmn6=s28Q[D9fEMM]p7$hCEc>D.'%g&N.<>bi=#^sp%>A63DV&'Fes_ROKZ?SU*3B[OL3L=l>IJU4;I`$>%_GL[YQJ<pf7//2Em![hr5XU\_1+Se2<W%0K!#E%eQTJmq.%)(d[@hLNKa]o:Blq'+,j>!b^IV_0%b`osSH#0l^I#7UV=Se70VdAp.rfRUMmJDRX/`6GQ$0drns"Gc-Z!.(O[n:G@/2k*f1k-Rt-%%n@2:iN"JRe.BX(YhY<bPG.QgYfM\skH&&;(Nu/.eF[f3\fJ"n<B=lnZnE6!:qI;jSsFmR\U,VbX-kH1`a2Y$H<oc*7<565Y>u+$%XJ[HY;/]%/?=-h4[S$1$Hj\W%`99T>F3&-6Kh;A",Pkm?>%:?SJ?B&-mL+m"6BS/]np,#6Wg1:fr/[*kk^dm.`6%CUc7U$AUV'#D%oeOn4PoHmT7^m:-k[)E1Lq54%H,X*HR3fGqoE&[NRm!65@dps%[9`pGf=j>t'!&"\7aqWR7D,dWLOj-tMpj2U#e@B[f<U-$gUVXZ%A!?DnQCg;tOPoF"+h+c::aNb,^#W>028*RI<!SgB'SO\L!5__oO'Rr7;26hDLB<<+0PJAA2kh+.D*,\Y[+QtuR$VkN3!`B/$HG*p%r^UmWV.OkGS**r]T<6";%pB\U#L^C9q@=Nh"W:0GN-,]uL9'Ll^"_kb2_Q-k1qi0+ai4K3ED9T)13fW,!JddfQWmK[d!Xl]c(SsQ%[>)@!O^-qZfor6t2KsXiHd)bcQ!Ook%Ze2>-,Y*&HDJOqhGSMFjDGpW!`tlb*8Ll$M'B9V2fU6loobG7]pX=oL[('[G^j@#eSLYL%:]&*@-ZTnM9tM<mCLgV(e%+#E!(NXe&^gG.W0f-9-Qit2'>k31'7C>*Rf9n:5S2/SjG0WTe;,.1g]u67/?2Y$1!TAGYGPPe+/L@I%$DIRm+lR9dbL&:#3gLS-p7*0\?kQ[C+]aHsQoY3pd]J[m+H)7Fp[AoB8u8Z>B=BlKeXB`iZlPAO9`khQiWDhj5<FdY%1^LcF!S[_%r0CkHSPC,qpf%UPM:ph*#Y\B9&!/cp=:R<8Sf&6<aa0R15elnbAGs(aGR%P-D3C#!rD9kdPqqn_kSVk&X[JVhJ]."#'NSC0aUF9t%a3(a4B]rcL4fDeLcLBb#[Y0:K.n%AhROdXeclUL%P2)'>['8Uq,BIW(jblU8b)DLqrV(?/UD.*[)[*RE:/]e_(6)Y#f>'Ki&>_/^%<+=E.)__g5M+(F1>)HNad\.cqY'!riE0(i)*Jue4ab=gLAJlK66nDTDSjHL`<623E/0]M%?E"%;M8m-5a')kE]\<<@jSG%qE08YV%cN_In"OQ/RLibTBE6sc)l@E_&<21_9]1?lbm/o[%.j]RdES+p_@Zu6%!_<Yp6Ke!D0$VI"GdmER0_)"#_Z?Alqn@:jN78&KCk,,O%F?m_V4[pl8p)EtrQ<>Eb'a,F)Of>ce@+@#r,B8+-%tO`mh((t`n6'9lL:s9D!2:oCJ-=[Tk#"T(0dQGFY^rp50l0ajV-bAe69*3f%R!0#I_BR2JP?^:;n3UcX.sHpT7F3hG$Jjii*\8+_B*B#%F5A?rPNYNr2a9^8bYHK=-^r:I!IDnnE[?J`G_I-E)dSV=E8gH,/9qj:%\s:?d`Os:s/3B#9F(aS#3XCp<o(3Ki\<B,N(rSdA'/WOl9<f7[24<U'61F4mD,!kN@:*.>_*W*nQUeqAA/;!f(e/\%$jfPuOKRin%r1F\6&m7%P3'^/$QE&b#Fs-[u&3VJD"QT.'6WFt1'Kii0YrNSi*k]LlOEXHOfEkkdl>SJO;k-ms3MQ8iCQMtS'cmV$s56p7i)Vi`%'!mq,CsO8Sj68"&P$R[0;!:(pRTLXoE\fZrIs'6Jd<[=:cOB)uo<$k`=21t#gji4t4K>M[ZO@k%q8)`flM7)T0p?beTPh<@PF.H>%&]@rLac7_;UkZV"J!q0>:7Aia-tulb#lB`\EIoIO(j@0G<>R`[/gRkuI5N,EEOE>O4)anUk"I(>`2F^1QOhMQD27<UL;qbm33\g2%&"p:$;k+,q=#T'&VKZJPL>7SHK`[q`jql:":>ql^ZWRA=3Ne?%9&ea:G^srC;X/.H`3m#f$KDe84+o.@2B!C#EaKjtm>b\"'_1H'%l#<nmZic!;[ceJ3E,4lWh=X$T.5BP"'$.(I7Plfh#t4N$"ugPOl>c+p6a&b.0tP`j`2Xd'Mjn%'Uueih>9so&TV\+96&!YsLQF-6%PfLIaWBQt]R4j$DhlGA__o#/6#*N$[dIP@dCd!98G_VJSAd=:!_VqLqDSE&,k1/_T-uR[^/<8"n0o6I*3'FA1s7#`j]9Y#$ES(r[%GIW,*OG;(]j`dU#Mer9GNA`''TM33V"JSK1o\bZ.H3clVmi?14XK:i\eRM-;@ka9sf@7oJQ'IWF4sFITP&4&B/%7\k>PRN=->4th%K]7#.1hNk84'a_H0ISrC[]RP]^\pjIM-W.uD_k;ojdDmjf4r*6GCg&tF3K/b4&r_0R$u)4hci8QH,[dJ--&jm4BE<[AHNEHMS*A@%'T?"q\kBhACAQ?iP[h\?4LMYCP.;5bT\4K9XJVn8<FX+bH,qOl1Z.l5;N$&8jd6RF=sAup4J]d#0b>N(LCXu$ZNt_tA!QXnSVo<i%c?eE1CJ+].\F"%PTBi&m88u%4364B0BLur&(kB3QD.AOW/klGPc_;R`7_ndY#C16'=.GB*"l/Gp!G4$D-!6LuWDklLd@1Y9,4htL%5$4b)iRgP87_2Ea%d+RtAH5pCO'<Kt)@Tr1)Zpd9A%PL0g[)4Sb#e2U15Rg+'"unVYoJmb>7sPs;Y[S_@$@Ba>9\rB*ci>f4A>26%db&(E(]7ha;ZXmRB"'U^-k@bWJC'DCnj+eLegB)q^UA"P-Il=!m,9gT:G?"2*aHJA5n'rp!I?FjfD_b`h\UEdCR9(!d7a?@"q+IY%H*'\*;)=(eEZFSQ?-H]=IHuWa>gB7sX-%Ldn\52)3l7mpG$U7)\^[[kY$e3G'jOt:9J(0``!k!UUGCD@X9=OLcb=9;f%LjU$.^\4%d))-Xme'cBq"?/0]DR$`1K??!6^_G"AFJ(1.1u!Nr2-Y'@3Jo9o]>F794hL-Tc4n8"kbEk\S[OV:_ei#2;\H]L"oLI/;ilGYRemU%qoW^Sr?r8`$cDk^NTn3$JD8tf%C?l6Z6UtSHAgBnP*7MLpUb<8.5h4mmbgb%YnDD/7C,]nb80=XKk[h.($O3XX+n5,>.:3o$p#jS%=<+1&Za=WB4ICaqDSD)p!Ge+3jLXj/\S2A<X!qt;YW?9QLJPn>@]BZ5*iS.nf+%EV5:NR"V$9t;KY$,_m3s,";$VR,V*TG65FSOX%ZrEn![^H8u6>L3/k,7-&I0*Fp);FQe\@.L3FbAfr>X:e57INOMYg?gM`&1d]Pd4>qg,Z2,UQ':O3Jk9]fMfj8a<q&mR>oQoa?I=,%YDR(9jF&ZL(]?qs%eue^:Pi'.[JRh*>AS3@)6[)+^]7]7r+Jf%<7S]%)7@,9d0C8nc(SOs_G]>Y.tb;]7*p:k_]\^u3dYI>0-)P!%L,hb9EHbWS5mUPA79mr13J,1EnFLj!6f5,C/%R_7HE/aUg(m+Q(4>,cL%H9P[2b$Z?@netY7dKm7M[(-P>;ZFCE0N'+7sk0-Yu6b%0"p<PE'(o=1aSLj*Spi"Qu6[-J?=R$.XB+lJl[VA]6^:>!D:"+@-^hU2^#=DWLR[ZFl@3ea([:0H1&GnEdhN$]#Ss]:2451Ggk?H%!#jeX4U[)"K?]8*7&He1^3*$Gn^#lS_2ZS[D]DO@l?A5UMDRU@JU+r2[@rUt2lEVcS_pI+COdD_G"GX,iJ/Xrb=UJC.Tmc!.t'gk%)RM1QLAD0-OqcbMLG.<u'3o#d,H*>0pDX>Kfk&e0d'tRb/YSKW,E#Q`HqV?ZNZ8@1g\Q#%40^%0#7BXIalQ6;)!\YgW+=FAXtkUj%hQ'.m,eGYqD8kWVQFE>1S?Q5001U+K[1@(e,mZKCo2l2)YI]A"&o&-N[O-QB&-;(FW's5GGL@&9W_(Dd^#(b<[Y4[AXde#Yq;.Db%IogY1i]a:p#;FLN/c_B7$QGc?K`9e((Q97eVqTt$93/him'P:C05k0d`#P6s,.d@,!a[Xk-l8dZ`Ml[?i=[$mrE-ZHE(@UL'<s.K%;s)F;(MqodlLcoW&<;'8Qeb/i?+]uXV@`nu99l!OL0Sdp)lWVNN</&/hu&`hTMUPKK&>4QIF9Z8Y&tCpW`)*JqGflN_UD?Di9:=u%RC@u%=JUMCF:EMDeA?P/I<lJB+^uR0PbT15JW;MIA)0PH.lEaR\%Y6#n@#]m4k[e9gR@0k5PI&'K1bB!6,<Nnqrm!3j8c?P>b"i/%gZfr/Deh/iUO$n+9'!=OgsqWoAie+gcLgXp;kUn/Z.g\P`Lne.</=O3WOD7n1Hn&34<V"a0)aGR'$:peI\25jNb\(#%*,Pq,jh8i%gP)M,</'V:"dsRdei\YikHXhL8gJL)cRQ"!Oiu+2jUP]u"gnL^`4V?X)-a:pOS3K629CRTDS4(oV[s:8i=:ZG]OpB5Yq;Fi(3fd&%C=dnlo-MHo<3]/0n28.q2-7&5kr:;&!/geF/\QZ8qP<d&ZG(Jh(#VSZlRTeLNNb#1_;1afh!C_p8\s[$_$H7G]0]@U#2#L@hX9]F%goh9>ea["X@?UV1$hZXrX'QDMS6<kTI1d2u9`+Qf][BC(3c6,EHNQ`6UW4aM;d[g/VE9P(WRSIm"+8NJc_PjY(ZkHh#=pp0pbmpt%T9?.YV5R+k7bpW65Ct=)9t/>hqKa2NUQ9*?h>BA4l0+2j*sUCS_\V9%8BNYA,'d,^=6]o=,XbP7*8ecglU6($o"M0C3nXg]o*5@N%ZG`i7j9sLOjG3,>"Z#7rEVUb$:E7V@$jZ`&ZT>!B='\XCXNtR`Z7>ssB1XT(dQ1a]A*YRj0NQglo2?ON/-_S'k&ggBC\QP6)L<$m%CPuGf#O")a#5*Fj^B;_N_IoTRpn_2I3J,suQZLbRP?o;hJKZrjJ8,>K];8=8_5K_@X`aA#hSC;I[1r/jmFKoD"2:RWA\BDdUFpR9%aXdm4)c[JSE3C@%Xa#/_Y,f"?(.u7oK3/gnA6*BhERV5E13/6UL./[)6Fe.0OY+W._mmkJM3tX>Q_lDY-+osQH+R/-rIK#\X!*^D%@=6.5%L%ZG`9arW6n^!,+FsJrK*)W'!;>VRJp9cHYe"%5r@kPs6D6k,`JYt59Q&7K6fZ_2Rl<+#>p9W,0fln2<-N@W)9Ucd\#j=N%:j+q.)*UO#!Ni"Li'7B[0bunueZ?([G4YYE[%,uBrhN]Fj<]%cD0NkM]p,YHR\,o--C][(.H=`X3HtlO@NDGsI!R]!KL15I-\]P=%_"ZW4kDAapM"+SGqlf0K^;`fGf!sL!nU;pEKUE+[IYADN#nIKEa_:S&mp.hUeGt^m85U1ShF:AZo7oF&(@Pdg(+UG&Y9YlJP]+Ut%8'*2J.Q2G-\j>%hm1@-,rg(60M71,fdMr/akBG5Ek5F:ZP]JG(a!_R!=ffi[H%n"BZdRYpYi#=Z8^RbP?]-u4WADou*GDDPT.B;1%4,EQ`C/;B&$N<Z(<m]r^o<7=C^;g&3$;Y^aO^<k5J6Su[@NJP98;0_S^pEVt>jU$s/'9<k<M9:oiTkBpXd33i(o&b.r^r0W(k!08%'lG=$,/$.VT",q4f$(Ca*oJ0jai(Lh+smZl/!+;dR>6)HG/5b7r4[$.?ji+Ue$JuTdmV'PAB.o'.fIk^L+>Z"_\d>"c,=ZQ=lcK^%'EN#9J'@gOhJYZ'Q>Y#bZ%Vf\j]Lb3IHB"+$d'02ZC\PrTCVFMc3Ep<Yu>PW,ZG?3rI]F'4#81=X@B_OPXsG%"MW^[VDLlC]QbVq%S0'&1b,rtuY'-Jjb?RFY#H<M**mf]raY$,j^'+62rR\d%D<uo)WjSH`rOp5MAED)J;oeU;HO[_!X5>Eno?WHFq4q.1_<cDH2p-'_%d3fE<ambRi@402X!WFtq_T/XGF1_P$E%WlUd=!Gmg!Q-#9eu6M@b^G0EkN41hZrrq,bN5&9D9[W(bUY`E!ILnQjb!2<q6Q35<FQ7%8*51^O0(8T/ZoJ(p[q(WV>!7'oG%q4((//HRds$SjGW.G1egIC6MS)7!CIU^2d`k,=[h+3M@V*lj506k%l-X'l;snPIF:f[@r'*N%:=1&j`m%C'J<>g#9H(]r&([SKK>LL0&QSBB8A0s.\q"XSi7Xl^AbA+Y=.7[YTW2C3,H-`4=`LWE5t'J'O=uta>,4&()nU*6nPX"f%fgU'@j,C`#Jg,-TMV5t<b![MdOek3Z1Rhm)(6*4^.:osOr)#h+GW(h6EkNdR-30R)mmIVifqJr$mRB@/k957J?cm0%/8'+FQ2L2k%IPHeOWoAkKrOMb<Pt3OPVE1AqkO(1N(7dt<9c\*Uf$qo9,L=/Z@`Rjbm\/tDP8FQHJ/q\ZMThG)G4R+ZKpk_hU7<HI_'7mubhhej%"/lqG[WhbC?L*E&HS3VDFQ;3nXBCo+]peM4(;B&IA"6Mg^D,fB7h!@%B(0\TGE5Nn'>>auE93AFE:Bsr]H8@rC7\An55`-Tcad"&%cc$!ZY;/oHq@u&&Y3>CVI%eq)bKGF<2X\/N.4un_Bk2#>'#`\8HZBn*eGB5O<II:YG%7REXp1qpV=rGWS%R>NC:ClHmq+GDp8lY3%'uh0FW#@]h$XSiW`iW^Wg9$pI<*!%XS7i@m!&o&dj"(XBQtPJ&WAfJ2U:6S[:9=EUit)d;E7O1C6$4G3f'"C8=ccoX&H[-t.SL]'%?!V?e]3%KG!dT]GX:h"(]2;7&&W])e,N`nk&gu<FaZEdArhR8[,3l=YlQir^J6!epX:JLfj//eN;iM:H9",k[NDemh8^tqhMXf!@%X_V.)<]$*_Ir1+4/-oQ1!NAP\F,?NK#E.XT5*6VOM5)<8>_:O1K)O+f6<Lk-^.U6LUW&`rNN7cJho)$7UYFQ`HlP('UA\HI+`E/0%<6RC@qbN4N^KUKdX4X5(]u#iU!'Rj$_sgSDB%+FBj+XguD0&k\e7MV_3T&p5m992U'7@_f9t0"@+3+>r]g=:]M^s.%rbMsnOHF_A%:-%goisREf^Gq4RM876[l'BudjtfkQkEPIcZU@m[ibdo7f_^W'M`->nUKoK1826rKT%a'A"eSeZDG.u07h`o+.%MQ#o7"IFql8_I%EN6Yk`-;jhj<[W60B3E.6?&6ge,B).Q9lthEp)k)=9Ntu^TT;1_q_n$[@Iq1R*f`8Wk[LdKFV/m8a#h&[MQS6/r_D,03BD6`K]!<%/.2DDq5]@P6'&c5gBYGZK2l[^ZesbiFY\4Aq>K-/&-KCI2"$9IpqHL]3?jU5]e9<W49cmR6'W^!<FW<6P^09T3/B#1)+hCoUF-US%0FhNMmKG-3;n5?r%\lKW:"4sm44rH`[8cqSZ5m^/]jQVd:/L6Fi3XdW"O7&bn`k,<FJ0fh;W*5ZY/%,aVT>+J!dRhm!6I@U7(Ypj%HhHT+#F3mU`hbfmN:cl`[sG$lK\#S.>Jncm6Vs4VDF.\<=bn[h24ChP.BW'_rXpuU(knGNY$LY].Z6"_A!NP)A/Zr]8PBhf2,>a:%bh73DlG5R;:V2p=@Ff-6=U_q5<b+pbF0TLR1mP8qA,'V'*ADJ!Ql_k=e_79RZGHjVr62-%'_;>fIa1n:F5sr*Z8?R*:8cg\)gq9.%a!KaI0;tr6KWAB-2%q7N8WVCEH-_g3L\J4RqlY3ka&`/tlWHP2O\TCnKocreOM=i'7r*ZJ>`j!H/J,"]c\aZN<-qW9D[fQS0]VNO%o)AH%Qput3g,c!Yb1m\2)`6KRbX9H&O!WQu?&H=,ib;Zri!?O$73T^q/6TiFUN3mS6bHd?h89!5=DPZ)'DtnLp-qP.A']1.<9-*r%f2pgJ(F0nP+5!5^Rb928Ft#@f1ecn7gcH>\o]/dfkSA)7jTE"PS5$m@]ONh/DNU7Z!LA2Y`5_R^]WFXaWYnh&C&S-\3BroQfa)2;%[L#O@:R[P#C8&OQgArbj)\m?4A<6`-0H+5(?AfD1TJ4#?R2^2ILeKD>N$V_.75sBKp04JH:12\B:R]7`:l`_X4jmb^-G#=mG8SNM%.sW(X5;T8hGd$a^ge<403[j(TdkGZ?pf&]<@7I]n;BPerc[CZIfTWC@+QF)m^uT:d3#,)2!9h0sQ/._Ks83;_^Wq=:4='&?]?,FU%IT,-i[QQfVSX!Z!^>X:=&56rM%[QQNb9op0V6A\pY*EpEOilNRCPt:A<XUEJV2SYqKt-DaK+6,42>FF"WS@.4n`T!FYsS?a5GeNn%5%td`@79p4AT'nM`_M*q@fPelXlf^0.EfV%/8hQ:/>l3<#-QsQ0f*])UK'XbGsot:%)@JBLr.Gh]0(?D,oSAf]aDbiXr7r\"FZ9N%@c>I&d`NdqqQ1_`^`EM7N("V.an@s6)6""Okl-?o@:DApg+B8HrDQ9*Bg_V[l6B4pM#$P!T8[*LS%aAe!'S,>AdMg'Qcfe'o_159%`K?oh\3)1eU4)jY`Qcn.6`Pi:mc@8]:"Q2g8jkDA>b9D/&e7MtlIp1Sm07ZF,DH2^6\n\9^e&A_7JqTPk7G<mM1^LnXj3Oj3:Ube%!L4*[^XBb6?OF/tHUnc'9C*_uIUdB<]E*h4IfB8S2JlZ?gD.\h)ti=)+`A%#[Lg_hnQQt0,q\<qFLMm/TVq[bR4-2l!c2J5;Pj4%%]\e85r"b!Ml9+6*R3R4Hi$:*.#@3`62EsK5gT*77rk\]7!HgUeg9&TKjhnjhJRhJj3)Rp&>R(SERn$VL5'6B2!+]RRRSi6T,I[,!%Y't=KNs)sCFB#^VATfgANM51iA2H6*J6i"&^KkX9>`K^X8<uV(h8-RKCYt2S>>kX26?OA+Y38XGOiPYTQ'<[$jgTt.c&p0LcLWR2%2r+H^Gfd$M[<N?Uh?2)/O_2lpnIND4eM$7?5Pt%Zs8%4lpnrW7(]Vt^&-(\Ys6_Q?l(A"Es7>.Im2u>sp]'l42u_prs2TWerHIBg%qlAWSrbk%$rpP='J,[XalX0S\c`d@R^SY?kqp/XLkL[KHc`_in^L!f;kL]Rrs75LUrdS1frnYcofDk9*O"ltM&a*M6^QpCmI):9)%C&.'og#fKqR2bk*b7XQZ5p"7Z6%3a]pMYM#QAip#<VrE?mKpsQrq1L/6WQ![peu'qT/9ckd*3@Nm?\FWq:B(1j+XXLDDVL*)i*#g%c"n:F5(N>)jT(i9AuSl/V1l"-fcVU1KthQV;mWpf.PL0;,FYlFK0MO"?MqS7&-)JZrojsn_`rVI_a"-uhuE(.rT@Pf]9hd.%%oG'%s79Utp&FlDJ,74Cs2SLHlnAD00>;l3kKeYPTDn>h\Fe*srGQ$ZrqEVrg0GO!](=SdpOCUrC76us25YBXfj)_VN46p>f&Y:3a(Vt#%q0P'g#J']411L!#,?=5\JD')>[07#`h$EMtkm@?2Z]d$1@,Z%1GHU.Oh/9bKliq(/C85-OLT_St9s5LC,P]0QlZUT\2=j[Pdj&A&%^E2k%:\sKRh9oA4Hl(B5Q7pA?4ZB+Fi3ra>J\O0nf6D;=a8,FehWLgroC4.,Hi4_)ZMqp&le8n8^+0l/Gaq=:p?J+=U(oChmPCJC%BUO>LXT(LYUUch*mJAM.fD9od7IaM(04@=#")8lM9Z)CHQp.RekC*<<r<kh/VB)bKf?hcT=s&:*J^`'ArpSOl9`$DJR%Xu6Pa`m#%?KU=CZt=3dqR'^EB)_Tm63,$lfd7WJ/L5BRCa!qu/76C01Y?.e:T1YcSkA^HkK@,j'u55H[R2EM;TA?+kKIg[^*MM?mYecF<4jBH%R8&.NDlX<&<ojR<Dg1tn+[PPdQG9Sh1W;@k9*\7h#ltLErVYAH32nKFA$e>Y.sZDdr[mir3rl_5Zt7a0Hrd8j?^Ot\cc1G-;m0RW%]?QbUIdE^?A&`N5IHkfOCWE=>iJMj0LECm3CZeLgc!bA[h2gmEr9/[0SD8a(\*D;%]Og]X#Z7hX*WM+)M\Dn%'/-ctA$FX9r4Gj[%X8KWmi&X39jgB/N<59F-BSoStI)Y!.`WVU,),#nZ+-*-=p!B#g9/jZ>`P%;+!A6P%9WQ)3RG/_1"ob_@p]<B,hU^e"=hfSh[1\!r%+2!5*r)8-NBT&=,]l17U-[h3P`VR7oO)N9Z\0O#&_RLI6,UD/)lHc*I5&QttSQPdE7](7Gj:'pDGCrio/X2he^sW\Q(3_X"Ak`2@%$,mIE)rF'*mLRt!((H?urq/5SJ&2X7'rQt"gEthtG^h<pcDO=Apa.mB(Qc$Gr5d$I-VAbT3[E8#V0/osi[[0eTgOk9okc+0/"gHg%:`g.>4l>g6Mq>*K^f$7J=pIXq)/I@mcKXJNRP9F746e,0m/G]p!r:"#];cZMOb%R;0sC7E/">k4oOB?!BK7oaXYbA5n-[5)Af8Y=%(S"YGf6n&'`W;%L`<jl%K3+G\=(@C[*+6_-AKfOk[VHOkftZ*3c"8bT3`XjD5g3bEF7f@\I+,8UL74/`(6,Gurq#$N=4>_)2O,4c%lQ!\jH=e.Bl;?<Dhnba"+T%Gcp5Rb)ksiR1F1piibLS\45@ntSNlfoOSak\5>Kg)6h,I1X`Xf->Gn#G9llqO=/LCA"$M/Z`'=-[X%`q>MnPk=.mCO9)7%(&W,cnKPKjQb1nqf$LaH*'F3rM@94ASKLg\-ArlW:8u]I'NaZWgnU(q/*F.StD!JhFqPThp'_Mgl/*5il9,p%e\'iG4lSM4J2MA]ND!cF$Qgm_8C[#=`rMXEc6F-mY,lT]FrqWl::?alehG$X26Di]5NDldTlXUeA2gqi5Lj'p.0kD$M^CORoq"]n%/OVDGTag^1EiEAW]5`<QUO8GKXS=N7m/K5P?)W_RFaJ]?l5*Udo?3=71`"FiJ,HS5:lKg+q5?*Pm>OPT>=a73EOMpgh<&k-/M)@&%@1"1eEtTCh94&+YlaL4B00P<jq"'8F4[.BU"DD8LHXs_h89M&gDV)I>]04[50WV/VRPg(uaW;[i3FMmcoEGeDlhFfDf"b)5b7ACS%Dglt:LW:/,Ydsj`T)=i683r%`/c![LV@/AogmFRT]R#uCC\%'*7,_Q=#$(6DBcPBMQjWKJUp6SLM%'I(7(U,^Ht&;qp5Sri,S#dV%>t$PQ^Hrk>)FbL5Zt70ZgL>pE5\7\g1V=dX4-<b<EBm[C#+4<X_jP=+):>Vg"Fd`Bf=oN<2bqsphq:Yl7*fKu-rSaY0<Cl:rOE-7%r`XTe=]sPZG"urn41cXYg>n=HY3>`!9YuT"L`be)(j@WSo0(m3>mq5+'ure'@q/V0U\Om:&7^c^IZ__l,t,+&U7bW=I:3/HD_J>]%E8"Y4M=8RL+&hQeed=@VRU>r4S+0U*JNS1CB+=57)B3DC%G2n7[Btb_VQ7F?Ymgrmp],#IdjQfRZ7BBr!##)B9Sg@7W$'VHkT.-"%_ULn*R]ChTl!!:7"^G-U'Ooi_j#<PbR??Sr'h9XWOnm3<7h5rnM*I:%4s_kZ:5>`ZIF,o7%7%Cu)jlRM#LqNBDZKWrKf<cfJp>M)%4FD"R`$abDFI_6d/aT"!>_i.a%K56i&Q/lU65n@#nB._`0&2N_qoN[gU-]p'FuGLB@q%LBqUX![..Ob"h5QjAV"r&n_q7IV2TOjW%&!%1Z[_0McLEYS;fr1e?j2P09YB35bK!ZN&A7j<WGGEU#5aS[n84nXWTG3$&OS4gf=gU%rWKYp\qEG9nQVp=&.rG31F%h(i6\-2a%^U=DXdYRi:KMhPK$'_S\ZPFMb8=EY7E\R4>+8X295[B9Q[H9O[f<MX_PXfseR$.Op[=l9mnp'Q>W"4)k]\DIf*Ts(W;p4(.P5!L4%:Mts<?S1:KpIa#b>MK5dADrG!V&*M!o7SiiTHp?\;Y;]^b`t[R$E/oZWXJ3A=9_Z%:ctTA"-B9jk1)FV$h)q;VFk9sH;HbTdf=F!%C[?GJ47J]61'u\uNC=pa\W(.eiY3WCG4g.aCC0<^>%;:_JDe?rD7A"7)R@u8eQYG'Vkc_Ia,B$H--&KX_Cae@"k0*fpJ.@28@0\]%?nkrCLu#"ogrig^^0*I4KbC#U`6.!8ac\PB4-It2Nf%DF&AGc$/#)FRiaRa*)0-")KYC+5j>_($XCocgWk;3sTND58qTN_S\?5*)%dU.!r&Y\jNIm$!2[m/-ur!@/oo=qBH:&N'*L%&gY(UM@n^G@g)\$iGK[K_"2hZim>Dt)Z^i\u[25??A/IbHcngRtV=.J'dL]!q7L%4#..u<F'">>)4+l[`OJN3.KZ+?6:l--!j<^!N2=>N5dTbqfS'!3?a.[_Z+:&+7kqM.7.tEX/@l[G+4hcgLTIls7>[*'f5RgVT^_.%>k,R)W_XH=Y*lIVZgXhV!."X(l/q,`,iD`W="Ls<q^62N/#s5L;&PXMp.iej%VC'UOoo`2`hI*4n$M$i,'h1E"O(H:dsHL-Y6\Og%Z^RcIZ<sUQ)St(=Ko[+@.d(D5:hTqb2/>\Qb[HIBC7b$D)>h]a&+gF#rW5,\r6/i*hTKTYDTr9"7=]\_l!Y!B"L(&eFcW^X'`>,#%EB.4LN7D\F"6sEOIXn]N8K:RW6.BCF7[Cr6XDFTSl(V$mHj0AkNGJ5#"*j4aY4[ElTQ^\D7j$8;RP9&VdI)njd9btpEL2aPZ.a0=%pPpB_;OS+t>)t[">*CZM@/MT4a,aB,Qfc<)q+#?Db7DC%GsWUgH=Y`h/Is&]W+BhBE8%08iF+7:lbI<aU-6?^F4C11%_`hF2q]k#%&][QCXi\h@fc?;hI&=mg0\3tODk:D2<+pkr`mWl8O]WK+)pH+7=<LmX.r`&"%V*a!"+rWu[>LWe[>("EQ*Pk?q"q&u5]EdsZHWSI%[c@jF2cn`V-e]X;12Mr,3Z&`MR*dZRp^/G^@+GGj^0.L,B"3DSHt,F\XsY,N0#Ql/lZIOUE"%/1E;p&:lh(kV@SGSPK(Vo$Z2!`f%;ku)t$\?3bl;[e1I7B&nDV30sdbieP2R>:4nP@H)))LED1QBE(p[)!Q-C>6cCZa[q:`-m?D$,"_K<KVrhet-N;eZ7'X12a0!QO1a%m)fY4WPskP$3hEaG',U]MVGa4VOTL+V._+"@rDNoO1rH5Q$KJhW:o&pZYt(m[J<TA(L1^f`/>^H7jkJP5F/g>Dn!+s?#*Mr^LWD`%-esZBe)m\_D8e[eg?b'VSu\^gc#Z-Eng32<2_sFcV,^*\Fedn#Cr+^]@QQIf\sp;RL/?l7L#7HP285\9h>oq\h#JSZ<?Iq_:@'Ce%98'<[RPYokd3dTh<JQ](fC3PE[IDs[3c%:5"@dTumH[Yu`(n%IEH,YBW7ejS>?fp0!njiZD=d</<MsgSS_k6AOuU"!dlM$HjN-XN%Zjnqu3;S%fa1*0T^e$5*<aYJ]B$`0?2gRZ75;#mTf?5/J_t<N%]35%E$?EAZRD:-'*m)h818Z6G4I6;i0\U1,7]sW`r=G&dna\kS%p0bl;O)0._#&kCcN2nl8<+XF8#rfsFJ$PA$hnj0*nnp<><?Y3*)g[L?LK!EYc;>>G\Zofg(b!De+TB*s!IERg5/l4r@;a)pX%q<m%lNHd3;[d'u/!p]oWj5.u>PBn</\#><S/FsnJ4Df-1>QZ.FkJ3"VEg18$EV;OU\1D/1/*-r%V*R3XuOIPfY)J)[;^N[UrQ9Ig\F=J%Pj.2D[+r\-c*`n#N!qXKcW%Y7'DLPC%]dUW<hs?gAqJe&1mZm,kF2/U8r4XZ^GZ!J'B<1rc$e.:\Dhk&nNTMhno>h%pWN*Equ#R?%,<^M$:S7W+RlG:6&"Cn_7WmA3*k&iD<dEJ"chm0NX$1Fd%gTo!@<">/*fco&e*;1Z4WT*oj77H!4rhG["8h%j5IpkcQf5ckG]6'2%:<U7roABsaC5;`$_WVZP.WddoA"PfNNPj^E7.B)Y%'QgRRIPp7`;hO]C(&>W&8#_cMCZkFp.[G8Rb4?1PIFQ*V!tbi*d?o0T)Pto%5F`ID;rus@H8r#:kM!fkGWIL=-gT51r,?*ecLqK-i92s:]o.LjEo',iDrPuUS6jt509:&H\/$.:c#J^`=6%3@4g+@2n)5FKGRlg+%Js1sTjq./)_kY7Kl4e@]_m<8eG7=>.iSd-PGmlcq!U<T7HOP7^!V.t44pKla&H*cBIgGu`8V2_N_D1k*b#1>K1lf\=A")JG;X$T%%>5!Y16+"=[WeMCH(ZA^B)N4)=Y5"*SSa>L]<A\3sQM3:YUL)s60JAgVZ5:4`.rUb,Y<82s\/fI/N%0eZdf.oJ'P#$U:VDg<&K1YE%[WSt#j#/cG5PMq]aa7Sm:[BZ=C>!5AFSUsj]!<p.5[:pE3P%Iq5$S!r;=Mns%kAG,?(=a&\"D@q]_+\aFQX:V*QI=e!*54`XTjGA%0BOa4;t^6Xf*:Wr2>ip]CoQ^&aRmF+8</H`@o^q@FftQ/qD,Ft=YF7kj+u$&<5O2o1n^o\&8?+=QpWZ<*7ZjEKCt;W]gATme!?8&%+$CU.*dc#mKLs"YeF!<-5LF/IY7E>T:YVo,!"-N*g!T)3r"-mK2dlN\D<KPSHfkJb&!')nO%Tb-qT?`OaWrc>&7TefHn@l*\9V34%E$3?\&q>d@^G-%UFsD0Ts8D6XB)\)J!E7:F)O-B7m#d_Aq/&k*I?2Y*3,uT1N\B*Bq$XR*[\m>bD^kYc!^>:aiGuiJT]<W8i$@XD%rSFI^i8^N#hY*#43&nJl5/X37\O0.-O(!J@@e/?=#Aae2c/?"<n%tG4Jn%8mYK*2YcUeW)ILpbk4QB*Zd;7_SqpEYT\c4f`,DDJq%JtX&6KC2Jqcbn9q02KnW0p%(l>YT8&*Nq.j(eXC_*!H[ZMk:@#/^3d\3b<hJ7dg"t^>5`/UYR[d;#I<([R22Z`oV:b+2GfHbrD`l%RV`kf@E.s8*"jBA-0L_:$6>T:`#:-BeH6hmK,W1Fl1?:0b>d^AO(nVPk%/kQN,tkdU+)ais1Rm5T\Clrm/"69(cO,O]8$$>;ePLi%?fL"2D?/R&E!i]XUb<o#l4r^IbW[,!Kj8SaVYl,*";GbsAkuel'U?TWKk]-K_DjrcK(0%]R&_YiY!YYR(?8HWD@EZZGMC*sl7N1s%O"e*Z(que)7E33m5SulY3qFeTRV?&K=P<u>$q@;!L]Yb0b1>$OBIB@<Z0MEo&t8$)Kh=NF0pG#TR;k#2$mN5(<<G(V@;s'^l3O6O%Y5KX+Mm+LFKp:c.kC8nj5&=!Ii3c$LkEo;u,+^9,Ng^'f@EQ@]@'WE#2=("UVDS7lpiC77rqgXR#B,O"Om0/Vr-e*F9K&j?b1_J0%d%[PmpU*/AT7''HHFs8W`Y8GaT6kFmn$"b?c\_5q%!QB7^EA&8%tMY8f@BOm6TF#GrOq)CJZm$`a!8jJ-#C0[F:n<"jlTstT:1IC%&)>)k*'foT[SaW3^aUbgC2?@M7`W*-0pi3s*H!LSMShIu^s]X"MH,:P-md8Se*@*Xmukj1i2cekcfu"u1HYI95q]qGG(YDie(M*>%1*\dkqg/*X&p<;*qo7DN1dKlh9*`Db*k,Gc*kIsH0H(&B#Iq]0L3]s2o)4Y8(m4CKb!ZD_.Yb4&XPZ;foucF4F)bg9HB%R_c.Km-%\X9.FGtuOU_qQO9"kf%o'\ZOd$u9k?JBm%@Cb`4LX`M@ekL:-:_/RpL2_p(rig'-B@9*pa!__?V>f:7GQJrlC(1HUe[*m2eY#Pam%AU]@p9@/VL'om#9N]t7;3,VWRmcDo'hFu#*%YF&/2B7XIbba>>k/r)8#f;_uLLP?Q%Z^4[lM@JFpGO"hl%dRpd9W@QA$h3ALncC/%>k',Q6Cu$,C^#\2/]4'Xq]ZEBZ$''a[Em<.p#3(oaO#r0Dr\7inl'kT2CglGe-6bV2q0[j\RI6>-$<8Zc6OKd>Bb6(Y1tYO-n]@M%f,C$pNL^=[*;C$!*_!gA8iOWJLr4Qc5:,.,4H&$tmkLTo*b"(Y8+j+5c"&MeVD!=6VSPO$Ku$WUE"aoeT@G!645qb%.`L9H;JCU(%+Z`5A=@tc)(jpaXSmnr80T7L`hh^iSIb/c63o,/A><q&uU^J^r+-on-q#BH`fT0la#iZe!lsmJUN&?IJZo]u)fo7Y7P&haflQd2%%B/ZujfV%&7IuPrj#n(13^Q@Gr`YZE,IdIE]#RI$:fLQeqa!L5sfE9cA2PWF:##HY/F:9"geV8)re($RBF-sN'CXfnJ05E"+'1a!"%e'\as"^YM>4;l[8d&p@qZ+AEN7V1B5>Db*h(f$if`DR^o^]Di%=i\8.S="5YB7gH]qVNQF;);V@13_G$#(XL-._!F!X&1[?kAB(j%cNb;OIddonpS6EZZQKh9NL@26lJ[L/J8VRurNaI!e!iPj%Pg7F=1@=jOXdVYa>@!rD@FMo@Z+e#@.@dTAM!7^ZZma5<`\(SAL]?B%kX=L"U3nrS:@^(5(Ikbl[Uc0E(aPE\\5PZib0<#>f.C^9r>up8Q0=+WjT*k_/e!Gopr]<=^t]VLMDG=o:lHY,!/sS(aeVkWMP&$b%fjoOK5=g?,%taC<.NuoF6;G<+G3"1rU:F4%!m)W5K6t7u;8"b@cS%$/Yb=O<PhX3V0s=-6`.$JWF"O6oW=r^bTbIol8&GJ[Q,.KZ%AJFS<i/WXD2E5AdB:QGI)2p$YN8HZD,t1+Bg_>9XW>FP'Z?YV;bMi=$OtG'_/GCcF,<$9BB:fL6<;m4FW$dYZ_40?*Vk[;A,*(T<%5%8#9mQS.CN%I\8bkV&TM$&lG/6Q,?8/Df:H_8C$>_6jda"nH+8]02TPZd"Hkfk,D1[Zopf>'LLcb@d)a@Y#bipNpUI,[q=SI]49%WQm*LQhQeYNC21r>WJjD=e=m$/(0HC4HiK@a\V`S7XT)iHnFSPYj^qfC3Le<%=4%S@tBt:e$TtW*l0Eu_aT$?`O3_M^_KlA9a9h!%=C[Wsi#]i0MaVmU**$`Reo7s9;!.5jR'hS%r6jj.8GioN7:Ap_<-[@,e56%WKG)@G"2eoCo:@1@_oqiS>9Yk`J-cocme[!Tm!:I7%WXmCX;_RSIX+AtF7p]$#:ladtd5r)>gAZb`lCd9W(T$Ch'%[j8gS"^EX:u)Yl"VAXd86<nHqK3&!4giFcdGhR%\-=.>JA3NRdp&3%['\itP0,+R021T:TOZ7eY!)7^X:Ad-<:g2D(Us)oSfTGA?/EA-j9t!IB"#];>*ll\bi';q:#Xq73J-B*iem?4m%cl*,9iInJF\mk%\[C`LG_Z8,Ya4R%Z&Mr:'u1C+p8tK%j!:bE4)_ZLM0iG'D&LKi6h=n":r4/;&\7,c\@Of>g?!bfpt^PD.ff)Rq*G[?#narHEI\S`%VJS&?g>j^#.j02FmW9n_s,(c&X'^s9VA(Mohhs9=LTHe$[+T!=#KTd1Xc[?"H@`P*_T`40!DQer*?pUB`[JSr5uY^f[60)=M`G\m%Kn:bF#$.V=[P2(Z]XFK1V];Z-<iYh<ieJ5@Ek=4YIj*D=bIEHEIR57-E[>;T>1nE)qBV@RL<6/-Fc3h0:t#r@I8e;]=>\uK4TNt=%jcXA6!sP%1rOS[.a>W^ee83CDSHJmm0A_ur<,Yp^.lV/O*E)3".\$<\.Gd80:L@"g+M6=6$?gr'Eo[7:I*'?Z?$Xt\/qWV.8P*j#%Rl^r/;[Tu+11P%34p5F89h,#3H)AoW;T.))B6f.@bAIgP];iXXdkpt;g=3Kp/r2Hn3P;02+nr0p:_Dp./BUu=7;7:QC)LQ"44]t3%BTMS.!-1`j1<Q`@S7US:H<8[!7>;FSHDm*jLJ]subLk'GhO[kT&Bdmo&TRFYNC-_QVq>.(9WATK$,;]A0XL#gB#_u2bXu)HUlq4t%CI]^KPf(Qe&L?;3D/8I.,jSg\kGf5DJNW99mImc%CdW.<VLUU7c#;.*'K@AJ8keoRELVN[hC,n1aP,DM840I3(o]`^H>n8U_i)Z1%B&4Q<Nht0`'08:blf,[Fn2:@V@1mr?OoVi?iN7?(\rL._Ng['-.Q8/;eYgDeQm;!fP/%WZeG'r.fsG"Jf*qWHYOEWs?k4SMkQiY+%P`iuf=:M.Nb=Q#'>>\M9SG2_c,rKHO2]^A3,lDC@VAW<sIR'Q=*,ob/YRu?;'qPb'nOWiLNTBB#HlN")-i5+I`bZfC[K-WtQK3$P%1nAUIF09i`bV.kI0=I/>-.'%(5]:5`T*2eo"]N6Wg6-.rC9>R79,nC?d6[\q+sE/t'@9?aSB6,BWk!uoAr>To[=8R,Q7Ip.\NnMZ%FW!iNk<U7Z\@^:5kqupU0`)(A3eE]]='bdn0;V._*:dtoORC-ILOh>4BaS_Zf8:J%$^bYodpDR`>S5n"]:a.4Y7/Om$,bn]U9t+f%2gl2!r`S!G+B4YuU'bd0AN+sJ'Lq2SPN8Z=7P?J"k5P,UaBRlY#`Z-k=XWZqfmGSf?27bL^Sa_:LG&ZK5W$OK$(t.epfKOQWTuWj%UMdM0KQ[MKCR*!2nDj3CEqmXfHL65(bEX_!l#.)*+6m]3'm^_`.<0*VhR!EsSsK@*N9.A?#3d>^+>GLb-NKf#-jocP0?fiS%-If(%O%HK?=-.=;3\M3^#Z$o,kgIM+<$eCJm4YV9UoLt7RKBN#&NIo\aSqJ`#+'QI_.RPbJH2*s)=U<:2Z\K2"H;Rnl7m_q=;iU2c(Dah%fEUnoDW:?s'>;/#9C^Y64)SVO*F&74c*m#ep:<rO1<6MKLhZ6%2Kpq1%=.!43;f)cbm_L[RI^XpQM_Vf=a.^,p)2KY!B9k03@u%^%p*U:taUB^-VFB*3n+#R*7W9ZrCQ9*`&Tr1;?mn`/2Pb+X,W9sr`WgMth8O,DhgTSCe0^jp)//j0bW-6md@Bj1T9:H)YZfg<7Ltpk%]Y5n&/D%Zg_C#bh"M\mU(T)gfr*FHU#%&sC,8dbb5;?@]Q?B/BDA2I1FF4We[me7U"4iUh@uK.a?j(diFIbmOn@<9J<]21-JGh/U%Vbju*UnC=([tp;"TFH0c@9/1]mSim8A:fFZdJ7F&1E:r#$5.e-YZ\Xljj+X2AKW<__F?/GoPcXSkDh>D5mJ)N5pIQiq#ECD[0l;W%q/CRm%`6T^NNc!]hETXcSE1m<NtI.=)ZdJk6$*-lQCmMf&7(Ae#+sJT^CLPp;^#O>g<ZG<SiR]>dJ<i3!&.*5D^<C1H-eW2Zk"U^%;(5_2S,Sp5okqI]17=/C)Jc[n\c7lMe:_g:EaE/!`&M,@T>;r.n0KD?N:=T!&]3miiJ>&_N$P19aO:hgpT&tPMr:gWXK<q_e8j?6%*ui02Rro%`JT!pk>iQR\8i--j@:X['`Z*R&qpW2,2q08Z)TMH/#hT1]38fJZdN=Er,T^r[&$S'm!6a[!&./tOV4aB)e)k;/hiSLq%j:8oq>g<`ca^oR0;T.k+WQ9P:bZDG>7cKctJ1WkT*$X'oTE@.pirDB6hI1maRR"[P67k*/Elq9u_I()G$&1le*l>Ei_!Y#,J<@3s%hW1;u;-k(h%C>WAlG[Oo2kfsQ\\eHPH]cJT(ZgP1$VR:N3Up"uWSlaRT<n<#2Yj&MNRIKJ%;:lo6jPom'!tqhq13I#n>>4;)!Q4E%8XSWk'[bVk6/]48?Y4/S=mLX,*[C*F2`iRI/AQ]e1<Pee2j3!)f4$[[q]8;*#V&.l^bCR2-Am8m!]Y^nn0:q/gS-O:AKZ`8@-8M%%_:0Uc*p5jq_XirqlXoe'*$9t]Obk[b4aR7-+,U8lR/5k.am9`S,(>838@W.g;#<k:>qkh,4`"?dF9r2!(HJiH4F$e+Dt"\bJY/Y5%ZqA\tbi>q*5mR$DTRFhf/8?.#S5>G"5`e:`]h#N_)9#m:'Te;J0s72aLtdgbRCj<ec:Zi4@B+<9g''r=Ykk\h=CS*a>>L/teNQ6!%"r*+EmgZ>H6?t\XgqTZG\Fl=-,le#YU/Q[MA3&Yg#p;EV(sLM(KXrtOk34n3@T@@6l:)4ZFI3u>d?,Tk[JogmbXnt=MBK'MH-9Fp%_oll6@*+8SWcXL$Y=Y(<=>GF6CYTX2'c8`/EJB+FH3[(s6qj9j3XnuZ)Q1Qkj:;d0]Yq.VWu<JmhuU0%M"oo1U:hQ,Ot9i[CuP7n%VmsS_?m3=g]`d&WY&*JKPjhX28:K-@^/D1_!GuS*3uBK56ORXIb<A2a*e6ESk7F#.5&CY)GVRA31E]eCbI$j8^980To%BdUg]7e]%89&l`H#]6&S\k<^g=#GeHJA438_Y.-?W02>D@%WWJ7&g7T7`T*J+ID&C.<VBpL6@9C\cO><+N;C#/1@h'Pjlb?ei/BG*)[nK"Z<H%@qQO7^4mRQ/WE/(F$/'a@8W`6flR=[85PN#oG'1#['mtKa^=&sF8261Jcm&'?dYH2ADIDYAbDq`hVG[\##,'Q$(4ss;p\!gb@h7Q%!"i0HmTS(,d;M^:12jFp3]Ej-GRn>>R&WhW\?^k3CStacD*]7Z&I;9Z(Xk+<T'T0Xo2tU=6q(`&a&Cq$[^'@`*Xp[@e]!DE;k_NZ%G&OsHgktsRlP?>?m=V(E-1](T`O3=X@%\ICRBE\.9T6NJE;%D,af:hR?5hMV]SIYg$-9+PY-$*dW=mjIg5H@!V_RA[riK#b>1%6m%^I3p]EDn:!As=0-4*ttTLq^Sc%Hf6Gpm/I/i+3p.j:^ql-DLE*,K#I71p#'6Ye.JtKD;+^+*[FYFJ6`+^6=i.j7SI+2bM.l)F4ek%#Nd[C1p#f'Ni5XY7IDJ<71eTl9mL_#2bhE!d@6g<C+Y&!F)%g9kFn>A27qAt9=o)Qg*q'/(kCl.KMt\726l)=42SeHX)VX60\c%D%JuV((6Eb&lQ'MDWl`PoUR3jnc#lDe6g)/\02;0cEeT`sTs*J`9L!3]od+8MqM?Z8;`f:foE@Qq`8?'7g4UR3JF/nQ8?)j34cj9>V%KrnW0D+No4ZYJL)U$/IhC<KC?GhAd>@tUU^0*%ShObtpjLEf/;jmB,lF<ba"#56EZc_Br[-Zo*+M,NJXq9EdMUZ_`g^&tq9pX/`\%0GGT]3R=!gBr_q$O#:/d'9U-jeqh"uAU:8GM6S8r\7F[bB\as\JN?0#'QfJ;p.dru5l\&X0.cPY:nR!T"`1<Z<9SNaVl<2Xb_:%:%)RTeN4CB*ajKCN!"Qo,=drS/nYE2MNNjNr(a,"WgS.8?Lfl%JI?]B>,@hF;;nJ!^cn^rP1nnm6;Wl[tfI)P-kRV&oaWh*kkc@"Y$%=>MJ$rE9Ou@<>J%$&FL<P1?L+Eh!(*Ko'+l'/<I?1GGS+&s^Rc1BqM">)d>?1;2YP%j5`C\H+XJV0lJ#g2N>$Aca2J4<U*"OFa<[%\BU9AV0fR<0s6CL](SBN#?Sq+O99=IH!u?&_['F?MABWPIR7(Fl<<W$BW[dPV008m/6Xs88pt,f_hp]spP(nG%M0WjH2oOC87I@c%$iXJWEY;.q#^&gZ(R4?<,Cs^5AHBO]!-=%0I>`/"!W;#h._U9'XUMlM]MZSsRW2.i\.W`F4%PGEJAQ@!31R;ea=\6PiEE2c!aM?h%cR?;oFg<Tuq+L@(TVCC*dj=\.Bt>(#f/Dt45WmBhXr4T)#j='4l;"Y[0K'A/@Fe.:FIN3jjL*1=?@aA49a/cO#\&GE7?r3?U.ITu%H63FJ6/VilS1I%(3l<^6.c240q11Upr%])O8/ml"W<\'QYZ^[Z_1Y825!W+>A@:&VC]KNQ6^SV.FifcQ;O\3D`?S[=7BAZmk/gJI%!0EX1@@6T=fMgcanQXh1/>tFf#?$2ZM9LCr0:C9u"*C(NIZb=j$`p$k'tY-)8[%b/qGf^!n6r>rX;5Y#HBU*8>QL1D!E(pt*Ok5>%n$lsNOF=I%]%"@]&pV4HPnsOp[.G-MFJ=iEGD?KT6[Dhtib.e[P)*:cI]"KY(;1%*05tdS>)36cU!DiNB*<]e'NJ\jRb""!f?o6d%>$LkDJnRnG=Eg>qbRT-1d",m/),]o>r.f97IPa-f[Sjnu8b@-ZQ=T;^O7*28/^ep56]c,7RI4!@>S*pscHa$*MSK[\b)+6_mS*d?%2/P+dEL$g(PXd#/rE1?%0KnUZ"'"/H4K.:H%^=cF:fEG%Jcn#N49S.aF+?TYa:+'?[G,+lUCp#MTa2)`n]'4C\=K*-g![o3'GReN%4\'B5\0P@]A;_3`^i\A3mlf/`8)C8hY;T4V/L6NC?<f8nU*b-jaBB/VN3JAGG.ss;,HG(69Cb:@AooVI91[L78*QHk[^:7BFbp*W%X:^]u&@jWOTYbjk,:Wt8nIC[6^F&QqiY/"h0U0&m"Pk5m@F")Joi\UT8*'__B?[6o9V1[0I;?"?Fp9`O=Y$d6GXNaVQZ)Z3.gl5C%QItUi=7SO(^?@_&k2$6LW;7c+mMl1,6mC-#-SL`'GRG;*1E0'<[iRR4Qj!Q?2TH9;IkUTV0(neZ\eqE)r3o'C"KdX$LhAd)JU2Mc%krf[UNo[r":%1\&4OOb$7)]C/j,j=eUe3ht.ZY:f,?aV3lo^FrcZIP>C?^k8H6fRUP$8GbfHXu$O^<C1iZ:Y&%g:bp1@TiQr'2u#%dZI>DjTgt?R1OeB:-[+,O-JuUH2C;-5*Ee/o^N0dq2q!B5[Zg>h+tua,DH,RDL\JE5EPZ$K`@f,^d1BH;/Y;?9lLe$3!p]H`=\+c%$BL>XB6f5qOMarfi@#9-+=6P#4)pL`GSd]2&AC,^A/s\f*i1e*1*&kNNsG39UJT$aUr\2da?cie-u/;qJ8u>sH.Q#@&77F)[@ALJ%*op['68:trR0W8MUJT34dcNjpjsZL9'\.I?i->n"3JdMOjaW:g5t=eG7ff?:=OBFakY_?C.$aEWWq7FLF;AXQLcR]?596SpNhTD^%!`V[pWhZZGK*9b&0'apeocV+o'^RkQH_"``Nfmg`ENuh[fho'A-uS`$KQ\&(4/o8D#dGC<gJ7$O57rK/LrLIsjW:5]Nj<dtJ\+E,%]VBH&6"9:KNpf9Fmi_2q+:*5?%QoUW4pVcB`=%_^LM'2sUO;'(B^nBQnNjt\..qhLKm\uD4D@M2ALWZQQ7&fX#?f9GK]Z-Jo0Jc8%XPruPp%]^<H;kG=8rZ$UP!2F(*lUm8_PegkeYCd^K.uUg`:YPQqB-5oP*%m7c9@*6*eeEkP.(tm\48"(UZh,u5]6u4bnZ5qH4gSA%&je=gXdPIH$=IHR"-grb6L6_<GKKgWNt[iQ$%;\s<PRQ@nH44"PNF+?j%'N&+HRSA-3m/cRD&/VF?*9/:?7ffc/qR<3KeTH7%Y\M%k^bqi5W*lN,X'M@:/n,I.I'U"3g6\+[&aK>f9,KD,_eIDaGtq['/T$,`:cH@4&Y+!1qFpnmRYWM+S$ODIj]Et:Pa[BUr-hki]EFq%OnO#F805m;4$SW<m6q4e-+[7m.*;<R#<bsTO!N11+8&014d'%l$*d"km"&dG5fl1;G>C?Y#>4IfIJ?&aINTpY$-Yo>o8+00UedV>%ednSC1Oo9moKJGTNs,"uebjuaI\a1iamNeJr/j>G5dioInfK:X8$`.l(uQedE0;/bO=#480fTF[S@&rh1(#DBKa2=HUQ!)fnDQYQ%i^$,p+?As7:[o]AE>6)G$Y16r1lej\-\[SUR)`(tj$=mM,U[UH*dJAI3=;2pV,&.C;N?ni8+DiLTpDIPb>J9#5q;"F.ruDtGnd;>%#hp=FE$"+]%`19q!^&[ZlT#:K]Lr5fb68o^KoR?F%t[5?EMK9;dXu'Cl5t=0b([\l[(:1qm'Yet8$JX]i#KYF0jl?^e3`Nl;XL/6%$^GYqEDV(X#I@FE!4f]gY@TYc8(jgGM5d6eePWjA-usH2_`A-;4c!npjg^?!>n8\t7mXA3FP'H$lmPAIQ7dNI3BISBS]&tuL";9I%Ca]%eUX\$q'^i%EpE2>;'W$-fYWI`u*G+a^,kMReHUhMY#8+_Gi87BMn3KP56#uHC:3[I.4D>iX`=^E_MWdT!n%S_^p"`8lY>tM"%V"pnTk^T.tF*WU?(F14qbBhom7"t31=F&9%I*f]Wd`ahSCEA^"O/ea@IEr-Md%bLB;.9)oNV&lKHIOp&P!_A^V]IZqO(taDg")q0%lU_?TW#>K.0)MG4q^,Kn<4@9P_EEh>*n5<SP^(NK]dIgWUCQcj1\dn$r1HH*<%U<!)a?n;T2h)9qT9$pk+chc=lK0R%Jo2JE!Jr;%qct7<9TO@[n3<Zu1.d:Fo_0Y,%%ZH8=C<gheD/(_]]_2R5fA^$l!7gR38)5A.hU^CL%n]E!Nqg+*o@L%q(bF&M/5$dLSFZ:2,;V_%;&_rt_FM[_@+sg:?t$<nS@nNhet?XPP)+]AbbX*M.54?AUKO)ND<p#cHu1_LI4e*jKWBAp@,R_MUIADa)cWS,ECl.Nn&c-f^CE^>%FM,nd2:<P]A`YMI>-nYkBeYi`%U^PG6u2]>[h3bE%YYE1Ddjc`Qs,J7C"Y"'1RPk!iPHg4f-X3.S#Dc1&)O@X8\,"pUWEJs\2LWt%<%fpMGF*Ep;N2AP/f;9J=B@l+Joem>T<#o,BsXZcAA_Jr*'A6G)H[J0`7dbg!2Cm)*!;Ru`co.!-Rb>eZ$Z*`8g/iCGqBBM.DuRI%olDI-X*QPQY1:DUjkaE&@!oK8M6C$b$m1"AGH$G0To=DL"ddgTFc]p4M1!9m(q!"D6ouQ66(BQ:U*FBk;9jR;:f.ai&rA,9,9!J;%(l"-91I</o$4Xp+5n_rD;:t.[M@CtQQa0Vanh2`:JMX+VeH:dlU=sBP=8U$u&D3mmYfQ(kTM[7+7.$o[;/AHR#NIc=K&+=`C_W]:%_S_o6pZ-)m6PVh]E](M_fDT@=Q5?@@o6#F.N8<<J(.@akDsXJ>#<rQKh"4ct0:2chR\n0d6:#ITqI!n9c_g20!(>a%?@f:RCU8HZ%QRphgNBnGgn>#FpGkqVX2_-S(%5\B/FmcJuiQl0<d!-Gm:?&.<p8M'&^X6q3&HHno&<-"feDs^@YE(-oOMlX(e5D.5n:G^H\LkcW%89s9ra5W#*)2YO67$K,d,FtG9W!@PuBiHQI+dk_5(#0Q;)>4=^hZU]i=&>VL0F2guYgh8sPA_t%)_cUrX78#!Qa4@MGdoK1`"+'q%+(/^Kml"6m.A.R;UZPCHYYq2.>^8fd0li6Ep@-XZf8[<NWdTTLQ/r97_5;AJiQ/3)<E^+t**4!-e(r5N[mb9F(e`<&&:)jnKH+?"%5r:Ke=4Xdt3WdVrc+2tZkmu)]&*`,NHh0=^qI/MX!`h+2T":"30K*f92r-X?Fh:"OYA5O>^>GWoGK?G($=V^X4()s6ac+ZH)cQH3%;^2='Cd39=hmt#Lr;-1M^K<sU+FA1]-<AEO7,25a<P13a(=gB=i)ip7Z_YWUL=-@bD;14f0N7DhS9Yl//n'UWf"=Oq(\WIRP0`\f%aU.]I$\As8F)d#=I4Z35@(Zg);T?O@hqW^n<h(igZ=[/L>D<5J<-#RQ6,>9!i%D(6X&eZ*.5&ON-0]A>XqoJL^#cgEM%[Z*bS`]R%,\l%f0T!AJd/_$+JmM&D8BD]ROg)Z$7r$snAmde(W.dIN]%4ZY&4rS0?i+\9Is*ld0.]Hd0,2@4X@*r<p&TYu+@<9_ZcpF>>H5<`%Tu+BO@K@4tWdD%gLC1L))T&uo!Cc+:flJ.Q<KK2W6H:[m#d\UXX291IY2to*n6Ec*lcY`jS->LMUL5[fTN#Z-YlQHYV0a+0c#s2+%CuH=&r-/4a<.UB+X@?.>'C^Ru:V6"rfUrFCB=+HR:$8F(^D.dn7*h6cf8KKrlKSDc[se+:omT8<9nTIp@0SBPOnWm9$GK+6TBD2-%L!"]THV&\Y[52:0Vsej8:\XeXO:>iT3XsIFacB*,kH]G)-25103!f'_\`@2KlR;Q9D[uBh.NNP]amf$DcJSbnV;9#$XXmSKBF_@i%MK,g&UVZ/o8L6KHfKpmb<7SPk4VDI-9([GEK_C*sBL]a6s8*FjQ6]kJrDmioeX%r]pBgb;b!2gJ=\+c4Yh(8I'!8aPFde%r'6AsE%?l55O+AB+[&I/T.[qF*6RS2nQial==aDdK#OlE*CfRt(Y(ti3=*J%X&eOaCgKH-XW/.rMcpn1hi:2k&(Mtu_&#\1"R7OA6`'B]I>%eW!TT94?=eV,4GP.;U]Z6B2NX'N(<.^052#>q19UD,L,qVW%YuX&:rg]$Q[499:/7$N_POO9VN(HP18d32.:M'u)$-=+.?(,Xb8T%jVW:c+GUBK[<4utUd4)IMmWg2!PAh(=;30N)kQrI\/p(UnZHmb>FKi6_1TLA,q9@_+NEBL&.Dt.C<>d'/ELf*otGMpJXhZ$d'YY_%!OY4OmD96'apbOD&WDjWK`RBkrIUF]O&_YVC_X.S!W<'.ddscF3n6NG:JYCfFU9J9l6qNiU_JDBA^%R):'\Si*(9j6Tl`>X0PD`8%;+:gI^p<lI5J&S=(hV<![(..,GUeX)G[1sBji1uR;ITVt-kp.Hc.7!CrFY-A:qj\q>,D3g(:2gsQ;2reWScUl@:SVB3?!b5[da2`%\'SHOqk^_t+a^c`:fMM2,eSk\L"B3/DM/j5Di2h6+M^;*paItkq^s._E&+Ejh,1Y![$YriPai\h/C\i'H<:VGf+uD7^rVE0g/(YF%^JarJCeY5RkDi,R1Z@]tQG&bc(cY4KBr7AaYY@+J24S9I>alHSA&*nWC;D);b-Q:V8:Bk4dFt@W]Sa<mDNsGEm?<p2;c5`+D+>0.%H*p5Ao*QVI(r/RC-U=QXRaRQkL<9];QffVbN;(#$Uen3B+TsrkJ3>S9;[qB&EpT[ZQif)ekN[o9'if#d$#RPl'HX!\LkBVO_"GCB%8uR$MMjjJBn(OZeJ^gH\l;;`t+OBm,jEco84\EV`<Fd0SB91KJ7iC'VjR#eapH_@E6$2iLchejHH]\1h$3[!/KMSnk7tKYI1#oV.%nOXhu.&D<U>s8TP5DV<a#X9CWU488gec9_^Eh(6@mZQ^F.5Ln,!?H?_Ts+_f;YHPCAT"[)e3bd8>\'(f7[a#mQf1h9E[i+C`o=:*%c&6]AoB#O<5s+Zm?/M[Kr0=s-jE&RN(V^Y7@5SCt0uh#@^YF(#mBtr[8Uj$fXZ9bLATY*`GL3b8"5UX?'sb+\)G8Ok9K`HT'X:4_%4tX\Z*iAE\cYManmE:-2Kpi\l\';>f>->g?jc7?97IjtFNb`^L@92+Cg,(?/fB"\m_M]@FFrN:=h*ZPPrp?*CU61^B1V,(nXpn[@%+*76E49E92goV560or&B/29lgG&XYBPb[_+T(if!^ul45%`6:=_74`LP??h&Ydq0R[?_<`_@>m3I0F-Fr@P[s.a'GE2+>=#s/ACc%Z5jh6jdAUU>@J%5aOR=\dVV"!`KLARgS1]Ykp@-(BB6t&&n/hVfeL26OGZ,sm>_LeF"ZsL2LJ%LSoTtB9AlDbUu9eH84Ri>6M<8?%fef[fCBNd'NZ[WuTW`1icpII/O6T%bhj"oBRk;iuX"oG.NJYP"9jLFCdrt,U?&9B`40S=$EKnca`CW^:G8W&(5pDkUe+4O1d&m`j%QI2iJM7483"qUON6fR[(i-\4Q&fGDt:%\(`_UH/?-@,Uo%\JS(p_1CgX5eWV4<;1n"*fX.c(1WUO:X]0_"6K4hN5-QD0+kW;7ZfM%h]58s+IYVuh#P('(5WK(,Kq>79X1@=pc+$V3'=&mrr&bJpAU7%*i;22k,/U3e,%mlkDBA"gQ3.$CaJ03"(C=i"H(tb[q6%ge`H.)%1U<t_.SkI-rg5n)*)^p-7B+#j?u]\IOtf\R%/1M%==$P-YQmVE8pPkTolX3["1[,L3Oi&d*0Gtsd$7o&)=p`pG4+rK)Y=r7&:g,I%FKYm0Vl0\-mZm>_)bM346W9817opd`E-rO+J&dW?&RL[BKWM;JW7)2!,<BDPr65k&M`Y;I*j7Y+V=>_DEH+hHYRa/X`Z&kBI1OJl%?(&r-ef".7!tbEGVps7,JAMV";PSYELJO>tf,O]0QY:R@#CoP<NGIXU&0?KgRgB>r_^MXCf-5?doXJIi0uGKD-:M*=$$BN25Zmro%[@4(elioBT(<I3VCS^h_<FZl?4P`QH/KfY,`qlF;]6%m@dhK$;7#J=onp7T%\_M?BVqp7N'=`id.EVr,VVupa&nWq;5!022_A$i:%=QuR-i*IkK#,>gW0^=lU!3S_N+(H<*'#5!hL=''d,Z.X./a>q^1C;Bgo>BZo=iJU9Rj^a'jUG<(;ucr6rXB3iISd1Ke$<$H:sL<A%"q?6;9,3Du21e(3nhlL2C'F=Ijj9:ZOb=5FC5P*:3Af&VR!6Z^4$F>K37n8s$O:o.?EG#Q;aE6ZWp&r>d;@+G_ncf/FfidpimL^m%'4>Ec>Z"t6/R#QY)apFok_YT`f-5;W7Zt%\CeMMGgGf--,0",r+fNK%r>3c[)ot7HZt%5`R*f:jKf;omm?;)sg^!qNJ`Ndf+(.Za%a-&C\bl^&FH<gl5Y$D*g%YFHrB7l%Fo_].6rBWQ\JsX.?r)B+?^KVHL7R]'sK07<J!@Bb:/!P"21C=^'W9@_Z"o$LBmUlOn"OF:i%KE/Y9fBRr"S%;B];ikopL'&?Ee8b2qrKnCGCR%P(5:&X%NF!>_3`k!Yi5qHPK+nXj.o/rEPbW:>!`iWel8+f?:tTZD-V3qnO26&"%%d^RoX^Fb\%bE%F)MH2Ke@6$Oen`>iWO%g#;t!r,[=lCkhj)Kb1]2LS+$G5]0B228*.=$W+*7("cJHs$-hZD?*W<;L?gc2)4*l[;%'E!K?pf#R(:K-bG$MUX@$$\\\s%'9eY[fqIH!4P;L%r)i^MqRq(C\2jO;K"2X8;7?C,#V[6FY)3$2T!XiS[G<&Sk]'oU9PZXnamd%rVb4Cr8mH)5(<!>S&6%Z%Xph=&Wjoa"?jTVEGa_GqS`InYJn_FSn+?&5u6r*i'6[kE-T[JAqZ,Epm>otku6K4B5\2MDc9V)(h^te%eE-t*1/6DrP%^T?9cok=^i$&27ubq[bjqK0**Q/RnRDQC^kkPF0/>[kHhIKgc&:-hfL,G.DZNm4J^``W\@j>Y]lqccGLmT6U3_L%%3W*A]"ef?``%*NY4GR.jO;lHI)!4:B<cV^U:N1rI-YU@/`:/G(&7bNnoN$f\BCf"^BG_&#M"`!K80t(O6#Q0Q"s0)oo;l91mh9Yl%9>#fj*%hiH)DrQ/hF1<!IG\%6Q@L'uWYB=/N7Pu.>6.:h7\k`&eoDlMNaRPG@)E!HnGno#J6!XT(^Ijrs6"KNU7a^H5t(5m1UZ>X%,F[mQY&"DSi5AI0E="mG'>Y[RJG)7/r%[%TMJ#Uk2p_5u0&paoQj'*93^[Lo>fD`$K`A;6E%E42d;8X;h"gm0dBPaD@##3aB:J@0%S,Rk0s2G(q#_^*k2CCq]:#mH7&6h@29DG5BeAS]2,8>c@_-@^6;*=oWAGIGtkNS'kT>j*eh!ZW5Rp5k`o;]rkKj8Lrcc7+!+QM>D%m+KOL!'*%RnE,mNGYMNWmpLe;<'mM*[1?(;nEF/>*_'4k`4I6=(SJb_DJd)E^t%L(`6Do_Bm'#i*s.@U(uuO8]EL4^dgT)8Gp4"r%qD?OfEi%au>Dkj!VZ-P@qUt[f4:+f]B&j>Yk=M8!)QoHC`dE"MWm,$;Hh>+(Pb.f#Xuk:']@pWPqZQgO26lmClgpI8*,rrnn,Xj1%%OaG+%j,5;66<?!"rJ7D\nj'H&7bs:dJ(2b6npK_3#JtMJ[`qQ,mOJnCJ]=jAWrso^]TjL;ZU(JkPj4]o\LtlPNH@NksP40LJHA1%?*3#]?U+2*Id3t^m(iSHXo$Juqq)#KZ![9Rmk'!'6N5K;r6X-pe,oTB>PbV2qQU;&6bi>)Dtd`XpkOn"PC:TDn\PU";4[%Se$31/%ZegqI!*(/$OdiZ(>@<GQT%<R*H*Q!\"Xeqf7HN[6Ch^OMJ77eUNZU'>oqpNr!Y7GojMp/f'dq*B3SS]F>)BU8Gp[ieN`L*3(D3c0%56##VfqS%3`=V=B`<%;YEJ/YCI2=Cfl5[29;T4/W4^+s@7ld9Kk:RogjS>D"0'CT[r<rZ%d+&$Hrr(1nrnYD?o?TX8p/Z-M:@c_V%:rDLr>o:-A%#CnM&:t\sPuo,=ia?aJP@9(dDU7gn1R.H\\NI_b-SWbdjh1`V^L%j8:rrueC8DdDr6f5r#Nbc$6gj_R`d-amUNJgn%M8hl0ES<tcR'/5UG++W><XRnE&Im'*l6Grt!7H<!F<BMALWJd58io@rr<"uIa]\a<9ZAmhERJ3Jd[V5%)T_4(BB#aXU!ob^l;9b<%E^/@,d=h'oU14c`VoHrB1SMJQG.<8]F4IRJ7;.$Ol>E[gDRC2gUon!@1t:q+HU(l_%COsCO2l68mk]3?Q^1_te49D3fpI3eR0ZAf%UQ%j%Xf0je@2DF4q,;lH/UXREAHVGUFm\Bekh\7GfuGlam0HlWiS2.(;TKo@m4+V?^-7"oBT1Nl0I<*AAnE:a*.'5qJRpG"pAI11%Vi\SQp=YWRE$RPVDi0;m%msFjVJ*V^\:]bWc"NfYLWl^78nNsNn6tZJAW+VhF*O]q0!!E4#&^:(5B+'B!Q)'R@[)%\JC@GW&E^SE%G5Oq<gq+k_dkCq5#rPQ9al'JVP%SllX>9$XI!hYe]AbVkgrp.cfQ$&eF8G)Z7p].J]7V;uJM&tK+.hE_R"hrA;f$:3:R\-1P%28G%F&8'U-cUpUDG)oHhc/UumRr[PH/1;KP5)IqL:\oI8fn&p@EFBT"(Z]a?-3WSQuOoe%=*0hK3?:Tipp7pY"%h2j(;/Z(e-P%PGi<h%2^$mBXWb:1:j<k@X&Mt'/M=%[S>="ZXE0-m(W6i,[AV%PVb428M@]^")M>rM\g;6^g[GVQ&J%CAZW`4\X4dpN6_6$V4<:N*c/^f5%(EU9-*,B>AT2[b'R65/H%!C/3c$HCsjHABBEbEs_o<-S:mJG7;)0;j:-M:1QF8L<nejX']7;hZFrh3HgmDUc:.U)PEPVM8[V(%XD%ga.f$L]i"6_pi,*!djR#\9;fY0r'g'UlM,f.D,moH(Na:#boMVSB:ba$g8?2OTH_43]$'^^o'OQGkp3q,qPaS'V@G#/2&d)lOLH)%iA3ZFlO^kpjE5Ban>U-!^WVY3HI3)D7&[q[p*'e9l:B_5&FV^\kZbKFWCn#d,&V*ac,qm2")<N7U$^]r4LMW0Iq#eUdOm6ad1qV*%.bTiuckJZ<PN^!B;phKqkitcTK>Hh`4#;2)[X0EkEVB00">cu;AgTT#cCdFDXa8Smn;i:Yno[)aXOb\F"7-]g<bqrOH[P#MH^fa^%$8Wi'[TEW*Wpg3:B1_mDhW#n_d07!KLMq`4FF1I]Y[sr8.loB=\DI,*#TW9DcHq[odFm6#:L$k[Z+]ND+$m,o*`WL#0:%'GYikb7%HpTF"5u'XYDR%b<'7*[OGn\a)irj\9N;!o+HN_b\Jo6?F*=#R\h+55dZ"6CU>;"?TYeBVN^&]f/k3T9b,B"9@[A>&5_/.Od_/g3=%<'@/?7Ri3R?l'`Na5(-pi!X2%]5BN-TJRLcPi>-`5JD_J1AEH_rCJed@n;Y>-@VGm.KBtRe#fn(]#+eqRg@Z4Wj!-15U_'fnfT(g%A73hbc8me-&W$9U_2h1VESPN>\W+]#rg;"0=mGaG,<hrfOZ-)S?L:?h;j7>.(##;.rXT`q@k$BWZGS[Eh)ld-cs$:1q5DJY<,amS%4WS[=NXAYpC/[W6Wj@B/;=3YIN:ij;Fk#/ld,mBfGWdR+]rQc+Fi5=Xa%lJA#9C,u`Noel[%iZ8KBClRTC&<3p8Ib0<eid%a?=4^%*VJZW8p4jt];%^L5tgZ4GOIhmn#5CCT_s"5#s@JZ*jl663e\qI_[#SHZV9@U:[tBsGgpFi.QTbn5G",aO.)4ZrQ1g8j[%AdXF>Fo%b'_XeI*gb5C3@7KH9UPB-DAkM,Z2&0*3uS1^7V9SY#p)oo16BUh&Knf>&2^N7KPtPHT;.@27#7'A4_>B&*0b?^.#8/I>u4_Xh-f^%oep_3bKiqsk[G;JeH?4<3F(h;Vr0MM.39C/@cGau9nb(@e:d>:k#/*PQP`oqp*lhD*NJ/>Od-`-c)AB[I$1&ZHA%C2F?2HSLuL:E%NG('9Us6UZhmDDt^p'?s[%@?KnlW-_2@0"qdPB%U:>@Di@--nHXWRAu"t@n(ZFqk+ABM7,5")t>X-fhLeCFo8E$LLT/_I[@0s'IE%1]W_[8-r/$%$<]$kS[,,P0amr*&inF-%$BPl,c]ieneP3J_KQ8MCV'JJOS>ulg:L`6kt)3mYKLhh8#A/?qWTH5XF.MDUNC*=lck&%X[nK,<l%`i0No,4lm9nn1U)fASnOq:0fh7#.OIWg+^E.#l%lGM^JF#[bmrmu'/K0^2+[ELb#)+Z[&3?P3Eh9'T>hEeddXn55]Aif%*pdOU*1kXLPQ_<Z;;k`g`k/*`XhX=R(0J^)e;YHJ@?T9CqO=XF[K06#QH(e!jS8qRT*05eIFildWG4sdAi/\T-5UPt-X,8n(;7X,%/^<K2DW\#b:Tdm8CXKTL<=rE(4Ao917#1VYf9Jq<%4RlO(/[,;q[:?>5%PMW%\&CjInbsO4`bD*UGU,Zj2]I*M,7E@]JbO8gS9lm%G)db(af#J?C[uU&%b2VN2d@U`.8#lMHOE!T.X)*17AN'aBCQ[^#lZpYd743(:#o2I\a&R@K`*=hg:VGYEY2UfILRU4'n+`0<![tB%G;,7U[2+UZe&=u>[p!_HOU0,Z4BRllK970s?:KO89K1L?T\PtkCju_mk#ZYfQU"a]!#7UWlA%.8/#RL]4b.JI!!uCho#/79Ma8)#%VdO+YC0C<FE#7h+fGr9t[RU]6PH.tN.UWW5;sEV2Y2?Q3%9EP+4DGl'ecjm&;HcPDr>,G:Vb(oh^#*pC6RTap]TSP+R&!7*_a3Kl%nkN<??0nFi#e&_0O]WT&,.]$WeLM$D>#C#l2uY['$0h/k>h+se*pM=jMbN)AnI7tN6C8VlN=t7<(r/eCE5\/?5](Cq[5E/9LJm0/%CGjem*X8CBd"5<X\9Kf7`O95KQg!tg[k_]T#3J&PLRIn2kaFU=F8Jo.THM4R8gs-VV>O8Bg;/F<Uq,V%DJ[]\3Nd&miQL't%5jKX%nAnE*'NKr%X>\NlC#Q:B$4TJV<jI=4Ot[`^bM/3Dl1QRaK&sMCK+%D6XW@>N#9WI%/fsr5K+E:"o@N@H..A7/i?4@0>iUM'GZ<lf%Wd,V-^E,5K7_li?3C+7l/>>!'_X^aZIma8VOTH&l!iBp1pb![?CnP:0Z>>cI^oJ7de>KKERD&W9S#XiPaKfZPU70;1iXi;ID;'Qm%(dc%1ibD/R`$TqbJ2s?8NjtN:%*hZ?G44WM_3XkY+OAB>hS'G0fYe-lQ\*5Zi8=5;Dd7%@FT[DMT&X+/V0X:=8e3K\+jkTC-sQIL%Y+\p-C][^B68;61Xc+U_LE8cU5Y6'3'5u"oAD!bSY3:XGPqk$ZCp06OFVp:`9beKb>Tp%?8(fUCTb'suKq3RJIWeM%'3M9lk?/tI%[!f-tk.E[!=6RS4M-C,fVg2f[-%#kIo[%kYR1a09Z04@)?!WO?\p\D)0r/fc;)DcdWu(]JnFn6-ZNZIV+dc.?[]"ok0Uh8QaS,E0%d:j!q0OfV1?H5K&G.Rk-bDMp<H@XW,j_63%$&ks%`>K+0flT472cs]\8s+&uhNm>l`n"7E`1?5a(_OH!2(Rq#A2T#s\.QntR?U6H%=\Z>4d[S$Z&a;G>GioV@VaKDbLT5%,.kLN,Uqfs"d,IOZPh/11T_DB0O#)=#\2J;t"JthJ@2_\eakpI!<)WqZ_'`IKdok,S5Ak2@%F1Ji$hpW4`'i;:U9c-thm8o)ueDK8h;jE[cXg;nXb,CJaZ-=^h[9B#Sf\Mu3G-iF*D=lj8:YDQF@k-mFBg2W@O.b>Wq!S_aiLfuT%D_i^_iaHkgYMoE!:@Inh#+h.(Bk\S'iPU7AZ0;t2i\5$j\'5jUn,1>SMrV='IU$g[+N1a;l1:7^4m]]54m\-J4nQ89*r"c=><\51%gFGGHDc;mYrYq3XBl3Z,LJ9bB/P/PIO33Fd22\,YauE>nqq*)!^96G/JW31rG4a79;<hrIK.juj)S*,Q;Q,L4$8`pVFKDU@$/FG?%G>%^@"FME<2A?XXOatB"!&W1QfK_AGn/:jN$uMdp%=(L>e$dMg2OmM#B+`Ml.=N<G,p:0Wb:uU?>8P?(Z.fCJ,tjUj>7cc]2\:6g%K,E^Db_jHU0X<k,9b$!K(,*K62FaQ'6X[Zs&''9`(K81P[YCAhl4a^b'7,SWbS$6OLe;KM3FH_uE8*&=%<7MP9F\bnqW$fHDBQ,=%7-4cQ3<3t=5WTF+Sp08A"%_VV:iq@34i!:#S`C\MLi_EjJ8NL>r58_"7<LK'/!aaUJ\@WaIE28-fdNOC!SpUjqU;sZU+Om+.ej^6%#6h2<f=ZpA"f9q48u,@ej\&VSV7bAli]RDZ%[DV(#:Z3Y+<g2tB]\QVQWUpG0ZqUjI9LG4PAY]QdpN@-%jH>F(EnJXLl!hL'$49j%B>Y/n32@=t#chd(c:u'Uq"*i83(M[80a9mS$K_[aEbk]X=V8MtL=Gt=2]C;,Y-FZl"CNjo/r\'47b5"=IVD<]-of_WCX\uem>,7&%#Bn8r;+[plMVHcTWrqX(ZX6%0:[WNh_Aq&)>9'<kR+Y]l7pDt+j359)g-+L]>_^*Xgr[IToYT#efCnFu$fcEcO$<Dm5C`D):Jnt`%U,^.6LH+C$$FN=Z^A+GuPdtNoqDBe]lm(5Y5'@i)2'k8+06uc'EpS[(m%<k$CPATgh!C,7Wc@D(Te7e)Z3_r9LBJKr5KH[D>Zd`d%$IR'1XQ_5X,FJ<U]NqJV.ud^Xn<p')$mbs=9]!$t7;YLWpAp.4NK<!qRI2I,`/7O9Srdt?:u)6MmK'<]%dH-MruR;SgV["8!3elR%a%OpHTc+iQ@&rg'e%$bg!"1_%!&Rl^Job4.$@dP;UQ(JMU#Iee)dgukd9#E2T*[M`m7UJ_[B`:p&rjn^60M=kP2&!/Lon$L"%ZZ7%]+]'3YmohD25_A"di@bZ;krK.)$<X!^gU3n?1mC1"d6_PU/W!+C[FWJSl\/nl6srkku%RK7OY]L0/)LlfY/Us.qj@:r)U6+k_paa%\<H'pFm4,]mXA'5\HEg%/bP+C#=F;HMOq;e;.\n:pe1kh,/c[(<+q(`gUaA\>tc\F7nhe(^b;8X`TA`2S1OaOR\;msj>*\(>.Jd2%;N!BQ6o*Z0gI(.Q])gZjI"8@HgK*D+>'HRC0\]k_1Mn+W'9!(=n!]i`.!Hc1^,;kl==#D5RZ68ID/$^Hj4YL'05,U9?CefGWco)3%llf>t-'A:#/:tL?!uQGm'\)668k3daAMeQtn6CZ.28MQO"KVX^]VDHH&JPt8[d09tGYNTT;CB[k%46&Xml=((!Qe1gbUI;m3Rjep%F`XERR9fuW#e$!,F,I\p@Qi]E#>`Ufohtb7,KjJ`k?6CLr!(@jTg71DE(VNH67Fqk9(n5Nba1Lq$qeX[G7e-<aGtka7qpg=);fAf%8(&B1,>4mJHWH:`*+bJ@]<R-cBsofRA`aV_Wrun)V4YA[Ao'5#\^QL9mJgMYXA$I#1ESQ$Ir.-M"q,/3.VY!(W.qhUn4spIL+Bju%/ZG\hM;G"Sen$5$c8/$b?a4I_N']D!NMdlWB&@/dDijmu=NLR=QQ0081ubDMY9T*t8"@ZCCPButSc4Yc1m,pW]I#(BgjtSaXJWAY%$@jqDVM40)aC7A2QfehZ-2K&$WbtDS*a[M1!r:_5J3`p%4m^GF.oJef]h3I_&gGS]hX=i?*5@ne04V!8@Di1mH(`@X?sko$?<Fu2%EQn<QSP=u#_['e,5TmM;n4Qt"F]+Gl<XZu#CYs$*Ut6aH:]od'iNH80j[;0]&>q`-52JHopJt-&B-bW=&>o4oo.:PCn$?P#>l#?&%]26U(T>b(U>:HE(]E*G`&0GsggF.XM12.Qd>J?;q'[`_T%1A+Fn1=]l6H%uCD!RNoeb?*7>UE,$Ac&:BRGK$gVAX:.#l]C3Caq-t%rX:C(V;R9=9PAULI:9NY[/T7SQLntRPe8X)ZR$/N=V?KFIn#5%M#'lC_W:$PdVfmfBLlp$%Bu(cdbjeTCMp_[H)X-Wr$\]C`\hO^%f_OFf8BitKfWE-Qiu,6d2tfo#BlaVuX<Q1iGV5L:k\*E!Veo;i)<dY$IXlh7-.d--fWkl9CF'J99%Oi#c^@'\<rB)27>479V5baM%5>5"b76B^6"oG:R-/IE^?%L*bb"D'"gCC7caBhs/r+hr19p8YHG`jb_pGLi:]="5`m*2BRk[elL9T%3.WXkoi=[dhrNOgjtRisS=%gb%FO5UV&f/;5)%!"P\]?;kg`]bQE0g@&dTHU%3'55#=JFqoMm5je^W`dSUZ9q@B`=V:8V92$Vi1=H\!#V+==lIPV"5YpB#$4-cD%>u<?r&B,A[0V_%ra=0[+9P'RU\jT<9Q]B[g$%O3ojS-"g0n[]pjL_:Wq()G@d/q.kLZGFL0?&j/GV;N\\+4;Dr#\s:'OYi0:;#1L%Am/D]Db"E#RU[46XC\<-9Ue)[JkGN7S^G4lRu2(`/_H8;B&nT6A9M2J[2BjrWGDCgT67XSK&$sshFAaYULa.P]_GWdr$Y_I+E)^n%69g@)*sL5V@dFW2m73$-P8a?j2Z?!Or[^Qh'Wup"\UW5K576R<MX2Dfq2`u&%l41*Q2mi>!H2fZ^<e1Sfq6dnd/9\TarTPe$tE2d%-58YFV*W_6<MtPV1IjGB]a2sY[i*,aZ6N,?9mdhE'`R#c-bXkL:Y#-Sk/i@T'CaQ[K@1uFEdjd:q\@KZl6nLVB8^q4L;Y>W+Ol@I%!Md"r;k)`0k&o]7UV't+jbf)MY@s>q2B$g)nkDmdB(`lqAoo`L?\g,IoT35M]!f@jAl:dqn$J:l+/#l^rH!?!<'H0mT4FB4,b<]^%Hk<\HrR)-r^-^]rLqKFQ@%.2u1Na('oJC;-K_gk<Wr</4clVp][]"<Z)GUU9k*$0,?8J8(()nh_C<$)_Y?<[V_^bX1W03cLJIf9M%,6IZQXo(PTIBNar:eiWq5.#md?uEe#nYBjD=S4-.5ns*ArpG756B>LEBtiC#Ef;m5<.#.bX._f"A,`5ol]2])rKH@GI/O=mIg3la%!;$Mpr<"VN!Q'>:qB&90#Pu5uB(/&WGb?]0M%1&l#YWFd]5NbeZ"1Zb(Dh7)AZCjt7m-gJ7(RY:5(QZo^1I3CiF=VHaaL9)5XC07%G>UuE+]%lA'9RF5-+kgoGQ,f6c'MBl(^?%H6akP`"<]90]OasEUpiB*YF9_#<WSmfhgn%g^OIUM*GJ)@'W*,2kt$bZ+Ak95Y)_#5%,E;"[q0LtR*EcoC_V('?p-<+$IVGar%\pDLL)Mn$7RoKnR*cOF138Xc65*ia)HpW^L^r2a[KTf8DSQ[[nA(,'S_1QE>AuaD9k0b4%`YLDT*1[fVnbSsa2gZq]->%R]gheQiAYk$PfL2XE`b,J=_lVQj71##m&(h\a.TscK'X11)X>+VsD9G!\5GQ]:[Zab@95pL[[nW[[%,E3G#r<sIa?lr-&Z:2E/M_n"^Y:sILUocQ?Z*Rcs2jNc=D+-QlobKB(k!900])Q*$hf3_C!?C'b4bBqS;Q,aS<F;6i))t==4"^)g%jqEC>`&'W?;G[5@#GUOH'RM+P*iZRY[+lmWpIOq)huk.S_ag0c""!b6?To*n+%Xd`jB"jL8S0D-)#Nr)X$HR%K:G0ddgnHH-ep?e%2ONV,_Mt]ppG@NZTTkdiBO&3/g3^DpR!]2GMg"RG$(,'4%7A@K\Wmj6nV"=PZX1JN.*eq84em`B,JT'Sg\AR#rZa7hk*qM)Q&ru\%UtM5!)[e'JLhn9A.Od:NM72e;#PY0aqoC?MnrV]7997jTDBp@pAa3iNceb$dn1d$UV'=LiDS4^qi;fH5LQ-cYXc7Z0cqa/?d14];%^l)BcX"O\^W9R)pi\/>rDusi_.NpIV=q91[Wq3?p>M91A[fXZZn9)e>Xa1(AG%8fL2[`pIMph.i!=kR!+4'ebB-l09l77G(i.cNh%-bCs+DaI*?MVGrX*+[68HNLcPki#9MDborb((h[,I*a6)BGmFAO+5"KHtNj/R>!"(@ZR5nBT*)++p?+&mL:o,[mb768pu?#J'pH6%)ABI?TCnEt+hZu(bS\_O8]#ChS+ndKYT\qmO?Dl#>nn!oJE*;5l0[UQ)rfX3Q-k4=ABGsV:oAce:U'(F"Q_"F$G%^+cs?PU[/:>"%56BD3i-'?rWb&.(44QX;VBEfh^B`s!%%_G98&5-,2rK6WE*sYJYS3$jL*Pm?^lN`lkq%Ec=KKoldfBIK&tP1k"AQKd.?%asnPQ"M%6-\qmqtQfrH.8$?.Si5pn5!`r,HUo9!N:SK/mEn:hT0P-"TF(,E8W5dR153.LtBsnB!a(W/5oThKO='B><G3$hZQY<Bs(2&.Db)M%$$JaVQ^:udlq+s$#qLcjjQMN[go2#L@2P+@TX=qS.!t3.N9-hKo(jD.Q#IDr,Qd/$ON1-FjV+0[H[LPIrTh1B"#%"0j7*7RTH"fL%]#J^O05Ze61<NOW9<WQV.+h)t[JFO-`.:kW^qMc`2,</;8"&(pV!Yd[knU%/Wb[(3]V1I8W;o;lbmh+n\iPgs,P@(PJunI<QR[f6%<_G*HY'V"/(!i!:Vm!,[<Gi^-L%51C6DgK&5kK&^!r[A0%6Y&W5!Z4,dF^tAp&i81#R<Qq`udS/7mQnO])D\NImV)GORiu*HR^6W%mNV2a"V%S2mse\3VhOiA=o1d3%H8bKIMbMEC=1T*R_ahr/qi8k1iFa3khFCM\h7STTS%&tDqSe%rJGpO:=WXn2_G&VY*3rr:9Jq@%`<Jkh$^+DT9YdJ=W^&][cmdcV=j]A<3:\&ZIAn:i4irL%`8H/s/$s3KbCY$2/Mfggda"K:a:"gc#ML2V"*f&+9qr@bRDo]C173ej%6O6R,-.:]_<4s7D[!rsi9%2iI!t)34".9<V^iEZg4\Z0'V592lg\isZ3F,5aI=L8WM^c:[$-O;LnLt<k]Lg6$Z[m9)^mLH,$"a7,%G?MIF=XWADiFt5A=3^lkRX2<TKtK9b]'&3iA7;CnPb`>ZjjE0C)*U-j4NRS7kjo;G4T^NCLj-p&M#@=03QDOVpek@18fQKi1YV+g%B!R7B.p"F4H5%!o4`lS!?&P@l(3B']^Dg1X)$7+MVo#rZ=/1<'6B-S6S,iU4Zikml+p(CC&(9(:"]3q?iRtCB\-@+Z[IO<;I`n!!%3R9`?ciBJJVsZk*LS6D*dAVVK$,eaMBgmE28emuejpEf(,bo*D[GJF?>8\,lP_VB:5$FUk=<7f&g+[YTcR!iT!.:pLaslp_a)+gj%J#pglH[Acg%BNbcD,:?3MGce5iA*f+$C-YjBWBG8`C@d&@EZKXfP54uGdJ]=m>,e07)U+mF%;bV,:;l0h`E%\*`7LW#f7h;n/7Sf%%UhJ/*?T6_7h"JkD>A_+4JFfrGg?V2kQ?k;LcBfJV]Lr$-ckTU3q`]P4X+bcdCCVImlTP'!?M)k,X,[t:[mEiP5,6+IR$CFOjlnF%o`IDTLuj(NI6SjmO(e(dmed*\IY+mJEUO,he]0K:l@@9.^iNc];M^i5;/I:m9+Xe=Da.()N\mm`iTlmOFs)qg.;'1`Zm1k'8:!Ah%j,R*M,O+WITQfDdSOe5@"MlH@i>_%NbYC85)3:$&#C>Hn9)1``4S(?><6c`Qo78$1,a09`V[jKl,G"KuI!m-Z*XT5%lKn[JpIsg7%P(+R0_FIMoOad4!<B`<+3ODC=ZrMC0@uUO+o'm!.5&"U`H!]IED@R[bc3+cWX]'[oiu3DI/X.chc/NL^CpZ=eV6NU;3tcTgZ[nF1%p%O]<1g?$KVJa)@!sCE6-b!u6WW=>7.-;HS-@gjZ\7*5s_sHi!9e0oLe-I`g"=Lq0i+\XRCS\*?p8U;jScjuM^[/Z0Eb;eG-hmi?%%d]YRKJ_(J>lY\N5^?rc,^LoIBe)]:Q_(2a#Eq_jdc-G7`O>]b4T"('kC+L*ajaeA.X+sZc!TJi_g452AJH"!23W8p-dGQ]:3S]i%oirr#<@LX%rt88[.V9/iT#LZ$lH;;gc^^`6WC&C;$!@d&T_lVKbV:aH%ajKkkE>'n9C2'l5bKdFKJ^C8&Eq;?kU5Og*h2pp!\E?O%Uc#/"p%&=;<>OGu($h<pN1Rr>&>TpF0R9O-C!ua@lJ/u/a4P36-,B\DQLgSFM(cem9gkd-\IY8=n'c#f,-OJZEmqDHao3Io<]]Jt%+_I79K*KaUS4TQW6QnuANU'WLe7/D"6$Ome6T(rX#U$%[f*\D]Ap&E^gg]b/$e1NCjO,3WN!)*k;FqbHc>M?o?fIaPjf0(0'QCu:%AZiAL_=('H<%D[G7c4[YDN'pVbq'7+Y'<:o8_kV[\n:(r)(Y&kZ1+&EWG?LE-Ac8q;E@hFH_BE'hGV$JA='pmP\*Y.$?V"#g\.O!%RV1+mRRXU6V'qr%s(eUpZPL!YZK)"C[2;5mXWEWV]Moh?]iBuQ8Y$F>L5X8R1SOl>(Kh=a64)`LoC2YDe[n%sd4Cd,R@lX&`XAFj%:S4qn@YS1rql4W*F*'R:KdNN_O[`J2!e-9+hA,@Hc[+g"K:UH2_DG8raGX*JR)hLZHK?'^<bd)5"sZ(;.)`#1mj8ji'a?cA=i<[9%P=e=06Z>I_LrqO!cM\!%k_VCJME^N;-1sjJ+`ZI]&mR:_>ej1RS@P#EfMb'e,$tCjA!Gt=8TREm=4mRaYYmKfZhSU:\0ltl-VE5W%=G'+q8I!;'V#9R%;:@4qdrtSc7H2DLXV6$BgdglgDBs_c)KB*n*:\KpY"OMM`q`20h.g)G,F*T57lPVDNtO>T%r!6/8+@LOLG[j5%N2E?q@,n0#nZ1X<I<":!1:t=`8_A_/jH=kB*<dO@2BPDc%qF84iU3O76j]J@";cnX8L[<B]Qi^9k'aq9?W,8O+A0u2P00Je&%`^)%SXb$t$d)X#iUZcZa[(+:>kOU;3)2R9bciIurfN&rUfj)4;/_SE*pbhlQ*bCmhee_dDNH^CiHr#"VG7Wg+J[aHpYBGQ]O=RK62&!O%([-k1lMYqoNH7=q,/_S\^37C%3kWTSH2=siqMhf\m3W/[AOp%_%.]Puk)@s6/hosd1!EcTb\j\J$"K>[A!gV50,KCc+Mh52+TX"%%D^Qc4lJ#P^4nToe'!td9b*"rEH/F3YD99,p72r]!aGAjB&uSUKeX`3X;K?oA+(^g2AL$N`0LO#;QchkTQXPoANGLAF`%tQ@@?]8<%S7[aFR8fk#V1%#u.JH^[?1R%<+<AlaERI=>V-u]f@Hs_L1f)#R:rD?k)i:GH8Z>24X#:Sr<R&K&e:B__Pst=;Jjq1"%=us5*jN-p%M[WYC\>)Kb"\kO%M`U6VZ`flVR),$XH<4V-o/!Y4#%2g%0S!0'?c'[!dFY6ZoO-]*'*,tCEhm<k&uC0t/]Eqid@H88HI]*%;3P2R%CK!oqc?>rOVc,b]&u[NV;'S%:HrVNP[@<#Y7QIkG\[McW](S#X]f>RUIeai!S.DCD^PbYV]j^?l4LeqsHd?skCcgp(q"qt6%VIZ?%qCnr!]T\mR.Q%_mH0f,?(e6JsAcGU:<q(7V.bq;;3_0bOTLptq%@5)r`W]hH`'Qh)0g@ci.Ebtt^2,oj/sr28A"l/V6L>>5MMuRg%[u*.^'RUg`L>"%#[8CsZ=Ia-$OOZ%rF;TcoN*4EjKG,YEG/`Gcb'Wn8&Yb!r8JmRIT*nUSAii[/L-qX/_$;E/!2(l:0J?[i`a(tL%&W8^R$-sfTBqbcP4:<bT?)a9=4btBiYTa/\7L=nPM[X"E=@CBlQQuTaUd"kL>%@kXX[/4BEo&*j83fAc,YK8Hd"EKVP)N0R*Mi\\%gb+I)+#4DVc%aGpr:C@_eoR'tKMlHp8@=r(6#ig8L]#'sE7$h=aWV0[Ni4Pr"&,B?L^M12;ketK".qTY15p]d2"\Eda:>A#i:n-b%<r6cXEYaE56Wos,fd#"=%rTT8`S&4A$:8GR8b9_(q=2<jaV,99j9[][ah8$hBa^>j,UnFJ&!%p7@(AE``)18;@)#"-MXt=eZ+$+&%X;5"X0S[+n7X6kG3B/q&FUU'Q%'tJ#j9lje(>6htZCeC443PJp,Ju3Z_d8piL\%e;*?<1h0KNZqZab!m2pV3f2N096/<gC"NI7os%/c=>si5$ETo"fJ$^H&(5&j%B<P%Q40`(B3'dJ'N6dBQo$&V`:[L=m>#1GeB![N(UK*1+hgQI];q76(#KFrmo:g2%LuntCn-jA%_'%R*@(a`*G7`$u-M[&p5sdL)+#(CsjI$#?\nc3uKiG%48L!cpjODK1QOilB([VYiuU_5%OX[6")0@%)n9YW:I03\A)nO/hu/@iF*QE%S7,FM@K"i<>-k!0[);aJ)msSZ*NOM45^]RGNuGQj(r%^k7Iq2KSZ:7pA1oI`'m#1o-NQ?PK`d`U+6FtB]^M"`%3HH75#!5@@$%fF%i>18[?FX-s_t[>,+EM?UNt@:T/0lg0fo.sgKmS[;n4'(8K*WCJ!cD@[Jno**5ZamU=>#B[TQ$LuU.WSHdIi!V1$t%to%E1'L+BO>%C,;ai$!'n`]/7B!o"8d4HFQ3Z9=_Ou:JOA8bd]COc*<DOA!HRpQlT^!PDH$)9DW0-*N8@&i\SC/U'M&^^I<D.DIO.=d,p5B#u],G%I-.kTaMr'8hRh_e*T#t=S%h68L=NVcFg`AfL9b1!rK?,:SbGE9pl4;'>NluZM&SoU*jWAs/UFCrV@.oSOK:5WH#n^#FuHYrCh2rO%Pc>gi[,5*(a#M`Nl+U]\@Z88/$LuoA(j/ju4;K2Ca(bon`b\;+0VCjT/YQQ=f9>=gX[GBcprKmQ(6b)%+(c*r.I]_AS-*$%-CLqX%N(^Sk8Q3BhW+[]\d4kOH3*"DrGRP)1AnI0&&s?\3P)[[4U;I^l`o@OciJMkNile9$JmCc+L86ipR\)PD[%_8>69JB>l<pkATP<]M%!H`$JUM!/ZdskE96/"eS(ck%%<&,CaB1<2BhuRoH@VNJ`<js$k8eTs6YZga!AOd9r+DAKh7%$RO'^sMHi\Q8Gg9W33-5h@;?j02"%f'#!"HA**>nRU0pe^q,\%;PbC$_LVPO2cE\[JJ'ti[[fM)^S!YOG=K#9.'*K(`(+-WDs[:k='<`)$jKu1O5At>&sboVTAfl5"[5S%7(W]crKUqTiea1uC4fB$1"?=%h'6ODWV1PTW;Xn\a[^Q:6>2a&BHo7Z7M;J)\tb878:u7E]MY0-DfAX1GC&l[%r'"EWpETULUdoi%]91h^.&c'5FigijQUWFaMC/3Cd];0TXX)dkS,_u#?n4\2+IhXMn*4MFemUbo@HQ0MQIoV8fhq%fN@_K^4U>dlo-SaMS4O>#&neKu%U<omST?.B]%EW..bURI^8L;HXA9uW,9M/+@['W5\fVDpZMcc8j1]W]_L+;$cC+t/iTXPN?6?0/;@)?BmP0a2"%RitWd.Sp9r/f]J%>'OI$nitH@F'uEH/Eu1N]a5Ku8#-WXK^^uh*/$%EQ3o1+1TB-kqA=,kr)n&dR86L"2`o1He[-Cr,4<R7q^?D14)fk0P%[EnM&(D_%6QZ`[$AB?B[;NW*8Iuf?TXZcoP"M^+9FoZ!L!3He]ESs6[$3Z%Tuu`a4%UtI'i^F10]MYT8^[^a3uf*FTRWZV4,G7A8<nfn;V3Su%eh8H68I.=\4Ks"),jYYpNRMOd3IQsaYX-G3*&IOq:pKk`73s=>bFejlQb:t)6B%LWU)$=3b0QTqS1N!qo=#,a]aV6aCt-iQ<nuM&%TnI28::E(&bI!VQM8%jq76E,)4K*0,kFkG\*H\rf/M)kp!?XEG-*X+^PH(`cYT*b8,fk46P+8L[Fm*6[ku#ReEHUPT-0o!]lb2T9%o_kLb`[lB`!0iEkfe-+K[s("Le3VJABuk0c?;tUMS2DS($L%8m,VfQ`#*#ZrG>NO7crbSEPE>u])N$)&RGdnM8c6/a?Nh'?,tB5]%0plg\L`4-55R=f7_#.r#oVuYHBD2);,^;m9l%1iCFV%NZf*&\n^=a3t!HJ/`D`cE@:)e5lA5n0PZDP&450#*rMV&=RA97<?)MSOe%S0U6548Ak)_3IH@,6ro"OVI!UV;Ep0SKrP?o4olt+65+jXnM:T\(V==ICT"KD?@t/[o.6_r>#`*IfmaBI1tRG_WXXILWQA_=fB+.%K[gTK*W$n4jQ"mRmjs=7VHKZOZWOlZdj@IW1(Yn@,`Xj7GP]O8Wi0[KS@#%TR"[ru8_@gZngk&(qt.-`Z6+a&0-ECN'FA7a0>UD.%/J*-'N+sW=F(*cVC[>%cX3G)]fC]<DK5Xk!0PPQh8RIZi]d<bmEh<S5Ju'e$FJ]PpNL*/Y;:iY4@83cHKh3Sq$2o",GRlM0:*n5d%,h6cYOeTGd9pRc,duDfMQ$E>oVttZNo0sl&ki!['H&:t"8<T>'7buGi$D[JAn#4`SKuX]+kr4Ku$js.RP\/Ssj"`1]1+WpA;+P<M%7HMD/&4"jSRM"F"88OL.f[4uKV%)Xq9-,E?K*c)>.?!J@lt&3H;r.0igb$'YaloBYe$+k]7a7i>IAgR#WF=2R@=>.q-**$*=2PAJ%_cg4_Fgm)_\q\bJ2N7b?"2`F70[T!YmE?IpHfjET_C&cd-O357N=P[YI1S%RE#4Y(61C`cB6ql!$4C&u@XB;?Tkm'V]SSq<P0`>Q%_Fl"`%1'(0@[=e7J5\H3lKHFuNrbKlB/!!*Aa,l_qZU&H[N@MN(_rYg31S]'']hXFYUB=j%Vpo\MiN5?jiR4e=uQ:B8*+5M7:q;)%BIlYU;Ytm!ReP!'aD<kcNdO6McD3h:duf.FaH-!k2lYsbB.WS2r<CPL&%$agd@Ee_2>3UrV6\3%GfG-(mBG3ULK$M#h`esJAfCH\%+25TPr8H24iZ"tMT7$ERrSu5-?@?p:J,ABIakbe+bnYdOS\75%>/B\+p?Lr(o'Fm-U'D+Ah`Le@YLbq?=n"ZT5Pfm*;ht?m0H^5h%i8=QU3dB3&5CA?L)gt'\,XiE8)q2tkm+>`FU$=tbqW0nMhd,2352dLjUlS&BQ(5eR(Q#[)N/nJ>UD/7_0WJd+K-$'Mg-<XQ:6I:<%_uiSC<![(%`4Q\@Dh,k:UH+loYu4V9aKLV<ec97P7>$-I_@8*IG)Ko.VkHtjj<amgJC.jK@bbiUQS8h;"n#,>Bm.kb$n<k>.7pPo%Y3YY^CXOtgEU*0VB*sDf^DIoDTM13UV%B0I:^8#6J;oI5)2(#%#XNXS^h(KO,60I2rb/suZ40Y/..Y5g(1W0`X,Rp]A4kRD,ie"!%p6+DV_'7Q-&-g]RD:sXKOfJiqO4\4Ug4B;&,97O(+n=P=*>_RtCg:3&*lsT]InOet6`e7ip@`LGE_:Ql60(-Lrg#*0f;i@snnXa?%"^rE>RY!rli?JMWCdi(5p+;%8N.3Yi0b4</-!dJ$/0/]jhVJ6CFYZIA8`NH5.1%#fS3>IZ3n'/?r5c[XiX.8*e!XVI4O's"qIn%&%7Vgp+Sg3CX`Z;4n#ZtO;&#;TccCEu'O,^f$!K?/AC7C-_%-c2^Cs'U;Wap5F--[aO"d6D?N3APf4K^A4$u<@#,X.OC+A(,X<qba^%ZV["(bpD)PEQU]O3JnIiQ":SJXu]f[\$I!i9PKFG7Qbo,Au1fYDO_-9Mn)1-5ghk4GU]q]bQJ,uaSD/PKm7]kE#T(s9Mr5N8Dn2`%c$17@4ZF.Q<`#!G.2Nc]&=okdS&_9qqpRMV5Z-fQ/5-T4b-YlV=1;[o.0(BL%U3sXTj3I3@ECg>4"XT.&2V0s^R$6;$K6[k:sgE^%`kR'I46RkJcN7^<oNaF7"(;\lLU']3@iRit(k@PR8eP#4Mb/=.DN*jAdIaO$XKpk0/uHuCL_[+>$a[c%P6X!`V59i?/Y)Y"1^/2:%)\F^7A<E5R:AcP41C=f[q@p.&'V]]rWM]$%WA4NbN#JAjE(mR*RRM_bQU_23k1USCRmt(`4>">_6r,>a7#HMBZ9i`iMCi)t#o9,G%6a>f('BXC/!%sWj#Gi).Er\R;G#q(Z`X\B<'QJo&1Xc&rX?H`.&.?ZoCdN\Q+:lDBZ->^&Zk9ShB=YrnhT96=dqDNJQJhTLqe+"k%ZFOulc%O9;Pe)rJnlT'_/P-^K8i1eK$.0AZG[F[;*>OXE%]<Hs"%FCS1E:1j_?Z7"AuCG_4I1Q*5QDsbPbo[q%,k0Kj"CO1<@EWu%qLsmo5pX'UET\!:7_u^XNmJFVP:O,5F!`\Q:o:e5!hGFG?Y:]lXjAuJ]V6ZXkJ29;.<RJ<!XJ-99^enc"rW`:fYQ9r^l,qVA0[bV%/Nc30Ae/T8WZ4XVq$gKuCCj+=?4g+8c<ViqK0bcU`CI-+g88#g,RGM>cFLiZPLTdU"3.V*=eJi'!3t$)d1"e#SPs$R[BZ[:ckEu1%VgpW^*8s2fc,mAYF#1qK.:ROS[TP]5;q5q6]K:)oU\tcEnOWtnT^](k"GQo3W&K@T6WA=;9o]a&7LW!^9I8F4J>I9j[S6&f^'tKX%?KqH"*S)3`oAW2!I^\[3'``s8Ytk%Gqi+4LK4=hhGR0E*03'&45,)?j4=+8P:@T^2A+303(#ja#0095a`#V[>;::nF8K+%5DXR-/%8<GdqgDV>pKrAJ2[S'`/0c]L'U6t.WP_ugpOX[#83Lj\YA_B3Jdmu)8@-TO#-CpZ+&kkUG[TV*#HN^&C0Dm9lN">gdc\JmLHVa*p%8Z$#2%Ig=JjJRY7@>`O(7.On&:uH.Ge2BpJdoJn.fA`,n]qL<//2(<XYV3'^,/8@tM)t2Qf-uMeItFKidipR*<;=O#DLeZ5M$P/I%s2kVCL>nH.c8"-gZ%PIG&.C_>ml;J.#BQJ9+6V&ofeIl]cV"LB%"Lb#-oF^IMO/En54j\qr8?-QGp&WeN#\%n,Ul:$/Ad@uL7s5L%>g)+2T`_o7EpFj%RBR;Q?nit(C6a0*KQ^1d4281%+rB_5F<YP#_nnYFl(H@Q:U9&lSN)(OV\#Y+94YT+ct',._uYk=bbP?F_9.d0%>S2K;Z55QKdK*tH7p)?n@*>Gn7j^!L/Gu)t2nVaN)lBT7EWYPqa(sXC"ZTq>WPMStiuojA_43?k,-9C&%ZuZI[nDig^"%c@c@ZH]%:KR^0;+I62PA71h[KAcX#`3%Z_Sg068Fb*GY`g"WC(82lpZ!E+M<&-"f2FEI89e4'o[s",V3%-JAS!t2FSD[]&s26+%d\f,=Q+>(%dA!M>-M56F:0#-#jih-2'Hp"-MWBUP/HTQco89@:%*%fQHE34tl(nQ59/9pG[6ZBJ`ZA=;=tNqP-$#Gu4\5e)@hE]'IFT*uh+M-!%.9Ed++n/OhA@1P\9OKBF#@W:QFAR)j0M^VpBt_!Y,pr;.R?ZH;Vsi7_/2E\MMhiPU!YgFV(Nu[e]6r]$4Tp3`X.IL[@Y+QdAZa@S%_nqR="AS0bMg:e)=dKm]Df_!dcihCC8j1V(Whf6>[Ri;e$,Zdp@Eps?n\2pbU<)3</d7hWDJ7\^\]ohTf'57O8S;$tlH4m--XCG]%9N73:&75buN!Ve,ne)Tk`Kh0@BDoQ$I[T?&\[[\l=h:)Vb)-ha7(ooHm$Le:2crC&5ouKEO?oZPRT<9J,u="'U-hD__I=-1cDA<R%/ErVE*E))8&L\nBoS2]6r[0um0R"Hlj[l:]!&:nb_)W7t?tWlK[fR#;](K21*80eBQC]a6<!,WfV0/99Pt>kD`)d1R^-t'Qh>fs4%LE+'<*'d:+nRfX7r2MY'DEE^&5r.Ogb9Y"TBl6piLWYI'0<m_Kn?,l<(6[s4Ifsr&8t5_jQLcKH=i#m?A!*8tU%7DJHT^_K2^C]r%#C5pWPp>1T`.?)8>^RamKd?6Z_7!f-L`kkm4r-!]9nKBDP?7uWiK*Jq,4_dF!f2u&daF>7X%u0PR*ka?iYG97_Q11K7LNkoSg[;^%%7)tCjGbEB8mIP]-QXFn:0;[<=Vi8jo_VcuaE"W0?_'B<^*5T"d1o*78TCl4g;.fCi^Io<?S.cl^QQ*,olYu'T>\<WJOCM2CpL!M%dm%GHm(elg3e3.2j]*Nk_K)Rn8/8*D5dM"W)da(TEg:)JPHn@cbGX6d,UU[fiiE7q_uekk9"4)#P3-)Q*<]h@ET3TeKom]BWO/AF%,e/5:Y\@5F@+'c4?fEQ[8RrrT&sX_5C(!A<XQcH[0?uc^anq8o;,[.]'&PTJWEWB@.P7?D;#Ff8(6$#IVdbeM%jIg)k(IHT)?d$g%lrB;NQ9o",U==8r0,2MY=lMcAptR,O&Du???cp<?Wsb_\DB("O(Q0?4R-UDB0TO;+]1LtU\-u7<'sF]AEu1gk@P:XmIMb)qXY#N[%O)L5(^,XpUJ3cRka`!.B>_GsXDOnj/$?udQH)aJn3;=%WmBOmC\0-'q()(6o`Cu-A.-1V8Z3`e=5[LJMJpAJ1V$]LdgCUY#:*Ic^%BoOPmq+0HOkj8M?LP;PpR),RC:h#mWq.(eY7;oW%?&hU`/MEn;9"4"J>b*PW7<k8iF')b#?E:eI/&MJ!#hajk0*`#<+\E!*JfeAI%&lhj15qY^9*C]d/*XSiBrAgoB:bD,^]ZCK1,FTQa:<k+s2Z7W]hl<,T!M&4r2fhU$IE!`&\oH:6gk%s?M=&J+@ao`d#s"Bq`"u#C%o(MtB++tP*C3`(6,I-`lh9JS",AeLU:<JfsS5S<\4DQGiA.Y;cK8Ne[(9V;,43>e.Z*5Ua^5kkk'V'qO//NMMSg+k))^4mZaIu^W%=#rnK*%\HP0)@K4W2gbY+?q`!M8?^3pM6q5()K_S\lo/s?:DD)^X7l%i'ffl`;$U;'lhVPO79ik1nR;)<hHP:B/3KpJYn(;"n06D%fiCp,?@\6Re[(nS*A"LJOp_QOF4Cc#Ucqfd6_FTj^HC_&dDu5TLXi]_Hnhr?FjM7+7nd;g"tjlb*Ln]#hna<$m/tVd+gF!7*Uor;%(:YBkV9+ng--j4s+K29fJa?fFg4=*P\l,(AEV``Pj$^ZM;\2S8pc;D(._7jJfUTT2CH-"g7+3DgJgK]Lf61T%YGmk;jB!<&)9]&:%^jZJ*=5fke#Z(AE$?/mm"dZeD(N0jB9.Xb<Mg#e*d"5mTQOp<7P*^&6]cfhcC3D.8$6J/FP7hZaaI(LUDg<EIpTN<N,q:ldkO`=W%>U.`aCdQ\IaTW=ZbEJ0hV3#B$L`fR%<[Ia44O6\iIuH_?8^->_-jbDpD,]#k7k$k7b++QQXG0lbTWF2J$b=(o1H_YIHS,ZnFCBUD%CtP[#<ZumL'N[/k)?+%&PG2MX#GXECAUWRRM6"S@@Q/g'>R&.c[QaiP*)0^*(@p^U^ks%fapT[)2C1'cKk;eslar7_M<:B9&jHB`%ru@(%C)AZkJp;(3G#Sh_%]LhCJpXV^LF%c%?pDcqmQD829&^r%88O$kQ-"#?P9YjK[LPnbau`0sjO`M(XGT4W%Om56RYK5l>g-i:%#o&%$MXi4="&+.ZO$/IR!H3DNZnfmH?m>_8=?BY`89p[mWt(;_+@3+H@>If+0gSuh<L'EIE'M[Fm<XF/SE.CV'G>Lqr^L-Pft4%_%7Mf_V<Gptr0^(?LZC'b:`Id0C^f+:nBX^-9[<\-b+'N:Jr"N>+MN_53,H&aG)KGa-1+'6NM9?8R6'1Q9g5>_)/AZE,,Qon2`'R(=%<P-`>S\=fE-?suqC;Hc?T,'T=4Ak>Cj_pV'JL.a1G.adAkKO72W`,1rhZ9\TM\>L]Ff4E(1:&7#8eOulN0>;LP$(6'B,&P3l;H:s%7]K3<QfMHZ/21Ncd\GWSG#JVq'`oB:;2lU_#Ss=%;\S>N]RFR&P2dK$4OggsjO&7ES4==ZUtG,USGk%*IYM&S9.j,eSD7li8p8^&%dMqIVYTYB>e/&<D'gqq:r@sFMk!Ws5?$V37Y&qm.XSk?G'#j.Cas&VUn5a1`W;3-!:gpXbqF(`5kGCEe9dXJ-d6]_RUt<=qAg7#P%Ume\bCF5aF[Qt98c5]#57tJgm!,)S"Kr](9ODISfUOqW`RBnBDCu@?dfUPN8LW+3OEHgEHC&g=MgO!\)ZbAZW$h7Ia4"4DQ%\hHA%fZX!!\]k[KJ/Zm&b_B#'G`MV9c]=dl3>AhMgfC]^bsD:_X/6&jK6j4mb#<?!-[&>t<-_pXO:@9$MGsg<$`df'n74(El?<I\7V=Uc%6O-UNg1gb"?K$)3!_jPqFJSsi1+\?MKC[VP0[;]cD542!T'_B@$fD<Kj^1'1LB8f)66mnclCo\%UiOnSNM9k6UKVf$FXcXW=JbA!%a21o9G^G5hSbuJ!Q^a4e#=d@NA<GZd,#T^$VG?Drb<@^Yi_f@gfa6kM&XOA>88)4,U22<7Qs(q1=Ar0DAsN)qmU23dGaOLo5Zs8?%8(HN?XbAf*83AHE2r\tdQuj,AeSSJqgB@.`*RlJYJZG6qo)>NCo`Q&]*9LEm^(F`,@R8:RG5O\gb?;_1(<nG=02%.`Q+.;Zh>`o!%joEt'(<QOXTLQuk,OtK!V'p<cD45!b;\mQ@$>Fhhi0!C?2@3,8gBfs_!F:W#EZD?J^`2H-%.H$o0pc/8d"-8S>(k]!;-&tT]srF"%%o-thDLSKXo<R7q;%[%U2:$QIHI0rd`LrJ]rWOBGPX2>7^G9npPL7f%pB06skfeQ'pNYI"CPak):-*Vs*r-r@<NX4'#&l,qX+Vs6%:/M"a.Hm:ECVO5J%O@61,-sW_0I^F.-]piMqCh!aM/r/T"/*5Ca?.=H\,::[92+t0Lr1tn;[=Sjn_4'+$kSRZZ%3F,pb1X(V\ptN%^e%skRO2?h%-<a[9hEd&S"H5?D[a;(XAYIu1'H'-dO:P?em]dJ0hiHZ=V!k*'=S^e',$R+E\Wtm&1fK"NO&3Id`dj:.o1ANb"&)^%/Yshl8P>f89=YGO"t!#<$_]Bl\[ioehqRHq,PFR!]Ob'Mm$+N2gm)2uU]]3,_,6*/W3W@_XgrdFH?3]+bn[\PYV=%r`Ps%D4r`mY%E_8n"UFqXo;m^)#>.G3cF3Jq_qe2H,.=sN'ctA\t[cW7bNXWm5?5bi<'1fO>Baq05NNeU=p+^HbEjo-d9%9f>MCGF`HV.JTqL7'G%BEQC!<,=0abn+&**J1\g\5eF$C4VlnEjEoEZ[hjP_TFj_'UHpu)TG]4.%E'6Wi;CIQmc#=9m.iaZ\+/?X,17,')PX3_+*$P3j<+q%g$+r`b0kqONIlgcUsOc':&PkcEY3W*m6X[6>1TLq<)r5(A)]bIchLI0TS8KMRiJ5&>/Y@u29ALH_k^7h_Z?tDZ(u>)Crk%(F9%Vf%Jc.'ul=:#E[1nNq"EW*9=F4)n;L"GMa5gG8)4f9h[]ocWA2u1bG['1n]VrkceTX_9O'F#Mbp!]pKH3hQTP3tXQ.bE[SAb=V`EXP/%@7sp-P7GMmN/R<@\)@ae9[jke2F23Dlsc)i:8'pVQ&lj(Q*CTG^3`\H/"-r1$b)#"S3s@CPe!duSQ^L3bK9ReM[B^R4tI1`OW0aa%L-dO=V%RGr&h\f+<B"]@?)J0aBA4u2kMQa_U08eO$I+_GUfg1&_+G!Q[\K\[k`eVZi.9&.6)^t$15?rMWF+`XbXj6s\\ZTaVN@Q8%fj[JXD=44>7\fuDk[dkPA5Q"iW8^Wc#!&'R]%;qPBl',7:)ESEBU2o!Ge\Y!l^:$p:pZHu-WsE)FB5!PSHGt&9-&QI<,@qbMZp,s%X,TVsePW2BgS!2W[jA_aM/uC$Ka)-.jlK#'EmKgJ/?)[K,("C2G\*=sb9^@>Y@!AQB+f9G7PSD1Q:5,$(<NjLkmLM$APh8aEOFnL%o\cQu#j.jkm8Yfl=Eu"mC)6B^9QZ"5#NBl:($m=2>pUg)a?7ASgI:"!0Vsh8O@]nlOLdng_N><L/$-3bZHPWVV'&f!p>(IP2/^;O%j5K.#)h276hJ<K>((#8<)b-f(2,$Ln?<#hD3D!,@XARlFnGpAUo]deUHf&73=!]=K-a+N2'Trt['_>>u?IIhZ$u'=;Cnn%+R&_3%%N5HA#Btc;7/XWk*"EOGS!C^tG(mH7W!#>Yb-=QtQgt[WI+0$:8D794"eRGi,#7Dh[B5j.[?p[?fK,?]u8Rn?uWpiIG@cjJR9P?Ek%;jV-TJG+9iE7PM$eV7&</G?/1(Z)$/+2CCAG_HM1JXi$@Hfod#fpn6BQgP5@[e^g9bg)[#6JdAr_?&B/6tVN#)&CSci?a3TAD^T&%,GMn.9q%GpEOd,I%9DSL=)-W$W@<ZW(>?YolC-3`/KQ(f<l8,\)/VW&dia<8Mbnp\2bUr=XC1.CgLT8].Z-*Cp=73=guo7eCeu!J%]S%*DFNBX2,R.n&B)lYKC"Na(dt-^u(+*?(-m,@9OjT$2P!=Qed4rO[eAu"Z1mf(N*.'YH"Np@:ACO38(?c*F's;]'\q]u\/t-tm%Po\,6_Sd7j[&Hr2)EQq^X\fdVI^(BZUIla#&/5R!Ll!4:\)tV!7OqglY!k[#XC.m^-4.Y_jd?7_X[NDh.WsnE,32F,Qa-CXW(W>?%56*ig&XcgG%*ECcb@n%E.cnVp>OLbqAduA;>U67'066C?.CcV>-*;^/s$9jn(t%^XB@0oICL*T>bUl:7V#lJbq-@6c5S9VV/!-Y`%B\D[B3?H>3"gp%g#@gol]$).T$2$9I8/=W94pr0Yi=dH!53*jsiZTi@L6-I>LuYfQ`-qNF(mYeIi?Q`IdZBdU/BLb=0=f0"U5lri%MH5OmfQE's]<B#@?aF2-oIRm^U@>'lP&c;"'%Knf=)8o6`/2e4<\cY:pc]3Rq3Vc<d>YgO'3S8W>EM_j/6X40>9nTtR\t/'S.?\T%W=&7+peEAp-hL+Q)R3AO4#ctaB)kF_19-]mF?g$WoAe=S@d,E03`'*/Y.[#DehsJG_aL+hAXLHNTnhthUGJqXNSFW.@tbLLlo$AD%P;IO+56TP?_nMUN&Aec<quYbTp4g.)CclF7&4&/[%u^KdSr60AR+-Mk<.1:tFT8]cE/A5YJ/0l"0$`6"@LON9UF/tGC?2b"O>E:&%!hbF1n5.1K]i8;im-9sHG56pOjcH>(g6+l4Ph0/2O$8J;O*NP_ggk!C-/t<N:dT+TK1rrs3I3g.C2P5%1oK):m>s(r#?f%S3J#.S%,k9rWqp*\i-EE7.OFtWCYH;FYcqSd<'O=oi0i)fi.[KM(4L6<iSQN_4nkm7XWomK&:\71aErndVkBb(r5rtOTQ7K?[/[2^`<uC"?%S?f5?d+W8t*rfnWXHd2T*uVi*^G73U8;(3erq9>jh-u+Noh/fp=D4,Q"P&19@j+"[Cm28e+MQ'#DgB,DgYr7EW1aA-93/H[.:7WO%Pl*kjcC_aQm&!_7b6U%-CruMhMd)j"buj%WKe8J*:#)`,GD^KVFtMA!.blZJ'usjC6.m/0/6@-A_C.V7J81Gug+;n@7.j-8%F88a%'mj??:roBFa;&oA&P^fSUbqSCdt_%F_LS9<YdI)8Id%th.PBPG9UTp8@P!H=R,n@e*2"G-5C5t&'m)/F][0dn`ZP^N)ml)m/-I.Q%#od!Rl&`n%^T^>3fWBn/WREH[l8Kq)ZW%&bXddnuFR`k,4L8^AXt#:c\%\35[-A9Y6>6q;Th.?Ue,q/Z7j?5D9660o)FLo3G@s;f%?\#f4o0M@Q)5o3f2H.kV#k4RL&kNk3\PN].I`Po^/]?7TlC_j;-7d$kH'Q?S#cm3_nR,FuBi<P_G5ja<fN;Oa;Bi.T'+N#r;M7ht%n>\-])'M57MQYr@!@@V&Y.1J,*ibRrWGcN%KCUBmR#:\P")I&c@SL\R+C9"h<7>K:I@5]k*@Q#s,*)cHk9Wb1-;5OP4dOZ%4j0[P%,$ZpL$IU,5ju_gC$:0e=p(qLTNb<'ZI+H01VJ[6%Y.6Qo=3jCU]S9g'0N1$K_9?H4rfieW?CSYi1c91P8E"b@:M>HmKlWHOo]%E\%<MG()N?GXS8eflZZ+`OrYo*iJ,_0"X3N#3_*?81KoWDW!YpeTF>LK1m=B9#`mOVK)0ZX7\oG2jeCAOIK=,3=O@0lf';o*NZhJ6c+%,ZTh32G)C*@%G7)9^A^(Jr-2]dQu?7DPA]sJ!3B<9\(Ppn,i<o()WZ3l,GVe*%Iq<42I`*ZLNK8VN5#*;.Ic681tY^^eCIn0tIor%<g"?,^GXj,7>rYq(D0[n)AfF`.dMY:rJoX$YDcG@Y#U[i2Y@m'Z?7Y*Wu;Ij4KsbQDHi4Kdk!n;ZO9%7OEj]75WDPVWna*'cmC,K%Mgj9nCbnMJ<O"lP7N`M5K3JoPK_L&!U)i<##TQc1*<^eIe.hCK#I;H%]u5#&ECb)!0R48Q6g?:]VaCilff'A<C8M-NXHS*o'u9%B%Qqp)u)!!jfkS#Dg[t1j5L.P\%@.cM,@+4?;I1g%sV\99KG51tY["f`ZK-dr21./&I?;WJ&Csa;KTNH:DkR@-XEHiXWKr6eb*e@_H%mruco]TZ*;o\[(iAnM,Dpm^TM(H:MYGNW&2T0F\?o4\#NGkRW90#RC@Mu3L'5C*(&ZdZO!msXurqW/UXfDbHbe]I-`RtFLS?Cfob%s7!cDcp&SB>[3f6^,^K9k5:HJIXZ]nn\IMY%URp2gtZ8MqVZq%miOZAp)^Wfd/Nmf-Pm<$a/0H\ro2quoSmXE?&_'>:DjMI`3*fR%:DldX)p*joGFr.5?$\m*YUaVhZh)X!q[.doEHZeXGQ,S;`[BR<(\b,Y<\:PV]k5$j3BM_5pA4.!S+F8,SR"A5kGK^%B*Z2_VGUWh%4l#i(S*N8pX0[H)q^L68Md=^8^H]9B4hLOLjQ>RWea;2;H!cg1%hA:1Y0Pk4I""RAk_F8(`B+bD4uaBkQ2fc-r]aq4s59RMT7G&F%3PkV\;gJ,"_=$`MVYkj4Y]Fc,#*]&#K9:e3Z+DFCmlZ^)U#-m7C5\_p8cgs9ms7\)pM+>GFZlh:Zh1Ds]\B[)c.f`o/n*8P'lXNY%:])=2hru(5huc3Fm"KmJ_uGtCrb%t%qUU/K0e<1`rcb0;G%#@81?EHQGLLl3&$dg/mJd3^pl8CD=K&BEs"iVuQ\ed,Hq,tFl\4cD%(S@no0\tnfSF\i"K1>mhn*Xh4?X92X55X8>=4_r4_ESP0p"=[Vn#Y^=YBTFWI.3VS=V(N/ZO]5^]fZ8cR5F]skkal;Fl0-)S6pA%%"J6[I3B=i8TE^(`Ns#E4S,E$.8"\V.S::::+$JSL5!$5;5IE.X(I#OHJ,SN2M^2`]pq74,^UWO(]`5kS['9M$c?S4F+$W!)]>1i<%*;]+$qWd/(X+Poh.s-46l.P<D(GT:iJ*\HKe$G6rKD090s*"*b#:9IH?J]!qgu!68I=&U&LDuVPTFauLFX-m`=*Gc3G#UQfh#d)p%"!#:r:S7;GTA84=:3oI&G?<^(pROdg4hnQk]6O>PZ^WWJG'<n3\/HH[?bE+VDET1eFn*SuB6Q;d?Tu%f3q(DOSt,L!$.J^#53:hT%#P[Jhc4[WXcEG4kF4,NRS3V4D55<ga(C*/fGh.A]\qQb"$0D5:XoIlV(U\/<?CZC3J)WG:fe:mRrTeqri3j.Kis5Q-p0W3.`Fh:;%+(*hE]Q\IGEIDp-[hDl'p\jXWm.B@jIoP-Nq!(ZL[s+0O=*K$S\;0t,e8J)83fj<aq<aUM\)4p5mGcL=qTWUDUHYc3pKlW[^V.@t%%CgY\_t*WJajobpf/K%C-fjIR='a[o3k1@hk@Z^m2s0_f-;V333dCT,(3/kF4>4!XQe-^NqmSf(\3kLpr_?9mSZDY2U[,DPB*cck%p=&ouqHTASI^B(8X6[sb$[ZrCGB.p$a.Jp9^,\:0]s@E/T:W\V5G8\C^$cop8,/"+e%=obr0M-Oq6q/g43r))JH'_=IW[R4m<9*5%p:FaO2eQK&oHX0e&bnS_GU0j%EqS^+1AfFQIXp>1NJ7kL/1j"iou_0Uorp13#=a2bIJ)n)r,-$*rkfg0K*amL';o-u'#"Qk!J:=\%c3AZ68)oe.ljFL%0:uJi%8W-7p=ecreGo79m,rj^]DCU=WuhQq*)j`;s!3<u.&8O^q<o]%n?5Ci^HI2Bg$-cWbEr1&IOG[is3'*;%Q[?4#ZS/l2]ep\`"TFac?@Yb-7f.Ci!`,,*Dm"$X7OLNa5G-ceXhHd*3dn=9Y4(g[I@Rs4;l.R-cYgHME`g(8EqhKbqCN'[:Rg?*%h1oVbr;<a2VtVkJr!3.C=3piac2Hmr]<h+`++gBej3li'N45Lo!=aF#rQUa8T;]a)0E-mnEo2Z9qZH!q7b!]'jDW<n+9V<2cR[k3%5CE+/hfgYLr;*:KD0SUjOr^&]qkMdAX,fI@p-n<aT7-M"jDFqWO)K%<s7jd((SC+9QsZH?s$rTGgXA+[n)'b.T>(+?r1>KAZ,+8%%YkaJX;\[@Ke]HXhB.O.7nBneRrp[7hO$BfCBDm`id+M4o>Q93Qo$`["o]F?3I999pq_.d:O']O*i.(Y(rpRQ2f[&h.]tXK[Pje'=%ir&>i$,8\"lKpGaSaTiVpbleD1\ukjGt4Q9AAI=*g(45gqt:m(J$SYEao,LXa=opTIZL_Gpu:Ab5pt<U<1KSogsFl,Fa\CVJ()"i%5C4mYGk1XD-Z0fna=ZR<`@C:qbNUa!3Ua5rpiX+.[nd9Zn@JAOlZPUlK@^'48i^bGe+1h3qEqro1$qQ?optQNFeTY5qEqcjjh&1&%hlFchpUT1:.H*<?&)?Q%o&,#SmI0(Q0Ae2hr\!m2Vs<!b[r%'%OXaDH3U9cE#NBIirK-7Mdb96`(2!=P#T23hf:d+Sps/*rhef*,%m3-7,]RW_MQ0jFJJ*;``4:TDpE2#>ZXbhK9-`/!47-Wp43Q+WL67+bn6ViqiFQOTlE2$_"=lT`Gd396@EI4G;NFMYbSETMS4].rb%$f=gOn('nm5P.?X7k7!*5IR?S+*s[&3?L09W5(*8-Sp1^^AM>)(0?4!s7sirlbDd:P,E4N:0r-E(]:e_Wbu`qetq*$PLDGqoT8`f%LU"qH<\H,/?EG7u?XDN_Ne\MhA(PWp:>ar99Q3%L.%)Yu,4?0P_YM*kf69Nk4h^W^FNj2HT6YF"oD4-3rP*i9jr_gR2',f+:4,e!%f$<?"S6LE>mi4I["8?PdHd=P;m*cO?*bg''*Y"[>JYEFgVu^u:U%eb?I!,*6;>Bb>e'gIoo+$2(>i>bthk!*m9?>9W-`Mh%KF>pr%!.KPhIa)D0S=a-FIJ*=21+gf9gSau,Vo8<eKq.U.VYfm>n^$'`hcs*ijt2\>*tp#OEI[X-ZEoTEY#"KZkh,o^IsZ4hjd3`QT65UD%9^Up?MjG5-[i8<6OUn$Oi"jCC4jD-\s7h<Eq#=1?/p#bH2Z6eYnY8r\<*;YbXAB?q$/[ET`L,L)*!K6,kFI,&;9,L1L^qE`4;[VW%^9>fcAE!PCT8W0XTDP6sik+fnphh.^IRNhdT8_da+p^D(]Bpul-GC2OCNS<l<-e<;"<ntkmd<m.4?pEk\2\d4K5b&pVrmn/n`OiH%fN',uW4nl]G0b[Yqqo0ED(e`Lki1a^p/p'&:2XCpSD;t<":!ODs$mFTWU-^8K4(@IoD^=L*74TEIlmWoch6aVWUTYSm-cJ"gY2\N%rsjNcf_<-``t<a%'t_$4Qf!77F+/H@8Z?U:V1>*pn$7+VqDrCnro`s(Hu*j75I_Q1pg'=(Iu(JjgB]AnM#$q.0)R*Epa=JahMB2L%?]A_=:3g`EmKj#QarXU`PUHH%)STS,n?5&9ddUOs3;l#';8<'T4A"*%IA_I*2_RsEc45;QEqS_W*cc5t=&a<,'q^=N]5]fa:e*^#%OuG0mhq\5+%hf9Tr$R>"gW#s=hpS7s6RNB@6!=YG?s]Eh=9JF[0AtKu5(?K5qcpT^lqlb#/__'7:8*tJ,Q$=^4i,-eBQ$3>1]-UT%rBoWOr;Op\s5"XKeZ4n'=9%Mel"B1GD_I??mTT*EI4"7X]7_&cJH)?bN&rs:bYA*.X&kUTr6b0!0D`-NCOh%^nWNL(KnK.!r<8K0%\3.=to'GX+@5In%qeQdkEU)]WhXAe9_=cNu!T;:!hu)R=>V#n>`;0d:3c;h7==/"-%oB(h]b_dik4;AtoCISp9a=2XPCJ"hMtJ]Q%O;ErOUCaF:6a<g>PQot>R^)kbMiVsSAErWHli"=diN$f:58fEV/+;E/k9jhTE\)dS:U0)W4nnXf8%$%\4GTP7TAIJ(s/aE5c[PH*%&*32..,ch'^&$VQc9D.cKEH)eg"G3[gOnOMX4R)oRKkLKhqk-3i_TQP$3>VFio[<aP<X8ChoC*5o2k+!-SNe!cL8KA`[+!k1&6BD%d-oW1lb8koViW1,T:27U=&3W=K_+JcD-pW)T2F&WTaomjdqAi.[&"_WUMXiJ@C$jMHZ]:J%-qap8QVfsoq+<qFWg\>5Pa>MbME`c%T"OHdo(N"Pr^,*#rT'$]hFaKh-hhh'n*^`M72;?anK!"'L9Au$9usARIXQD:k)h<oec*=H"*<='FUlu8h?b`Gq:f``jjj%gQe-Y)%YA^T*>eTn#^HTEum(M;O&+@9CplCg%D8/aDkqX*9Np&,Kd$;*o#9Ljr"!GV5j6fL*,L]_d(OqRtJ+`O5E+d*:([&7hd,iC:Qb:ft%7_Cm0`<YV)0YfmG]5(]gZ^iW<jbFq%2U_o`s7Q*)c[Go+6!n2QA&`AZ@@uDYm@3M9Wo7Ub0DcskU=51X:LX9PFnV(q!b])ZrU\4!%B<PXs>^t.T/o;Ir/V!f_r:J6ObLrFlh?V]2s6'@ak&YKhp?/ai?>-sR@=gfe]OtasHN*(`&4@"7Sm7djSaITpeL/t=0S@7$G:Ct=%jXoaB[gtD]]f:Mrmj0[W^NQ@@]!(`N?b@-%f1!]K[m5^ea62lC%rZ>\keHgIo%D^8^Ra0Q;g`uK,qV*Y\+oFimC;Q(O:UsCTD=fP%T0GR)f+*70rojM41@5K`=/($5TC)W+d&2>6rpp'Vm.Q($=#[UDVt[ZEf9bqjf'MJ_lItrh:@2@4=kMK`omtq;G^jl48<^A1=HHT[%-7ll`^V2kD;A(b]L#1bamAp+S)VdO-_s-i_60pFYoD!9WlRN6J\`LIY&,[3PF;H9B[-T>]:$e"=N*>*)[aZ81dr9H-LV*SPpAX$A%mu9A6>IS\ODR\l"P:i&i4l"p`3(<E8@&(GZGLon,X=q$8+jM%oY0L@GJ?<[8>C3-3BWYQ=in]/)>oiml(KYg9\"*sj0JR83lJh3U%(Y;9d7`1p3Qe/EcaCVm:Y:mXQ"?k`;qMR!:?XDV=7<h/jS+G6Mm[i51meZ=7gKpCu@10<e\C68?=1b5V6?>*N-a_H%5G@IZeGFS'%D,GKClGc2H)qk<'lbqcCmbqX^:#C++s8;/?lc4JM`m&&L"=M''%P<h%?Fs9O?N=m@bPA3N2\3/(D#C3sQZlj4H*ea",7m]n)<S%<%!$5g[iZY'tV`1dhn'3RcefEQhBQJNHHM,WrUc*-E:.54(P;R++2;,l35I'%6#EBh3]"WGAI6H5;q\]ujB_(lnpAEl:#-I`N^QnT;%m8hgti!](rR6A6n3E2F4ji,@+QOgP?:AOV[mX\"5/WJ8>:K]o=NsH!;ioU!ljiQ7_#.`8&B5qrb+$H=^ou#rsgV&81LBlrL%:>[^%T"i!cCq8H;]fAL2oV&SmNS\aif"(E_c2R:@AoGs9+g][dOc]<$S2Xt>BP@9De!LdB7d$,/'X$(SY48`Uq2Mh,r#iqqr((Vb#8W"V%DJ75oC6EKlorF>3R,Y98Bh7c?P>7<;mOoVj5J>J)'*%@T"h/gTp=2'4KP(.?g2=O?h?<9/Kl,fOD;k,Zh,r.HI\,8OZJZ2(US$cJ%([TuVb*]$aVeQYC1[TtGpqTk77s(i7$OT+AEqdXt^H$oLO_<9J]mFh?d.6nRo=(8u?@DVdOTUH5htYg@q>HB?QQLEc_9L8a>eSP2%?[R%dac9!+1/2a-GaX(+'9k?Sb_H]IVtd<"MSC-Y7HUU%9gl`>F3Fm(,:gZ%>?1qL3a3%W+5.O^D*H^[/5WYtYULQs:#T#h;g>=I%$[R*6_A0^\nES^Y&I7K#BZpJ-4L0_/T>:4#rSrfoHP@=#Dk;HL9CRsf2U(X/c[PCS1E=g7Ie+\3h>->WB//4+qXTc?8gcl@2E"2H%)U]ZK&fT4_5!!.'f`QPcI.7e>bP`?Hr3B,2=)C0J9M\g!rqo($A(C5#7p,/)`6+F$S5*-)\bn*uXtTYus3()[Q_-L@^28>mkp&7K%k(b$AVMf>@Bf"Pm@cZ"aDpC"ch0%$#YD&7d/Up(1#!Vk\X1(kakV"tCrqJe89Nko]SW=gk%&I[9750<@[$:ALiA?IPqSO7YL\ZM@%^V7Fn5(1m]r61S;Is$4ZP/'2e;#-0G!mp<@OOfIY=ShOK[2;ra2QQcu[N>/;c9$Jnj,P8[D1:5bf2nSgddW[=%#c`"^9q/b[]8Y5%Id2,pE,h\jq9QJcF_ifQJ,:kA\c20!$].CPkpqV8^WoaFIe_F#`:(G.@d\XA/uuPSW=ASf<naCFhk.U[h>,`2*cDIhqLAK2FjL@P%(Sm?L^4-(Drpo1$an`mhW/*Pa4)"h(Q+M9[FRkaSQHt8o5.p'*:MUKiAbt'j:N*CCT%k?YI!,,s6Fn\[Y[Fu(*T-PMc^[H(>s8L-%PD)_o20[!tVt<8!nk)5l6MOK*q"=I5mYTc(dr4r!o%2\=])L)]nhaA=I$._r@R=A[]"#F8m/N3`Yjp:Y:?f%G%l/"ZP-%JTC[@kF%Z*\>,iuo8Flk'Xuhu0[@Vh8?J?+esS[Je]-qpk\KpnfDTGGc69o/j?Tn'jD4;sWq;`JfT8\#5R"4X<t0HG4\WUb%PPWGhaSc.W-.%2e?J[$q%kZJ+DmklLmLVj;Z!NZm5;6@>qg2G=2pBc(B6(j1Ci;pb$2<Cn9BhG6W<r!=+[/nDrUKhWafiG<3IsSW7W5QfB#ca#DMc%3R-s=rp:8Pp?62`%e9,2+V*s]Lr7L]IeZlsh*X<aGcTt&4N-2a%WQ`[6Tf3+ihN\PXr]aBe'h+^oM-cYHD_E=^!d:ZhW4l9WtW.!%_[I]+O7iM_-[=?0_<'&dG_Zqpm@<*iO6!ZpJfjCXM'mOoQP2LW'E!C)EseadT6AN/ei?ejha]bQnki3OFO\c$*VK&"7m4Q/;,=6f%4qB56X0/"t0n0)kX`mNc3*[O%iZ/MSg,\5'irAf=b6.5h5$5@Zm7PpkJ\Lh8r^fW,0@T`#UFrDBjq?=\["AqU6,Yg:):7E1ceeQp%bH<TAoX-otHA9^aG<<N\f"r<IHSbC3e,T0qFR\7qqe'p:'&A?4gRgGaohF?@FBD1>e,_e,"+EmK`gal^SD.Jpjl"QQAN;<Ls-MbY%E=.J0Wq-GG%RZaJj?DCTQ@'N^rA(dD2m=L@&6_%E;qf$3^rQ=n3.CS?Zi?dRc]es,<)Xl553uR.5.NY\_jpTRpn&&\0Xe](g?s4T%/T_m@Ib+NF*R8)NDT/8g9F4a/5+GN5:@$]X)U!o4/]eGYL?3BG_RtIC0e`HTbrSVmY`uGJ_I9!%oj@+s%2\$5r=JU0Vg+TH!aWa^%')QJu&W7#jZ7j3QpX:&XlI=D^KHt>SC)naY93rTYqCKY3o4"+nX3g\MpAY2b02'M!.2>GiAGFHS^>P\:#M9]M[iW!/f>rD9&GWe"%W7a+]@8@&%)2=J:7$`B%k$6o^;4h%UX$.iIqXUHH0XmnIIDN8@J$#p>JcK<i0(.m?J7"@m.4hf@1EH0PUlFcnTmFZ>WYc!I92#TA%;.&ZFc$j@5J?S7s!iA8#"%/Z"6fu*MIAm4GBkb#:7t\L/NK:'"Anoj<</'6KVnBgFbl%[1]RebhRbQeSRm)AXWRNRk=JlMT_L%t$%).;me<"A*(Eu>[uU$U&>(Eh%Z2<X<B5Tr)>^5j^r%Es9q'8!g60SJ6>oZIj/->OhD@.)bX`$r/MAjb7BX3eWcnp1DKPd>Z"Y^SKG%kL6[X)n]U"lM=<,&sGPJ[1iEUgrT]6&Yq;4M$!)\(cEI*@#*Hqga;tK]5]SED5'te:A3gl.^Zb39Y]A!'jH2L[YBF5BaTlLfn>@-%_7\Kl>q9;t.J]PLEH=#H/n=o!lU`Omrgk?U3\"uXZ]UjQk'(PS4oknBX`5$rYRj/U$K",/NlB8C_1k]r2>7<Kd`nslXaO5]E>2^k%^YanTKnl8^H#^1=hfEl-UIoZPA02">c*\IL#:/KBXJgM^r;s-YI#$i%<^DOh><96^ZCN?`J/u0Q<.km9[Agk":hE5Y%<9i39SpE*%,hKt8=0E5FW)UeCqN+Xn4V8mqO]&*r'D_UoKe&alIZeaD1sR5=B.9(_1t=A$P[nn8eB_\66ceJPI6#0'T"0sl0_[0?:G!#!)p%G@%EVcYQI$b;5J/3,##5-dQ/B-,L.\<.oq(;\-"DCMrUAD;XD!k2)(LC%aLFm/nbS6DhZ017-1P'LsEe^scJk,9\2LNY%,*F1r38td9%E/\()$OZRkFWOik01*n]ZefbW0Kd%$nFQU?B7EiYluYHE_7,<k?h!eg>o!Ze!MoAf!ad\3cS?-!:(]OBas>jt$*IJ8#p,OW.0Xrj%rsFFAIMNL\XW($;+sG6eg&71l7)1/OJXN>6([/;$d;C1&Wp`N$[h73)Ii)F[e46)CG15'&&K3<92&1p5lG@(_OEAI%&R-TFpneU1%0gHZ':7?j80+BhikRl#q0(\F5fr9SWPtO3k4*j/LdgQ;"?BO.UV)^2$K%&LNH)DEqbN:urfQ4g4?)#Fmq<dW[:Y-hSO^LP8-97#V%0_SJ7@lF%-DTXZ5WVJ";J]B(]NWaR%Mp%.;*^L9d_hj%]V89,=I&1@"_0u0.k1OUM%_stc2.cm;#"1LO-(+fRi$QX/csQ*-Y+mSN%?<J+>F#Ok()fS$/quY<DS6"]pGA!'9jF5.9`G<d(3D/&(OS]2'@n,GR[@2'X#EU0iqW/!(Ph&;Z^tcCZM=rX=Caco:`<GJ"fX,0J%Q:m!alC9*m[nKIi!gAtbN*S&U[k@=pjq,Dp:f]8u#(La,6s1Fk$gFW8bDap2TBhuCR%"_GSkC,7VW@n<'iarh^$JDGQ*%r+(6]PN%Uiq&#3;e&AD>N`WM!3PcTWQh<lGHTF%;B`LELj_cd$`&ATIEheU<kUf^=.04#+2$,f>pKE*FQ>;]>"\?kqhcuUNq^6+T'i@Nt1??%l3>g"=iF#jLG$e@^)QqdBUJbdYJ)#bB$>h2"QUpt9W'sJ':?\c(t8<Kc'FZgYeJVDbENcE!b=-d$8Qek0^GmJ[LTbijM"#W)on$L%=,/M\oKuR[kHn(R4[8"qn"fiC3J`47=a1+TAd6FN-ClMLDIA6M-#NaHlEG_`6(YBRMVK9K3<3GoNngQ94!'>[$u`:k+[LkFck;p4%`f>$mTn%).@L=7LK_!%9a[fK6&S[5`F)[M,n?[_H9E1n&kpqp&qPe-n,W[UCXP_;)I'd:l7(8_XO")GH.+$42/jKCe&Wo'5q+`%`%i`^H,e.QN9q63n%-psA;^]9b-Fp9h!e?d.5OtcZoLhgXg8.sktbJGTn#+&SG:5B"N)Q1n$eiDdoC4#ChR2m>'OITaq].DlV5-U#P%d\ppgA!jBWmb\#Mm8JFVc7k0eHJ[)(Lq[eQ7G&'UIeD.jjQS/lq\85H'=3.@)[aXZX[7F@A'.>h8ed\*KGBV7iEK?>7p&-@E:rHZ%j=]Wt`JRN`*+<_ZA6pKsD'GF8Y-as9Dks)u^fZrr:STM>HJ23m5;%m+D(rnAK4.(cZmV[ZqKn5^aKQY$fH$rS#&S.?U&RY+7DgN@%+%d@DUSA5<abBD8U'r%k6p6Jc^_@F=@%n)NBrsGM:r1(/X_:)hQZ$G%S3)X7!ZO"Q2KU2tB^?Ac!,Qm`f!M,\>r5n.D(n@k6Q\Rh%#7I:9.u\10m8IAt,7V>eRWpcQ1aq9QK4.(bHJaXJ"ctKir@6$:72`[)h5SPcaXZH@(N81pZ9oFWqlCgNp\quNIfJcKs*p[SU%L!?%5],ruZIOE:0Cb#MUSoZpZ,=0<fK^fh@=_H$HL&.MT3glNC?a1S%4#^#5m9:9hj))3PpYCgmi#.BE]kkg^N]=o0L)_c0.O'i#j^2Z%M7'H?:jr5WG";V$1]+F4EpD5r=t-1/.DiiD1g!g9WDAWM$@!3Ikcig.*pXLMT()5\Ye\rWb5E=V[KFt9X\+,=r`S<_@uXT#KoSc<%@NOb=5L^Rc;[cRFdCWJpWYs[I7Ss*te@ZOI<IT`aKYH^Qr%3(\Z?Cg"UC,BnVt;g&Aq"M!!\2u+Y[3QG!*Y$VR$L>Xe9,3dG`=Sj%"gG?&,fttNO4fKadfID!TeE#GMa6(kdR3j]EU("@jm4.&5I8h.4b\(DVgs%=G1$E?^N>j6)sB*;ZdoDGDiY/%q$5-Cos5Ol">94I%F?r459`UC_37VmJ?&2kWS^TmAQ2HtSPX9!?Z,$)!IXTpDk6Nauq`8P3FKuXTnU"OE@SFZtX=nb>oRP)?*&2jYFpBa4[Ll]DcF34V%XoE4(DJ"sjc2da0kU4b30VkBNiip^T,Fm_q4+s'dJ1WHQ2[2`Z$l',gcG!;F=AgBDP9O6^Rn[8;'[]n;^E[6g@)mp8]ZQ@)"$jH=%'8]me2>T$]!b6cAP!\?1<F;.C;bp'UIs6(mAN(T[@_<ApKAAgCk?Bk.s3bB\oQOKB%MVFKCoiTBHBAnSXh^6R>Xs-=KR`H(0F#6!%n;a$fln7ZO^;uWF!ie>mL?YD@:BqH0Td[oAXOH-'a:BJ8MFnOTn44;kW:EpPi,s'k$Z$Y%:["j_J"HV$N?J2i9gRJ>5DNk<rc>1R%F7;O^m!(4(goF1"(6ftNk<[b2oGHHdG\a441Z<9_.J3H<^T(D6fO2"Gn6\e23uW+gCJGYuMXDDU99O;.qX@G.KX=4i1uf(`.#A!<%FR5]MSajZP2KmKPoilTaegV*AbjbIEXh(#l]X>]2rWM4%nK&($La'_:>?pC)c,K_=p#<dE.+VtC=D=KIS6Jt\J`/0mW<a_=IX'SH%YgEPj5!7W(O9W2R#fi=['IVNf@HbK/GCQU![isqq-kab8#"Qd[m&g+RH:W^FllDp$VW"L-_-Dqq>^FJ/*'AC<V/0Ocj`YuLG+(hX%F6lj\a#XmdQ.cdib]L%tPrDO:PD[t96)iOG?)*B-+Zldo*5&udZLHMY/o^m:(q$5U#l(1ee!m8g\*>msMU2P\hgffD`!b$@q2V^T%])qN%NmY\ZRgFSAM75^%;&^'ECBZ^b%hTe`CB^nVM1jue@8DdMDUWfgnZj/36&dVTC%q!Y#"OR]YUsSTk:WVhk.^4&$.\AO9ZOHN%Q/qif:Gn]P6ngr6K"E/;c3X]h3F)[*LK=."?jWlNICA;=8S[K>inb_dIgli?%SQA+j@<MOq9J^^A!$k54;bEG:`55W3SWX!:S*#+%k7HI'mKe*u7+OaHd^d^ul@WMNAr\.%)[8VX:d759ihS4d"s^bLp(d'N8uoM6:?H<+EqG=ijFJ<BT/+h4=:"1&3h+qcT;"uBU.hpH%d1)##>R23,Aq@gM)me%JO9p<Z^^CTX,B5hVO?s<3i&:[.NJ<9NX$\pLkkYQZR\A"Y_0Ca+cctuJ2bXm<1@U6aI&g$>8R7UQ%+1\'%8B(eR`#"c[%:.E`Ze8p"kM1sGTHiOsVsC_!Rd<c_d9'LFrIXVFdU$2kEeE^:Al/"jg;N(Mqeu56VYA2B3J4i;#Wu"[(>Ft_KODk5%raq`AFM*3YD0.1X&I5rp]@qT35X=pY_L1Y<2\B-fqZrOCPTOV59@ZIFDua#aB]_GJ$gOTN_kl%<FRe.Qqj;A"TG%JME'\\*>>PIK%K,mZ)XEa?BP)SA)HtMakZaXi:5<(61LnC:;Q_;s3X:\j9S!LIj]/MJjddUcW?4!QY1q_$YZZRL4[3Y#kc>:d(XGH.0T-!Iq`r$mk%!.uud9Q!js*WlY'>1!e@9W!,'_:&B+!1gL/b[ccWXV>1oNC2nNY<J.s$j]$8krnG?5#hE+$lC6i[sO(bhrY)$Ga"c#UOYkq^.2Y<%[aGIt:PsZoS#Gu9;Q4mFs0?Ej=Jd^2[.Q:Wbct=<FbG=Qdj5RA(8as*9T_%D^u:+BI7gkDCMmQ2^^.'tSEJg7odTDd&_g0upnL16%dlq=_J3Y5jceQi%H)5&.U@9"DKI?c-Z=tj^J\.)l<a4#:c;\E/!*SH`79u4-lO'5#'PEabO3MJHe+9]/So8SIM4RMZdsbI?:[5]%%@C9,cT-86h%FOcaOIU5SVSsSE%]DE5a1Hr0s5I1(L#WiH5I`sKX(,D=8sMOrXd.15O1->$Gjhf"*H,nLnPU:,@Gr%*J%PsV7p1-Y%@K(MHo%_g:]Cr@>8W\ul#X`$CE-2?NGZUtEld`]V_L@O5HlHN"gb:hKL<1#4U]dku0Asm)SCekPg)%2CbO>T5L$ab>`,usQ&U-mM%7soOV]t+EO9Bar;nq]VmbJ7m/\;C_M@o0eN$2]D=.FN_5<tqqB:lAEV7[X.s:2bI*i%:qd@[igeQlgT^LZf?4']$J%G)/NO]U'JG%=^V[P$`kMWQ*&N=MZ)7`2n7>YD`ILlcRd/""kF6k^`$f#=Mr&YgVibUO0jn_//^%E$^A%#UR!jSg18D-gCca03<Lg?)=O.6?osO7%PDJ$#bl6<tJShsOC(ceom'$,lfj>1Eqs3+qTNpP^MZ)'ZZ'rNXAoDO/@l:Xr<\*`pjAp]WF_\W<7EkbB2[1X)[8*CarSD6si%#P#%QV&0$DJljm?pKJ=)[J>4nci`cXFLf-!V`4UlH62uVWfeAa^G\$`:m?SPYa#P(c^d>V/fZ@QfSDLcf[-g-F5eq,JMIm2>PBEeNi<r%RQ\n=It"i@K[;/!+qpLt1sm-?;/&QL'f$,HK>k==&LPM2`\7f'YaNH(4tV)n(?4-'Xrmi:&[=;72J`t-EO$Bk%*<o4bNohk>RcR$%quJ(*`iV09Hj$0RFf.2kHF:4_?l5<q<oO*ud3lBGiRss-`Q9>/rkZYPS)]l.Jlf36&W9$*l_VW?]oN1\N][V9;t)0+3\s7cQQU5e%(NtG?<aa6bre-:9LnmYXLOO6@kg\L83'RU(4;OdfZoIS/9iXS,n:%;DcF&j^q@<E]^rnotmiGU++l^?^$0$]d@G%eTDgd/S.Y8AI%O5p.o'C./0bV)\2];\dp<Z!FhcP!@DEJGf[o/OV_`E'$J'Z`P28?blG?<"W/lq[Uki.J"8#<6mmPGh@:]uMW+0.7<=2KS`=@;LgQ%NoiA9?-(qm!^@Lc$*R1l.81U!]-k0TW:Aml,Z5-d#l=hAF%;X0T`>-oFY4,IDo1u_3!\BCC$R:jd5)`)[L*[nBg][$TtbC(X,<hJ%BQ/RN=#SF;'$QA'6Gc&*$&RaH52W&Q@%(?bKX&)8Be[p6/2UX:Fl>MbemMml!U3N1^9k\a_KUG$CEO9.?55j`[`YE*3i)A!"eCGY%![%$a=%ip.PfrE"0hsImAtDWcN?CoK:,H.3E()7W+q=I:NpsA9:Xq.ViE8]]M\OkS83s^`+o<qp$H"WE!7iTFEPR)m('OeRZ:F=%%G$P)u%T=Mi2ZVne"OBTb$[kGRM=Nn9j-bc`>2T\PZnbf1oSY<G[jkkcAG$KGEpC^YVmCH/=AVb@V9(gU=Iqf.'W9;;]Qf5]CY\;O%"D.@`Y(E_XA]#Mbl[<C;`>W/3'^te*(6fsVB3s/@ZGTd@G)0B1'JJ$h1'Hep@FnOR-WNudL^M97;aK)F/1<mS'R6NghSrq^",PXs%fe&/Re9r*sh.0J]:=4>jZ(RWJ#caO+#am1(bhEEi@K=rN<]:-3KpWtib3j0_PT?Vfnc%AfWUh]E:j*\6[n40>_f'$BM%V^knU`Mk%3dF$E+Y"o/O+C(A"Ao?.>H+fn_q8$!OBT>5(rVAuZoA*]#c$GL6.!#sm.i6Y@Lc7J0o,"99B*ZHK%*rI@I,P"!FKBNOs:Es]<b!U%ib]l@2f/^Qr0\<9W!P(CC<eR#a=iK5Mle\,+6X4Ho*/e_dSC+0Eu'CYW?oUI\RgPrG_Ha=9^87EF6Y;gnX`9A(jSSZg"*1\&Iae#%DOE8lO#q4c&"'2>D@$S_G/>g?;/U(ZF%ZVr\u.tC-D:_PKZW:h!_bP<k1F8)a'-eA@0oIX0Qu-S8p1nWQV!`rjM&N)EUq+a%agJI%jAq-D__abAVEr'S+V@'%$VEN;'oiB;4>ZM*)pa33q71d&!5g?L<t7($[(;Xi_Bg`HOH>',RC`\rGimd?G=cqr>RV;.@YgPJ3H65Y%GK1iC,F@IqFb2fr`A&/rN4Bd;bf)8E0"lH9(tU!AA$CSBpMP'E@b4lGog60Hc,R7$`+HBd@P/Znik.b)AY."OCF@&T@-7g5>#rKX%/<&53J\0Rl`a'!/m]s;^8/lqLi@]ik:Zt?dliqc2CokW^Ap?]4oG]-JB&AXL``i'?+KQlE:=^6DU?(t.0]$aS9jP&KqJqBQI6!7W%^+f&!o`>+!dg3Q-GnSl8[*%;OYn5)DY:i9NlW*$="]0%r.s1,$\Y'M^68+RD^bb:TX)"B2R!K2WNiZX'0*eH=Qc%JM$]!EZpWNN;%^0_@[h_/47&T5sr$^[ipID=P[[1tgA"<s?!qmAcCpBsI$OK>=n?\jPW)>\fuQRR6c&''d`^0`Sf:u(Af4"G>mp.c=3!r-^:E/7"S%7UU9F--B\-%\u.kQTdSEO"gS(Qi[<*&Eu.$7fcFn,:o!oHgHJAJ;TD;-lBTT_V@-%ZW)_N^tu$*9\>(`-%;0p$lnUqh#lbLi<L2e%RQeM8#,ISKE"%Zk49J-mnUaO:R+QKhJt/R-Hp[9X_%9a'!g.hM8.],J_dm#m*n/M4IWE%nJ.=So/nt`b-B^n7_sdZU6or5][lJE`%a6./UNoIN51uJDj"P/JaL4IVngG24rH\Q291h\<Nfn2`r&a!Vt(VFQUNT,BP!ZF/%<?c'4f97EHf*&DlF\W8s(,k7'-S`s5M+N:W%Rm'A?i/_DA[(DFZM\@Ft?_/EqUgV88R/"o;`Xa7CptnU6*OFd(3SHi^,7H7kS"a[%#.g5R$Un#ck11/Y=r>aMds#2CTo`*8:_CKe%$h0'A#=CjdB+$;X@'D\mcg4X('d8!3:DH>VTL5'SK)&l5!cW;c)&63Vq#Q:Z,bs?;n?9*Q$4na+/j)\'!-GJbp'WP?^_RtlV9&+F%.n(@JW.rBHO5+que`[A5.81_$M]sVnUaCV]i=lBD8"PAF@Z,]]'0(s%`Lft'G]8G%`=Rn(Bs!&4_sTC,9njs-YaTT]NWs-Rh#:_I%Z]W-u#K_XZ4U)KlYSVZlF:_kmrsUj9d%umZX]fjq"ljr<+Y_]nOJ(Q-MCCuK^]W$Z"qZ1(iD,+r%X3M\"nZ`bj,ZYgO.9Yr%(^I]%,7mj*X`B!2*k2=Z(cFi*P@oFu9@@c,_j'Cn0Fm0;*+EeT4.AO]rfAu=ZnP=``7\M%3O#i>J;a_mk[^%WArhJH8nZGR`6S?i1CN,h%Y?M_&hRSW),1B[F:a$V.8G;b4W1c[O(\0>:1^&c?(@9[`Ephm\@*SEA(_UHUnQXM`hE3<A&<_R)_AKSl!i#Ph.gG((]`'(]NJJ?2%rUZXHYJfU2TLE,b_8s\3KUqr9.P7nCEo]]gXWVS=]G*A-h[0s^rr=*`kWDqsjWC^`q^7a1!&(',3sl:(^_>trBG;oL>3Yhp]!cgW%OK4"R"bWQicN,1.6QMES^rp0ep"T0idqb323FKb?/;_qmVY;M!3FL/aZQrTpSc^G]5-l]ed9%;u3eeL#;,!@;!P/]4HD'cd((1C*%9[?mBG3`/*"3XT?]OEq#E)1&aFn"Xu(<:S`,Kd'0c^`8'E?0iWOrracM?qg2`,Qg8K^40*LUITP3cSb-7`TX:WtZVm\$,+jkXf3,%)cAfdOE.R2cGfB%=G0Qmdm6^2XE`%IR3FloM4Zkhk:#D9Na^.QP0t<f6\6+KObn=Y.8cZiCBTBQ*$*?[`-@;O7ZJY_!0t4ujEQ\n%_K4/LJHL5r1$bo2:,.3OhE\.W,Z"r.@lggu(lRLCNie3o*Q*iP^agU@hAp$B8isX.TbMX<Le*G6S7:p9HON9>!?opJ*pET!*$&h8%*j4,]AM!m3h6IAW$3N=dXdnsI+W1puS"PQ(#_R-B*)WK`@\GIZh(\Nij2ES[3PmH[%+K:!h#)sp^`&;9g-Q9u8%:/cn0ckna)p]]%8RjK*r/>fC"8<'L.>E'"2,_M4q2E:1#Di9%SXs'p$J@<"8\N1RK-X63C(6;H$l01Dqs.#S>hE-->%RCm_Ak@SK`q&m;[aG5]uUUd%fSaQHl7;b-@rV&]Ek1/`\[KYBg'&HGJRtSqREc!H*kRPcI>+&3;`D!bGJ1:$)'lmG.g<f0?md&j@7e150oZM;aR&AmIUn>X:)jdf%LJEP=.=Pf^7EWN%UVKP.8gS?#9P'g3%j?0t@rA#gBMXLZl:89A#)VBbj`%B(j[kEQ_QiiY*#7a'X5OSShY5'P`_s<"pT\NH-4[or%IL[e>@01^[o4#cQrFF$hYi@U<0d`/!,/LeuOa9Bq/cbL-&Ki/86&oo0EXfjoOp-I_:QZt6$&Jd\_q_W*LuVu==4)H.L[EFjaS[g<%,_B)O)c<[Ck=oFPfOM?`p?`.7DqSL+FOh4"=oVB/qWWK$1"WIT42Tc+!P4@$@pDb`a5oEQ>co>IIA=9]J6M!Plr0G3=osAAS5XB3%:''Bq!kE`3r0q^;pFsYL$kk6p-I2:Z'X*Q22*]FK3^s.^f#l6u\/Zb2,u/A`%PWd:1+m4,hIfC/QqJ;`IR^r]iP!'#?UE0rgf>/=%=S83jk'fre*C-1Cb`TY>/91rF;TU@$qPO`%V/]O[\1F-N^bBA:'HfhV@V'^oTlXk@*T[25ZaQY0n7.Oo!.-NBUUrd_?7/Eci5/`#%bH)7["]2r6CQnj4$POE_$,7W?@11P&AL&L:LO`?]ddls^66]/Q+A2r2Q8$RqP:#S%,>Z2ke-JarKHV[:.-@<3_aKrD'V&\6OSb\\%E7./AB:q(7:%Y-CfhJ:LR>_e+.]Cc:UOWM?lDVQ&j9qH_(DCTj7UR@MAo64SKu'*=(+/Bd'.+E7_Sklfi$%\$7@#W$,QJZL#[Wh$%*A^im-8X4lX2K9ZX=$G1QIm./a:\q[X/,o:Y36G1:TM%#[N.^JVJDg:WUC+f.Dd(<-3b@*0EmK*.r&ZXJ2:9V9KiJhXoJU<QIT5K%Lm]b-'6Aj.HB]luZ/']k9I$^sSm]9DEC:_r"J':uZ(`m;BBX,c#$>9lQ&HH>0bpI7lm./M?IoUf02!aPD^9kc.Kj^f$AHDr;%!bL%@]65')Sd4?+PYYpNtc-'W,)c]-YQp1*N/m<Su$5Q8.71F"X(-1Kcf\(-OS"PAk$5ZX,sYe(rhl!-MLXJd:Vq]pHre'Jh*&"&fmBU%+A4nd.L\%1KjmO8_93l%bm0=d<>['[$:sKKr/2/G1f]TU5Y:NBNe!e<@f-WM!>CPS;hZf^R48V$^=%VGNsm^$V4I"H4mGOUp<OJ?%*g7$6/]A_N#SJQ/['F[;jFt_iga\,K`;AL)h%.DF=:#VRL"16u6+.jFj8At2]FAGK@AKt=l[E678+[#W-EaP\*K:NXIQMXSgibYN%KIA6C0er@U_q]FVVZY"X#J!/qj;DMF8J1h/JB43nKXm@QpSGUA;rQ4?O@>I`LCGaL3]$O/Wd+]il8uZ1T8t7clCkk*b(Q3dQt<&p%F`Ou[b-aA=V0*Vc>]+h0K&A3do/Ek!UK7`rZB^iIc'7&9Q43@DLLn/XmT40L*umMVIE\f&:NZZJ/HF,qMI'lPPW4f7>6$H::iX<Z%GZgb#(J,p.Npt*j4LWud\c77sbX/rU"1Klh_[Mi_OlJA,:i=cK,%qr#EQN?7%Kl1V4KZh98YS[N&#\KYJ/-@4X:Q(h887a.h:7:r%>rJgA?,D,ch2t]t,mPb;.Ao:9,]c#JE$1)=<h,`41L72SgeDbb72I11b6kd)"P#PJWaj8tDPoG,SggrBii]1fDCpASQEYqnp"\lZ%?VaDDAGRL]k$gHET7C<e!bHjVg7.Ac%V'oa*D/b+6tb2s2DnMO*N&*GQ?9q//kYb%'e0,.!.M(Z7Vu'?=$pA<EI[!/ei7YCMcb6W%*<l^ob'iBUKsF8r9R&Dcq#t%:4VTW^<"SV(A?34U<A85:Z#BpR\J#'3frlC(8G4RL(9uD"!\Et=SQQZ'\4I5P$gP<],esJbf%a@g%j]7Hh]:(auJ1Bfe'Jf9H%;H!/Zf=7*K/0r8LXhR5=`RlO[R3i"BAo5$AcpMElu"+dE+L3E]EAWV"W/8)nI8X6"<=.B!Y.l_*L[N#%-eULZnn'rQBjS_cWi[%[&n)j_!9UM+&\p]XX9GnfJAYL_7k_rl\fikSZ_j"TM?>Ldpf:\&/aV=ZcCkS5Et/pY>Qf#9F!=?ecCt*D%3=.[(]`\>'0^Xn5s2,t91n0h^%FSG)m"[#r!\6[06YFP4@SQt1(%.ZA6g&paJpZV!SSE</C]spc+YCEn*hPmVWcnsff(sr.74GAZ%df?-W3hgaa,o&>.aZ_uh.SSc2=uU`YHH.l3Y$F,dJS4;O@iAD/nW%;hX;o\/U.Vn'XE6Nh<hYQej0\bgAM-++>0T-hBt,WSNbQ!-%CWA8^<fUkoE2G'eoc3ZFdpQ2,NbJu3[G)8A],ens3-d/Qc7ob><Bs[X#&N[oL9B2[a#"e!Naj!/eClVdf)Yan7J"MF+=Bk5]_B_d%Po2'A/C/t^KhT$r(hn:F05JV8"Re<3NbKrO*QL!%erFGS0hkFu'+G:N,$06<#!#E(0[]O8[,[MX,MdK9KB]HWdf<K3VVr0S32X5t%;,,AF-<K<AkEokKc"M;W6ujjDd/n3Q'1PV3`o_>-N(i12/j_;rksL2IABER]'0JpLkZg,eh'83N\g]OIWO<[kVo2Cs]n)C$QiO,(%q"Me2Jnk=P2EB=R&o1BRc3(i)I8.Z4MkU(ZWV"WK6I9amjM$7>(fif9-3pLE"PM+%7K=hB7X*;E-S/AVMf/b^ZHf*69M<Hmc2M'R%8c5,?"sS6WYs]X?JC)KL?4e"VAiFZF$&[YtQ&])5;X6VM"ChCH?7e?s-M2?>qStXaY\arE^b/&iRQQbc(^^L50p*9GG%bR7Y7"r0%WR't^.q*n<A^r8OThqEK=Bhme:P3603V2cKm!/QOGZ=m(H)sfjiZ.^f1b%K24\-TZf?^iT9Vb)Vm67DNhCB"A]cFscV1>q@X`OF*%NPC;R47#7UKaH^?!Yqlb=)U>JWKI+O%1%[;fX!Lf&6g-NPq8?9H@(/a]a_8=(V"[3)j<^4TC,&&TReD-Q^,iAOAhP]&rd34`K1=]%kX*JJ:Jk7q)Uecb,,PEVV5I*G-E,Ksq:/%n-GrMel<"g7;7Zd)#a8S:72LRRFclVt6t>NB9(JdrX_)i0&=(?Ke!UpA#?/XMJa(!m%hsP!O2X04jf&ZNl^Pn\^AHUDDlte!9Dk4ioAi9_0SD<6]I/ZoD0W-oc%BAko;K+"neZe*5K1Kmu&'t?m+mK)9R%"dRZF)g7bQYdj%Z@S)n/nX8m$tH,5*KCuRo:5OT=A=pR>^5)K9_[0A!&6#OBH@-`;sMr-[Dc/Y5FpWtTM8V"<2l;[*QCEQXdkJ@fap@FKscF<Fd^4.%N`n`c.sZ>*Thb]Qq#n".\%i`@#*9Mo$klCg+KnU\D?2FbWa=^R^02sYQ"sCEH(&8-aT!TI:*T;_WgM#n0jWtZ+jD7Um>u]VJ9J'l%/MgJ6Lp.!gg;q*.:4J`Z/^?]IGmj_]Kp%'KN"#gud=(>qQ_H9,S7:GH;VnL?,([(QGsnrj.>Fh3M-Ln;VU>T#B./SjCj,!CftlT^%;7W+T2qI?oO]a4TN3\':'!jN<),`=VQsu*I[Y9p+%C)]8_>qdG6-T_Q?tP,1ig,>BS_<##kH?+9.pUh4>*9+bD5BcG@G)eB:1kF5%'2/k_&Ri@@HJms/1>](jn4m,\(Y3!L=R.4%6uh$;;3%/"hH^PZa6X7G?J=3W?[rY.2A3(OkUUu41%#PG"mqD8Sr\S'A'L2s$j^n-%^RP%If3/2hA?Y-K7ElMIjYpT`.Yl:HiiPAgQshPVh\5)#NRM'^7S+Bd"l_iXR)rZ]eA#`b>SoOLN1:XjB4IC[(M\L&C!hul&K!g3%4P=4p6k11\7qr4_Hl8(I9BueP[.1BQneT=V#1JR61uCnaYAiJP#_Yi%^P<+A.)Ra8!`d@3$E!tG@SkJjj(7To7[P/5.5D1&B,!5"%mS47%Ij^$@7@M-^CO;[i!!CqSIB0M22)`:D_imI;iQ3cpG]FW_4@/EKRnZJlF9m$nB?3+kQf_L`N`QdA-_$&T4@(K`#Lq]=Y_XHc%ip\clQ7K<j$TW?>:lu(h8u45C($*MEa<Ucc@=P>qP@<V0[(eV#jjphMO!f^fT+W:5]?@:qD4*.)Qk@$@=fXaP.$<lGP9T;^Zp+bl%:RHhYX\AX"ac8_D@Z?C7$bo'Y_XB1enBXBRKanlgjaFd`rsl>Ke_-Ah0nF=T+fA10UlL\h%\/ZR$BQ5e'>G`-@`1qHF'P:):(?>F%YAXI.Yr@V`Tq3bgZ@Um6C>_$E%/`(UEiMM0^\r!RIYY1Z+/_=tF@N6M,qKZU/MR@B%FSE[/qtJQrY<9SIMcWfYoYk45@T3$j+nEQ%ei_b?C`MU!mOAEWHE4Fo*k=8BV[;_eO:6bo/61jjb`lFh/Q-_'G,A,."\c0oVY+E(.BG"6Xe;hmGV0_+P=;<H9^?hgC;#im.6+pM%VVdLic+J"!43H/`=taHAje^m9nD'1tdc:tiH4;YVd`/\GZ$a7]FrsYbf<)ff]rO<DD]sc]ZqX67ZFc`4*#j"D6@("`DB1(J*b*$Q%R/ErJ<0`'2<9hHXVNeta>HsP=L0G1mh,Y[RgVT#VpElAHD*V^Ah&j/Wb3i.k^-ARK4XY^A0M)ct1jZ1Tefek<>p4$m2,)6&%Ul[q%b[:`@&dkrTHAatj<[l!H>0QLWc*j"^#0USGfbV:81<rp)K@jj179'1P/Il1]F@/]WC%/6i/MsN.%T0"g$=fj5l^s0FQl66a>qt%O%@RaRWl/f%&X3<'?FdJ4lAdU*VOr^O>oT.GH6q9,%HdOV7N;7.ca`d-_GV(%L8W.%J8K^s:jtq-&W=e9QgeMc9Bu".MAPHkRF-P60%TsS9_1)^LocEsZ%/]8&iTI5En9[;QujIVKp\Ii#_N6m00KLpW8Y<&sI-DL')`cNH4anZWlX"#_m6>-f_6E?IuA3-k&9SfAAFrrM,%CWgXLeo-Co]5Sbh"t!j5gJ6O7ka]MReA>md=Vt3Wm4IB/_\+Xq;aH%>il],oG,m`Paua\'%CIlN6nO@P\QOLF.[PF>R>'$sZA7Y&%'>-j;[Y1ldYO2ga18AdKVT@$`I2Q4.nO,mW1g/\Vftur,]jpOgZ&7C=`(t#i4(shH4G'Mcd:$Qo"JAKG2gE?hd<2%>3D18dCXptj%9VO3%7oDT(N!e7j_<G>JODBq\(`ar64%FSf(ZkcPr5BoZf]7m#/oB.:VfCj4@Dio%D.R-tX.gBL'rL;%GFrI]Er4=/+2RYp6DTkt%M48'^q\Ea6pZAk6#dG(DUnZ8RO?aKsjt7Ll&)`WO#`7diG6>]OUIlgPO79c<ZFs<l6]Y%7C^rtG*C`U/M\5_8Mn#L`Z3`5W#d27m%imt++%[*h\\Aqb-Ao5DsX!/<MS>:g19SJK`@%!c!VFD71-;)V%lu3&j@TO('5a"agaY6PMN8-.qeI4(PX9W4)9U8*+=BZ<)9:e.R%^)2>2Tt!eirG]hG<FAUp)9+^d#1IT9`W_\Bg_2/-bHuk./7PdD(:ni#5EWjd9,p/GLI_>[0Quffbg&!Uge28GRBEdKGXbHuaDs\[%[SlApkqGCjcB;8AO-8hii3EN8>X7ZNR@A,l'TVZo=%)9h"%nHT9ad!h&N]7=2/B<4q[=`!B4VA%JRJfcJ`#R@n%C61oR&nL3\mE>%g^so5.'fLd%U5(W>b+P(].E?B:I#3&f_#4<FZ$jpgc4r?5lZVRpm>ls^/R.*)qeVL$Bdb/EuK9d%;-6]]s,2V]Dk'@Ntf_$Y08>Y%B=3Wn,XkRka'T=d*N1?*KSO^J:Ti7UpsA<7q8Zo+rd79+H+'5b\?Wdg'('rk2,J)ufYY_k@>c:JGEHoKEu10?hIP6%5ooYB+C>Xn%Y"(Ic_uYV2!NT]!6nkg4I!*jOd_o`5_cq')%tt.:"ee2`*_M2/Ltj.e\/`mg\`fKI4\XSSBo0n,"895VL-9:(n>u3N[`@GOKr:!>%7544c$%:U\,PE3ZhVuK59JT[2(`\_k"'b)!_a_S]06rJ,q/)5e,6dK`o8#J6@P0lM:,Jd?5jk\3;fZ[`(rqUT=[N+u?E\#]2HQGM%oMHnh6+VSS#dIb$H#S<>$8%Oughk#c[P'5O`"c<c:I(/MoA`TLTp*5SRhKgaOd.=iAb8]`[o9hG#]=?TfeAMX$-+7lnn0qm&152l%N-mJC(hlP.LTV+gLC)kB2.4lUkqFTQL@5d]J.\8]/K6$-%_o)P?qrQR-P6!-pDdj\=4FgU]u[W0FWT+>#(HP%XL:878;9u;Z6+::%D7q8PrQD1"]-V&b.E\RiSl7=/0A/(a9JT]`\$ugocimqmkN.PjVYm?#_K3k-$s[=8pAgTp0!Wn;%l,O7U<gEMjDClY>lL[XV[Wm2%g.'3rq%Yo#]1t2g<E"r=ip!n4)0016aSQ#lQ'E\t6R$:34q/B%&K=\O7G6LO$*,J\g7^.U!M_`%)WfLMQ_OhD4:!ep_m[4B+`N-r%K-Qj$)`Gi$%#Br#m23;pkM8Nb./MT+9Ln%g2@RZcgIL%!o&pmO8T'M0%KXIEL!5K#5'Fm;0BM`-.A/ebM8->_4C?*C)A'X5+;8FS%e8mq>X-PX/d/TbTc55H`A4UaYJ4q2;S<k5pJ!0P_%gPH;\I2shEXeq:Y3eR\i((IYMg-C--e["uJFKNBR5DSgX9<gP)YFZ_,Oi:'%arDoI-d<%`(RI,kNie>8'#&d#rO;Zkjk^?s6N46]:Yu?o<c!+j[2b9QcB&_8.MJ%i-oDCSRFbq62U2WLJl("Mdj]bK"YgtGC1"mc%*<[e-k9%Z2\eaPu<XMnOGg:4B3T+@-jt\)7Q#'TM=?Rs*f,,>Sai"F='c]VXlL\86+[X%JqG!qgKV+5c'S8SAV3mFq?&pWo&rU"P%Z4qKJ52jWfDBl?a>$j:fmJ$5fTGJLmr<=`$Ydo:Cd`4fKmO:mI`R^Sog1W;#$.Y<bgN[.=*"b>C(_G4Q<TTAna:Wj6pi$L@(AB0f%RdX[$gZNqci-cg+@<`q<8N/`1a:\HB@ne@tE22&eD6mLT=#YNd'c(Z(&;e@&XYmJ!%th$^AOK''F+ecU!D(<RX1;7f0MJniDh.4*%+S.,3pK"<GbV",gcV;WG8M"fUSRPa)-<V"A:RaN?HZF'7HR9clF50lujLg90*#j2ACK&Id'KE@G<252MNl>l(VPb[/%^&K\+`'"P%'$)e)Cg=m=d*C(S1nT,$Ei7-Tjhfgr=aU:*7=j/OpFp]/eigmT?JL`0EXB(1/tFc:ks_1.6oJpTOfgOjA'!"`M%&-02(9]o%VDiu%@'t3i7JI*Zi#*jR_KQj;UkjCSDl.$,=)XV7j;3B>^Z7uKocfge]jDIXGK*M4il3lF(1A)lOBo&Ncl/Q`%W,F+)-V>ID^Q,t[TT+#%9,\fOV;*8o7ma1DcE.e>F1IkH\o'&OW_i16L-XKbUfoT^,:o?/<Ugn<!S(BUTV<uJ_d4ZKIFe\\OeMU@!Z$*Y#i#1s(+2NIm69+E%2nVdlDi^(Df9#L>nTFrjN1pnDie[s8M-2rZQ\]3mf+8g@e,[t=E9X;%-IHn.%*j]N#n"H[rRtsU!i(##].>].BR3tjOd:_k"\r*k%jc^r8[e6V5EIVN=Ogo%e)NeZqAlBW+2Pi^aVO[9Xm&SCB_=rD#6`6'`>,X>QAnI3:;\5D#59M3h3K\<C5p?"C_sMc],Y'`N#M-8<%:JLst`Oqkm0IOolL^h4E:1Cu6)jhKB-Ft)p(^c!^LI*mY>'WAT<)0n)[@q/IBchqiDHPBuo,t:Vq\\2Y?U;#1S];s&=jh.8B2tl=%KLL2Hn>7XH1I*ANKS.<W"WU4A?CTNaZR:,=[;242@a3IM[Q50?h+c@h1.u)I-_pdT"DEq]Tg"O#8.5c0qM(ZGAWe=\N[<+"omG5>%gQ?YG#JHV>_Y/%5EiMck\X.%AQ"rfnk5it0\\b[!cOh,)MWA<;5jA^C.nK=cET6AA%N4P`g)T2>S<TrW0@XbA#+XF[&6h0s\#QY@%22n6B;\P]_&h.5(_IW`2P`k+&D\/X6V/^$"0s:nqW@n:7hOOo%$sH9Z\lAJMluknKV2Ob9P"aK3Pus;?bo.RMck6t.](`-5?;Asi%%/pK&R[9uaV/30-Q<4$"3g$Ci.<;P&X5jmJUja/76&_\>ci7S-`5lBU>T0esQg08[dT;q`^3_ol[a.AHh)E@I\[[&S.)(Z4;FUGE%[L/m\5h''dCgc9_%Z[Y')ha<)S72#$)fusF+'^/_nqU*pH^8qU*-%='A'HY/UpMq,g:#ZT4>)nab!H-M0!:`eJD"&=DFRco3gF=m%9CcnSI2=-E9D>Y^2(\1-mC.GpFu/_.EIBVqgTRE1bu_[:_t:G(:463c=Kr[`#&WKp^slU415=g<ppY99-(6@Bd43Oq+k>/\X^98;%J=*lf.tNmW+a.6Bd9ZiCU*-dDJB/1C>>?MM>]`E<%"-G;AUs;>kD1cPa4d8?_'cAh>u..MCt5eec%i-lPk!Le((am,a[1t&Ec6)!%0Nru8I7\=`&=KHi\jtT^G!/dK#Fi[U2-EIlQINGs%r,?i>H8a)1?DW\7S#$?LtO>gUU<Yphb![XY]u8I>HTi3!>lRfMZ%]?1I#*Z%`'4H6mSbgF6.<77WLQNBeW4"+gk^2^RSD"`$nt1U^k,O\6tYmtk%G-i3nd-;"])j.imctHh!r?Oj:(#A;FsEFc1?WY;f;oe=6LOn%I,0g=:jn<9/f=4c^f8W7(N5/=hgk$pWS?VsA@5aTc,,-\DiB_>JCp"mQnCDMPiGq^T8P30'Op&dYYnJ?-BN.l/g.%Sa@=a))a+uk%eT:LpBgQNkAWss^:>a/FR?rMD'X8OQk5o+=/mt^B:m2qo<.fnnR@Xda=fG_7Q)gJaJEaW!;7;GDV<KVa#*(QX^l0$TXr(\NT$,-)%%K<TWDITD@Y8`kn"%QT<grSDiAu#-QUHTMa&qIMR5\cCW"Ga5g([#D&lXWRcSAA?a]R=ZYicESR2E+JHY.T2:H"Zp56pmk7a&5oA%EgLXs!;FQ5=uP(75pYHgC"f4(j-#1j%2f%)N#QUf,[okolG0[%%gJiI.cJf-L`Y\81@8uA[#\&4#EH;X\/DE<Y`n`%LV"Wl9V6c]%rk.+fs8;`LGDEfB?gf)_^V/KRGri\]*oHD#Sr`WlcS+b]n)o2P^Dn>&cYr8*YNOs#mk=\E;Ld,Ps7#jG?ft3,St>rQpATAF97<hJ%+92=hI_C,SXq_oucgSpGs3;.)PEKk!hgbXrr)cTDh^EVnH$Xc7E2fJ0"m>i95Q1NEVq5,*q>'t.2*F4eDuBRur:U!;s/"(dG<c)t%cblABKt<Q~>%AI9_PrivateDataEnd